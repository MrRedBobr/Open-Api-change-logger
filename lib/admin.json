{
    "openapi": "3.0.0",
    "paths": {
        "/admin/info": {
            "get": {
                "operationId": "DashboardController_info",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "admin"
                ]
            }
        },
        "/admin/dashboard": {
            "get": {
                "operationId": "DashboardController_dashboard",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DashboardDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "admin"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/manager-profile/profile": {
            "get": {
                "operationId": "ManagerProfileController_profileGet",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagerProfileDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "manager-profile"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "ManagerProfileController_profileUpdate",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManagerProfileUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagerProfileDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "manager-profile"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-customer": {
            "post": {
                "operationId": "CrudCustomerController_create",
                "summary": "Create one item CustomerEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "CustomerEntity",
                                    "$ref": "#/components/schemas/CustomerEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CustomerEntity",
                                    "$ref": "#/components/schemas/CustomerEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudCustomerController_find",
                "summary": "Retrieve multiple items CustomerEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<CustomerEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CustomerEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudCustomerController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-customer/{id}": {
            "get": {
                "operationId": "CrudCustomerController_findOne",
                "summary": "Retrieve one item CustomerEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CustomerEntity",
                                    "$ref": "#/components/schemas/CustomerEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudCustomerController_update",
                "summary": "Update item CustomerEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CustomerEntity",
                                    "$ref": "#/components/schemas/CustomerEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudCustomerController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudCustomerController_recover",
                "summary": "Recover item CustomerEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CustomerEntity",
                                    "$ref": "#/components/schemas/CustomerEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-customer/import": {
            "post": {
                "operationId": "CrudCustomerController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-customer/export": {
            "get": {
                "operationId": "CrudCustomerController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-customer"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-customer-ban": {
            "get": {
                "operationId": "CustomerBanController_find",
                "summary": "Retrieve multiple items CustomerBanEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<CustomerBanEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CustomerBanEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-ban"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "post": {
                "operationId": "CustomerBanController_create",
                "summary": "Create one item CustomerBanEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerBanCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "CustomerBanEntity",
                                    "$ref": "#/components/schemas/CustomerBanEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CustomerBanEntity",
                                    "$ref": "#/components/schemas/CustomerBanEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-ban"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CustomerBanController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-ban"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-customer-ban/{id}": {
            "get": {
                "operationId": "CustomerBanController_findOne",
                "summary": "Retrieve one item CustomerBanEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CustomerBanEntity",
                                    "$ref": "#/components/schemas/CustomerBanEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-ban"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CustomerBanController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-ban"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-customer-ban/for-customer/{customerId}": {
            "get": {
                "operationId": "CustomerBanController_getCustomerBanRecords",
                "summary": "Get Ban/Unban Records for customer",
                "parameters": [
                    {
                        "name": "customerId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerBanEntity"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-ban"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-customer-ban/is-banned/{customerId}": {
            "get": {
                "operationId": "CustomerBanController_isCustomerBanned",
                "summary": "Is customer banned",
                "parameters": [
                    {
                        "name": "customerId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerBannedDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-ban"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-customer-session-history": {
            "get": {
                "operationId": "CrudCustomerSessionHistoryController_find",
                "summary": "Retrieve multiple items CustomerSessionHistoryEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<CustomerSessionHistoryEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CustomerSessionHistoryEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-session-history"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-customer-session-history/{id}": {
            "get": {
                "operationId": "CrudCustomerSessionHistoryController_findOne",
                "summary": "Retrieve one item CustomerSessionHistoryEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CustomerSessionHistoryEntity",
                                    "$ref": "#/components/schemas/CustomerSessionHistoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-session-history"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-customer-address": {
            "post": {
                "operationId": "CrudCustomerAddressController_create",
                "summary": "Create one item CustomerAddressEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerAddressCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "CustomerAddressEntity",
                                    "$ref": "#/components/schemas/CustomerAddressEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CustomerAddressEntity",
                                    "$ref": "#/components/schemas/CustomerAddressEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudCustomerAddressController_find",
                "summary": "Retrieve multiple items CustomerAddressEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<CustomerAddressEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CustomerAddressEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudCustomerAddressController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-customer-address/{id}": {
            "get": {
                "operationId": "CrudCustomerAddressController_findOne",
                "summary": "Retrieve one item CustomerAddressEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CustomerAddressEntity",
                                    "$ref": "#/components/schemas/CustomerAddressEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudCustomerAddressController_update",
                "summary": "Update item CustomerAddressEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerAddressUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CustomerAddressEntity",
                                    "$ref": "#/components/schemas/CustomerAddressEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudCustomerAddressController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudCustomerAddressController_recover",
                "summary": "Recover item CustomerAddressEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CustomerAddressEntity",
                                    "$ref": "#/components/schemas/CustomerAddressEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-customer-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-language": {
            "post": {
                "operationId": "CrudLanguageController_create",
                "summary": "Create one item LanguageEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "LanguageEntity",
                                    "$ref": "#/components/schemas/LanguageEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "LanguageEntity",
                                    "$ref": "#/components/schemas/LanguageEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-language"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudLanguageController_find",
                "summary": "Retrieve multiple items LanguageEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<LanguageEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/LanguageEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-language"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudLanguageController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-language"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-language/{id}": {
            "get": {
                "operationId": "CrudLanguageController_findOne",
                "summary": "Retrieve one item LanguageEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "LanguageEntity",
                                    "$ref": "#/components/schemas/LanguageEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-language"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudLanguageController_update",
                "summary": "Update item LanguageEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "LanguageEntity",
                                    "$ref": "#/components/schemas/LanguageEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-language"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudLanguageController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-language"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudLanguageController_recover",
                "summary": "Recover item LanguageEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "LanguageEntity",
                                    "$ref": "#/components/schemas/LanguageEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-language"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-language/import": {
            "post": {
                "operationId": "CrudLanguageController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-language"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-language/export": {
            "get": {
                "operationId": "CrudLanguageController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-language"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/primary-language-controller/change-primary-language": {
            "post": {
                "operationId": "PrimaryLanguageController_changePrimaryLanguage",
                "summary": "Replace item",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePrimaryInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "primary-language"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-push-notification": {
            "post": {
                "operationId": "CrudPushNotificationController_create",
                "summary": "Create one item PushNotificationEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PushNotificationCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "PushNotificationEntity",
                                    "$ref": "#/components/schemas/PushNotificationEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PushNotificationEntity",
                                    "$ref": "#/components/schemas/PushNotificationEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-push-notification"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudPushNotificationController_find",
                "summary": "Retrieve multiple items PushNotificationEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<PushNotificationEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/PushNotificationEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-push-notification"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudPushNotificationController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-push-notification"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-push-notification/{id}": {
            "get": {
                "operationId": "CrudPushNotificationController_findOne",
                "summary": "Retrieve one item PushNotificationEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PushNotificationEntity",
                                    "$ref": "#/components/schemas/PushNotificationEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-push-notification"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudPushNotificationController_update",
                "summary": "Update item PushNotificationEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PushNotificationUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PushNotificationEntity",
                                    "$ref": "#/components/schemas/PushNotificationEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-push-notification"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudPushNotificationController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-push-notification"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudPushNotificationController_recover",
                "summary": "Recover item PushNotificationEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PushNotificationEntity",
                                    "$ref": "#/components/schemas/PushNotificationEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-push-notification"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-push-notification/import": {
            "post": {
                "operationId": "CrudPushNotificationController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-push-notification"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-push-notification/export": {
            "get": {
                "operationId": "CrudPushNotificationController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-push-notification"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-push-notification-history": {
            "get": {
                "operationId": "CrudPushNotificationHistoryController_find",
                "summary": "Retrieve multiple items PushNotificationHistoryEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<PushNotificationHistoryEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/PushNotificationHistoryEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-push-notification-history"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-push-notification-history/{id}": {
            "get": {
                "operationId": "CrudPushNotificationHistoryController_findOne",
                "summary": "Retrieve one item PushNotificationHistoryEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PushNotificationHistoryEntity",
                                    "$ref": "#/components/schemas/PushNotificationHistoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-push-notification-history"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-manager": {
            "post": {
                "operationId": "CrudManagerController_create",
                "summary": "Create one item ManagerEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManagerCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "ManagerEntity",
                                    "$ref": "#/components/schemas/ManagerEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ManagerEntity",
                                    "$ref": "#/components/schemas/ManagerEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudManagerController_find",
                "summary": "Retrieve multiple items ManagerEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<ManagerEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ManagerEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudManagerController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-manager/{id}": {
            "get": {
                "operationId": "CrudManagerController_findOne",
                "summary": "Retrieve one item ManagerEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ManagerEntity",
                                    "$ref": "#/components/schemas/ManagerEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudManagerController_update",
                "summary": "Update item ManagerEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManagerUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ManagerEntity",
                                    "$ref": "#/components/schemas/ManagerEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudManagerController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudManagerController_recover",
                "summary": "Recover item ManagerEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ManagerEntity",
                                    "$ref": "#/components/schemas/ManagerEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-manager/import": {
            "post": {
                "operationId": "CrudManagerController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-manager/export": {
            "get": {
                "operationId": "CrudManagerController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-manager-session-history": {
            "get": {
                "operationId": "CrudManagerSessionHistoryController_find",
                "summary": "Retrieve multiple items ManagerSessionHistoryEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<ManagerSessionHistoryEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ManagerSessionHistoryEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-manager-session-history"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-manager-session-history/{id}": {
            "get": {
                "operationId": "CrudManagerSessionHistoryController_findOne",
                "summary": "Retrieve one item ManagerSessionHistoryEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ManagerSessionHistoryEntity",
                                    "$ref": "#/components/schemas/ManagerSessionHistoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-manager-session-history"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-currency": {
            "post": {
                "operationId": "CrudCurrencyController_create",
                "summary": "Create one item CurrencyEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "CurrencyEntity",
                                    "$ref": "#/components/schemas/CurrencyEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CurrencyEntity",
                                    "$ref": "#/components/schemas/CurrencyEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-currency"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudCurrencyController_find",
                "summary": "Retrieve multiple items CurrencyEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<CurrencyEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CurrencyEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-currency"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudCurrencyController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-currency"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-currency/{id}": {
            "get": {
                "operationId": "CrudCurrencyController_findOne",
                "summary": "Retrieve one item CurrencyEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CurrencyEntity",
                                    "$ref": "#/components/schemas/CurrencyEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-currency"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudCurrencyController_update",
                "summary": "Update item CurrencyEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CurrencyEntity",
                                    "$ref": "#/components/schemas/CurrencyEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-currency"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudCurrencyController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-currency"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudCurrencyController_recover",
                "summary": "Recover item CurrencyEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CurrencyEntity",
                                    "$ref": "#/components/schemas/CurrencyEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-currency"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-currency/import": {
            "post": {
                "operationId": "CrudCurrencyController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-currency"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-currency/export": {
            "get": {
                "operationId": "CrudCurrencyController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-currency"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-job-cancel-reason": {
            "post": {
                "operationId": "CrudJobCancelReasonController_create",
                "summary": "Create one item JobCancelReasonEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCancelReasonCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "JobCancelReasonEntity",
                                    "$ref": "#/components/schemas/JobCancelReasonEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "JobCancelReasonEntity",
                                    "$ref": "#/components/schemas/JobCancelReasonEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-job-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudJobCancelReasonController_find",
                "summary": "Retrieve multiple items JobCancelReasonEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<JobCancelReasonEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/JobCancelReasonEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-job-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudJobCancelReasonController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-job-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-job-cancel-reason/{id}": {
            "get": {
                "operationId": "CrudJobCancelReasonController_findOne",
                "summary": "Retrieve one item JobCancelReasonEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "JobCancelReasonEntity",
                                    "$ref": "#/components/schemas/JobCancelReasonEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-job-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudJobCancelReasonController_update",
                "summary": "Update item JobCancelReasonEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCancelReasonUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "JobCancelReasonEntity",
                                    "$ref": "#/components/schemas/JobCancelReasonEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-job-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudJobCancelReasonController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-job-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudJobCancelReasonController_recover",
                "summary": "Recover item JobCancelReasonEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "JobCancelReasonEntity",
                                    "$ref": "#/components/schemas/JobCancelReasonEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-job-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-job-cancel-reason/import": {
            "post": {
                "operationId": "CrudJobCancelReasonController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-job-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-job-cancel-reason/export": {
            "get": {
                "operationId": "CrudJobCancelReasonController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-job-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order-cancel-reason": {
            "post": {
                "operationId": "CrudOrderCancelReasonController_create",
                "summary": "Create one item OrderCancelReasonEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderCancelReasonCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "OrderCancelReasonEntity",
                                    "$ref": "#/components/schemas/OrderCancelReasonEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OrderCancelReasonEntity",
                                    "$ref": "#/components/schemas/OrderCancelReasonEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudOrderCancelReasonController_find",
                "summary": "Retrieve multiple items OrderCancelReasonEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<OrderCancelReasonEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/OrderCancelReasonEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudOrderCancelReasonController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order-cancel-reason/{id}": {
            "get": {
                "operationId": "CrudOrderCancelReasonController_findOne",
                "summary": "Retrieve one item OrderCancelReasonEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OrderCancelReasonEntity",
                                    "$ref": "#/components/schemas/OrderCancelReasonEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudOrderCancelReasonController_update",
                "summary": "Update item OrderCancelReasonEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderCancelReasonUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OrderCancelReasonEntity",
                                    "$ref": "#/components/schemas/OrderCancelReasonEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudOrderCancelReasonController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudOrderCancelReasonController_recover",
                "summary": "Recover item OrderCancelReasonEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OrderCancelReasonEntity",
                                    "$ref": "#/components/schemas/OrderCancelReasonEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order-cancel-reason/import": {
            "post": {
                "operationId": "CrudOrderCancelReasonController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order-cancel-reason/export": {
            "get": {
                "operationId": "CrudOrderCancelReasonController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-order-cancel-reason"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order": {
            "get": {
                "operationId": "CrudOrderController_find",
                "summary": "Retrieve multiple items OrderEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<OrderEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/OrderEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "post": {
                "operationId": "CrudOrderController_create",
                "summary": "Create one item OrderEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "OrderEntity",
                                    "$ref": "#/components/schemas/OrderEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OrderEntity",
                                    "$ref": "#/components/schemas/OrderEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudOrderController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order/total-income-by-staff/{staffId}": {
            "get": {
                "operationId": "CrudOrderController_findTotalIncomeByStaff",
                "parameters": [
                    {
                        "name": "staffId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order/total-income-by-customer/{customerId}": {
            "get": {
                "operationId": "CrudOrderController_findTotalIncomeByCustomer",
                "parameters": [
                    {
                        "name": "customerId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order/{id}": {
            "get": {
                "operationId": "CrudOrderController_findOne",
                "summary": "Retrieve one item OrderEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OrderEntity",
                                    "$ref": "#/components/schemas/OrderEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudOrderController_update",
                "summary": "Update item OrderEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OrderEntity",
                                    "$ref": "#/components/schemas/OrderEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudOrderController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudOrderController_recover",
                "summary": "Recover item OrderEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OrderEntity",
                                    "$ref": "#/components/schemas/OrderEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order/{id}/details": {
            "get": {
                "operationId": "CrudOrderController_details",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderDetailsDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order/orders/{id}/cancel": {
            "patch": {
                "operationId": "CrudOrderController_deleteOrder",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancelByManagerInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderDetailsDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order/invoice/send": {
            "post": {
                "operationId": "CrudOrderController_sendInvoice",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendInvoiceInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendInvoiceDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order/invoice/download": {
            "post": {
                "operationId": "CrudOrderController_downloadInvoice",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendInvoiceInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendInvoiceDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order/invoice/send-all": {
            "post": {
                "operationId": "CrudOrderController_sendAllInvoices",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendAllInvoicesDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order/invoice/regenerate-all": {
            "post": {
                "operationId": "CrudOrderController_regenerateAllInvoices",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendAllInvoicesDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order/invoice/export": {
            "get": {
                "operationId": "CrudOrderController_invoiceExportFiltered",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order/invoice/export/ids": {
            "get": {
                "operationId": "CrudOrderController_invoiceExportByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order/set-staff": {
            "patch": {
                "operationId": "CrudOrderController_setStaff",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderSetStaffInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-order/remove-staff-from-ignore-list": {
            "patch": {
                "operationId": "CrudOrderController_removeStaffFromIgnoreList",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveStaffFromIgnoreListInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-order"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-replace-type": {
            "post": {
                "operationId": "CrudReplaceTypeController_create",
                "summary": "Create one item ReplaceTypeEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReplaceTypeCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "ReplaceTypeEntity",
                                    "$ref": "#/components/schemas/ReplaceTypeEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ReplaceTypeEntity",
                                    "$ref": "#/components/schemas/ReplaceTypeEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-replace-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudReplaceTypeController_find",
                "summary": "Retrieve multiple items ReplaceTypeEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<ReplaceTypeEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ReplaceTypeEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-replace-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudReplaceTypeController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-replace-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-replace-type/{id}": {
            "get": {
                "operationId": "CrudReplaceTypeController_findOne",
                "summary": "Retrieve one item ReplaceTypeEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ReplaceTypeEntity",
                                    "$ref": "#/components/schemas/ReplaceTypeEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-replace-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudReplaceTypeController_update",
                "summary": "Update item ReplaceTypeEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReplaceTypeUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ReplaceTypeEntity",
                                    "$ref": "#/components/schemas/ReplaceTypeEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-replace-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudReplaceTypeController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-replace-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudReplaceTypeController_recover",
                "summary": "Recover item ReplaceTypeEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ReplaceTypeEntity",
                                    "$ref": "#/components/schemas/ReplaceTypeEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-replace-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-replace-type/import": {
            "post": {
                "operationId": "CrudReplaceTypeController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-replace-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-replace-type/export": {
            "get": {
                "operationId": "CrudReplaceTypeController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-replace-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-vat": {
            "post": {
                "operationId": "CrudVatController_create",
                "summary": "Create one item VatEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VatCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "VatEntity",
                                    "$ref": "#/components/schemas/VatEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "VatEntity",
                                    "$ref": "#/components/schemas/VatEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vat"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudVatController_find",
                "summary": "Retrieve multiple items VatEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<VatEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/VatEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vat"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudVatController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vat"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-vat/{id}": {
            "get": {
                "operationId": "CrudVatController_findOne",
                "summary": "Retrieve one item VatEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "VatEntity",
                                    "$ref": "#/components/schemas/VatEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vat"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudVatController_update",
                "summary": "Update item VatEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VatUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "VatEntity",
                                    "$ref": "#/components/schemas/VatEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vat"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudVatController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vat"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudVatController_recover",
                "summary": "Recover item VatEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "VatEntity",
                                    "$ref": "#/components/schemas/VatEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vat"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-vat/import": {
            "post": {
                "operationId": "CrudVatController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vat"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-vat/export": {
            "get": {
                "operationId": "CrudVatController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-vat"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/mollie/webhook": {
            "post": {
                "operationId": "MollieController_webhook",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatusChangeInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "mollie"
                ]
            }
        },
        "/order-update/{id}/deliveryComment": {
            "patch": {
                "operationId": "OrderUpdateController_deliveryCommentUpdate",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeliveryCommentUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "order-update"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/order-update/{id}/messageForShopper": {
            "patch": {
                "operationId": "OrderUpdateController_messageForShopperUpdate",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeliveryCommentUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "order-update"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/order-update/{id}/deliveryAddress": {
            "patch": {
                "operationId": "OrderUpdateController_deliveryAddressChange",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderAddressChangeInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "order-update"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/order-update/{id}/billingAddress": {
            "patch": {
                "operationId": "OrderUpdateController_billingAddressChange",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderAddressChangeInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "order-update"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-cart": {
            "get": {
                "operationId": "CrudCartController_find",
                "summary": "Retrieve multiple items CartEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<CartEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CartEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-cart"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-cart/{id}": {
            "get": {
                "operationId": "CrudCartController_findOne",
                "summary": "Retrieve one item CartEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CartEntity",
                                    "$ref": "#/components/schemas/CartEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-cart"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-cart/cart-details/{id}": {
            "get": {
                "operationId": "CrudCartController_cartDetails",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CartDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-cart"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-corporate": {
            "post": {
                "operationId": "CrudCorporateController_create",
                "summary": "Create one item CorporateEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CorporateCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "CorporateEntity",
                                    "$ref": "#/components/schemas/CorporateEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CorporateEntity",
                                    "$ref": "#/components/schemas/CorporateEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-corporate"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudCorporateController_find",
                "summary": "Retrieve multiple items CorporateEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<CorporateEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CorporateEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-corporate"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudCorporateController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-corporate"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-corporate/{id}": {
            "get": {
                "operationId": "CrudCorporateController_findOne",
                "summary": "Retrieve one item CorporateEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CorporateEntity",
                                    "$ref": "#/components/schemas/CorporateEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-corporate"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudCorporateController_update",
                "summary": "Update item CorporateEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CorporateUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CorporateEntity",
                                    "$ref": "#/components/schemas/CorporateEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-corporate"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudCorporateController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-corporate"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudCorporateController_recover",
                "summary": "Recover item CorporateEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CorporateEntity",
                                    "$ref": "#/components/schemas/CorporateEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-corporate"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-corporate/import": {
            "post": {
                "operationId": "CrudCorporateController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-corporate"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-corporate/export": {
            "get": {
                "operationId": "CrudCorporateController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-corporate"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-brand": {
            "post": {
                "operationId": "CrudProductBrandController_create",
                "summary": "Create one item ProductBrandEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductBrandCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "ProductBrandEntity",
                                    "$ref": "#/components/schemas/ProductBrandEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductBrandEntity",
                                    "$ref": "#/components/schemas/ProductBrandEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudProductBrandController_find",
                "summary": "Retrieve multiple items ProductBrandEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<ProductBrandEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ProductBrandEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductBrandController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-brand/{id}": {
            "get": {
                "operationId": "CrudProductBrandController_findOne",
                "summary": "Retrieve one item ProductBrandEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductBrandEntity",
                                    "$ref": "#/components/schemas/ProductBrandEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudProductBrandController_update",
                "summary": "Update item ProductBrandEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductBrandUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductBrandEntity",
                                    "$ref": "#/components/schemas/ProductBrandEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductBrandController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudProductBrandController_recover",
                "summary": "Recover item ProductBrandEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductBrandEntity",
                                    "$ref": "#/components/schemas/ProductBrandEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-brand/import": {
            "post": {
                "operationId": "CrudProductBrandController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-brand/export": {
            "get": {
                "operationId": "CrudProductBrandController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-product-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-category": {
            "post": {
                "operationId": "CrudProductCategoryController_create",
                "summary": "Create one item ProductCategoryEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCategoryCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "ProductCategoryEntity",
                                    "$ref": "#/components/schemas/ProductCategoryEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductCategoryEntity",
                                    "$ref": "#/components/schemas/ProductCategoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudProductCategoryController_find",
                "summary": "Retrieve multiple items ProductCategoryEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<ProductCategoryEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ProductCategoryEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductCategoryController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-category/{id}": {
            "get": {
                "operationId": "CrudProductCategoryController_findOne",
                "summary": "Retrieve one item ProductCategoryEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductCategoryEntity",
                                    "$ref": "#/components/schemas/ProductCategoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudProductCategoryController_update",
                "summary": "Update item ProductCategoryEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCategoryUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductCategoryEntity",
                                    "$ref": "#/components/schemas/ProductCategoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductCategoryController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudProductCategoryController_recover",
                "summary": "Recover item ProductCategoryEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductCategoryEntity",
                                    "$ref": "#/components/schemas/ProductCategoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-category/import": {
            "post": {
                "operationId": "CrudProductCategoryController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-category/export": {
            "get": {
                "operationId": "CrudProductCategoryController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-product-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-category/change-order": {
            "post": {
                "operationId": "CrudProductCategoryController_changeOrder",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeOrderInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-category"
                ],
                "security": [
                    {
                        "access-token": []
                    },
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product": {
            "post": {
                "operationId": "CrudProductController_create",
                "summary": "Create one item ProductEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "ProductEntity",
                                    "$ref": "#/components/schemas/ProductEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductEntity",
                                    "$ref": "#/components/schemas/ProductEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudProductController_find",
                "summary": "Retrieve multiple items ProductEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<ProductEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ProductEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudProductController_updateMany",
                "summary": "Update multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for update",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product/find-unlinked/{storeId}": {
            "get": {
                "operationId": "CrudProductController_findUnlinkedProducts",
                "parameters": [
                    {
                        "name": "storeId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productSubcategoryCode",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productCategoryCode",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productBrandCode",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productTags",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": true,
                        "in": "query",
                        "example": 1,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<ProductEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ProductEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product/{id}": {
            "get": {
                "operationId": "CrudProductController_findOne",
                "summary": "Retrieve one item ProductEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductEntity",
                                    "$ref": "#/components/schemas/ProductEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudProductController_update",
                "summary": "Update item ProductEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductEntity",
                                    "$ref": "#/components/schemas/ProductEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudProductController_recover",
                "summary": "Recover item ProductEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductEntity",
                                    "$ref": "#/components/schemas/ProductEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product/import": {
            "post": {
                "operationId": "CrudProductController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product/export": {
            "get": {
                "operationId": "CrudProductController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-link": {
            "post": {
                "operationId": "CrudProductLinkController_create",
                "summary": "Create one item ProductLinkEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductLinkCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "ProductLinkEntity",
                                    "$ref": "#/components/schemas/ProductLinkEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductLinkEntity",
                                    "$ref": "#/components/schemas/ProductLinkEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-link"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudProductLinkController_find",
                "summary": "Retrieve multiple items ProductLinkEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<ProductLinkEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ProductLinkEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-link"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductLinkController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-link"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-link/{id}": {
            "get": {
                "operationId": "CrudProductLinkController_findOne",
                "summary": "Retrieve one item ProductLinkEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductLinkEntity",
                                    "$ref": "#/components/schemas/ProductLinkEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-link"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudProductLinkController_update",
                "summary": "Update item ProductLinkEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductLinkUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductLinkEntity",
                                    "$ref": "#/components/schemas/ProductLinkEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-link"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductLinkController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-link"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudProductLinkController_recover",
                "summary": "Recover item ProductLinkEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductLinkEntity",
                                    "$ref": "#/components/schemas/ProductLinkEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-link"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-link/multiple": {
            "post": {
                "operationId": "CrudProductLinkController_createMultiple",
                "summary": "Create multiple link",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductLinkMultipleCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductLinkEntity"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-link"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-link/import": {
            "post": {
                "operationId": "CrudProductLinkController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-link"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-link/export": {
            "get": {
                "operationId": "CrudProductLinkController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-product-link"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-price": {
            "post": {
                "operationId": "CrudProductPriceController_create",
                "summary": "Create one item ProductPriceEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductPriceCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "ProductPriceEntity",
                                    "$ref": "#/components/schemas/ProductPriceEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductPriceEntity",
                                    "$ref": "#/components/schemas/ProductPriceEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-price"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudProductPriceController_find",
                "summary": "Retrieve multiple items ProductPriceEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<ProductPriceEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ProductPriceEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-price"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductPriceController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-price"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-price/{id}": {
            "get": {
                "operationId": "CrudProductPriceController_findOne",
                "summary": "Retrieve one item ProductPriceEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductPriceEntity",
                                    "$ref": "#/components/schemas/ProductPriceEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-price"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudProductPriceController_update",
                "summary": "Update item ProductPriceEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductPriceUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductPriceEntity",
                                    "$ref": "#/components/schemas/ProductPriceEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-price"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductPriceController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-price"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudProductPriceController_recover",
                "summary": "Recover item ProductPriceEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductPriceEntity",
                                    "$ref": "#/components/schemas/ProductPriceEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-price"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-price/import": {
            "post": {
                "operationId": "CrudProductPriceController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-price"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-price/export": {
            "get": {
                "operationId": "CrudProductPriceController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-product-price"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-subcategory": {
            "post": {
                "operationId": "CrudProductSubcategoryController_create",
                "summary": "Create one item ProductSubcategoryEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductSubcategoryCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "ProductSubcategoryEntity",
                                    "$ref": "#/components/schemas/ProductSubcategoryEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductSubcategoryEntity",
                                    "$ref": "#/components/schemas/ProductSubcategoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-subcategory"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudProductSubcategoryController_find",
                "summary": "Retrieve multiple items ProductSubcategoryEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<ProductSubcategoryEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ProductSubcategoryEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-subcategory"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductSubcategoryController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-subcategory"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-subcategory/{id}": {
            "get": {
                "operationId": "CrudProductSubcategoryController_findOne",
                "summary": "Retrieve one item ProductSubcategoryEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductSubcategoryEntity",
                                    "$ref": "#/components/schemas/ProductSubcategoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-subcategory"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudProductSubcategoryController_update",
                "summary": "Update item ProductSubcategoryEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductSubcategoryUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductSubcategoryEntity",
                                    "$ref": "#/components/schemas/ProductSubcategoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-subcategory"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductSubcategoryController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-subcategory"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudProductSubcategoryController_recover",
                "summary": "Recover item ProductSubcategoryEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductSubcategoryEntity",
                                    "$ref": "#/components/schemas/ProductSubcategoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-subcategory"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-subcategory/import": {
            "post": {
                "operationId": "CrudProductSubcategoryController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-subcategory"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-subcategory/export": {
            "get": {
                "operationId": "CrudProductSubcategoryController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-product-subcategory"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-subcategory/change-order": {
            "post": {
                "operationId": "CrudProductSubcategoryController_changeOrder",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeOrderInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-subcategory"
                ],
                "security": [
                    {
                        "access-token": []
                    },
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-unit": {
            "post": {
                "operationId": "CrudProductUnitController_create",
                "summary": "Create one item ProductUnitEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductUnitCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "ProductUnitEntity",
                                    "$ref": "#/components/schemas/ProductUnitEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductUnitEntity",
                                    "$ref": "#/components/schemas/ProductUnitEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-unit"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudProductUnitController_find",
                "summary": "Retrieve multiple items ProductUnitEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<ProductUnitEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ProductUnitEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-unit"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductUnitController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-unit"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-unit/{id}": {
            "get": {
                "operationId": "CrudProductUnitController_findOne",
                "summary": "Retrieve one item ProductUnitEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductUnitEntity",
                                    "$ref": "#/components/schemas/ProductUnitEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-unit"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudProductUnitController_update",
                "summary": "Update item ProductUnitEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductUnitUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductUnitEntity",
                                    "$ref": "#/components/schemas/ProductUnitEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-unit"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudProductUnitController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-unit"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudProductUnitController_recover",
                "summary": "Recover item ProductUnitEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ProductUnitEntity",
                                    "$ref": "#/components/schemas/ProductUnitEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-unit"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-unit/import": {
            "post": {
                "operationId": "CrudProductUnitController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-product-unit"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-product-unit/export": {
            "get": {
                "operationId": "CrudProductUnitController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-product-unit"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-address": {
            "post": {
                "operationId": "CrudStoreAddressController_create",
                "summary": "Create one item StoreAddressEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAddressCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "StoreAddressEntity",
                                    "$ref": "#/components/schemas/StoreAddressEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreAddressEntity",
                                    "$ref": "#/components/schemas/StoreAddressEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudStoreAddressController_find",
                "summary": "Retrieve multiple items StoreAddressEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreAddressEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreAddressEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreAddressController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-address/{id}": {
            "get": {
                "operationId": "CrudStoreAddressController_findOne",
                "summary": "Retrieve one item StoreAddressEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreAddressEntity",
                                    "$ref": "#/components/schemas/StoreAddressEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudStoreAddressController_update",
                "summary": "Update item StoreAddressEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAddressUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreAddressEntity",
                                    "$ref": "#/components/schemas/StoreAddressEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreAddressController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudStoreAddressController_recover",
                "summary": "Recover item StoreAddressEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreAddressEntity",
                                    "$ref": "#/components/schemas/StoreAddressEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-address/import": {
            "post": {
                "operationId": "CrudStoreAddressController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-address/export": {
            "get": {
                "operationId": "CrudStoreAddressController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store-address"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-brand": {
            "post": {
                "operationId": "CrudStoreBrandController_create",
                "summary": "Create one item StoreBrandEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBrandCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "StoreBrandEntity",
                                    "$ref": "#/components/schemas/StoreBrandEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreBrandEntity",
                                    "$ref": "#/components/schemas/StoreBrandEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudStoreBrandController_find",
                "summary": "Retrieve multiple items StoreBrandEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreBrandEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreBrandEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreBrandController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-brand/{id}": {
            "get": {
                "operationId": "CrudStoreBrandController_findOne",
                "summary": "Retrieve one item StoreBrandEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreBrandEntity",
                                    "$ref": "#/components/schemas/StoreBrandEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudStoreBrandController_update",
                "summary": "Update item StoreBrandEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBrandUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreBrandEntity",
                                    "$ref": "#/components/schemas/StoreBrandEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreBrandController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudStoreBrandController_recover",
                "summary": "Recover item StoreBrandEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreBrandEntity",
                                    "$ref": "#/components/schemas/StoreBrandEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-brand/import": {
            "post": {
                "operationId": "CrudStoreBrandController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-brand/export": {
            "get": {
                "operationId": "CrudStoreBrandController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store-brand"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-closing-day": {
            "post": {
                "operationId": "CrudStoreClosingDayController_create",
                "summary": "Create one item StoreClosingDayEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreClosingDayCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "StoreClosingDayEntity",
                                    "$ref": "#/components/schemas/StoreClosingDayEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreClosingDayEntity",
                                    "$ref": "#/components/schemas/StoreClosingDayEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-closing-day"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudStoreClosingDayController_find",
                "summary": "Retrieve multiple items StoreClosingDayEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreClosingDayEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreClosingDayEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-closing-day"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreClosingDayController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-closing-day"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-closing-day/{id}": {
            "get": {
                "operationId": "CrudStoreClosingDayController_findOne",
                "summary": "Retrieve one item StoreClosingDayEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreClosingDayEntity",
                                    "$ref": "#/components/schemas/StoreClosingDayEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-closing-day"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudStoreClosingDayController_update",
                "summary": "Update item StoreClosingDayEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreClosingDayUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreClosingDayEntity",
                                    "$ref": "#/components/schemas/StoreClosingDayEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-closing-day"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreClosingDayController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-closing-day"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudStoreClosingDayController_recover",
                "summary": "Recover item StoreClosingDayEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreClosingDayEntity",
                                    "$ref": "#/components/schemas/StoreClosingDayEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-closing-day"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-closing-day/import": {
            "post": {
                "operationId": "CrudStoreClosingDayController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-closing-day"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-closing-day/export": {
            "get": {
                "operationId": "CrudStoreClosingDayController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store-closing-day"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-contact": {
            "post": {
                "operationId": "CrudStoreContactController_create",
                "summary": "Create one item StoreContactEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreContactCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "StoreContactEntity",
                                    "$ref": "#/components/schemas/StoreContactEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreContactEntity",
                                    "$ref": "#/components/schemas/StoreContactEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-contact"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudStoreContactController_find",
                "summary": "Retrieve multiple items StoreContactEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreContactEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreContactEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-contact"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreContactController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-contact"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-contact/{id}": {
            "get": {
                "operationId": "CrudStoreContactController_findOne",
                "summary": "Retrieve one item StoreContactEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreContactEntity",
                                    "$ref": "#/components/schemas/StoreContactEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-contact"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudStoreContactController_update",
                "summary": "Update item StoreContactEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreContactUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreContactEntity",
                                    "$ref": "#/components/schemas/StoreContactEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-contact"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreContactController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-contact"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudStoreContactController_recover",
                "summary": "Recover item StoreContactEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreContactEntity",
                                    "$ref": "#/components/schemas/StoreContactEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-contact"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-contact/import": {
            "post": {
                "operationId": "CrudStoreContactController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-contact"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-contact/export": {
            "get": {
                "operationId": "CrudStoreContactController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store-contact"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store": {
            "post": {
                "operationId": "CrudStoreController_create",
                "summary": "Create one item StoreEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "StoreEntity",
                                    "$ref": "#/components/schemas/StoreEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreEntity",
                                    "$ref": "#/components/schemas/StoreEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudStoreController_find",
                "summary": "Retrieve multiple items StoreEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store/{id}": {
            "get": {
                "operationId": "CrudStoreController_findOne",
                "summary": "Retrieve one item StoreEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreEntity",
                                    "$ref": "#/components/schemas/StoreEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudStoreController_update",
                "summary": "Update item StoreEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreEntity",
                                    "$ref": "#/components/schemas/StoreEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudStoreController_recover",
                "summary": "Recover item StoreEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreEntity",
                                    "$ref": "#/components/schemas/StoreEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store/{id}/categories": {
            "patch": {
                "operationId": "CrudStoreController_categories",
                "summary": "Set store categories and subcategories",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCategoriesInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store/{id}/zip-codes": {
            "get": {
                "operationId": "CrudStoreController_getZoneZipCodes",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store/import": {
            "post": {
                "operationId": "CrudStoreController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store/export": {
            "get": {
                "operationId": "CrudStoreController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store/export-subcategories": {
            "get": {
                "operationId": "CrudStoreController_exportSubcategories",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store/import-subcategories": {
            "post": {
                "operationId": "CrudStoreController_importSubcategories",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store/find-unbound-stores/{staffId}": {
            "get": {
                "operationId": "CrudStoreController_findUnboundStores",
                "parameters": [
                    {
                        "name": "staffId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": true,
                        "in": "query",
                        "example": 1,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-delivery-fee": {
            "post": {
                "operationId": "CrudStoreDeliveryFeeController_create",
                "summary": "Create one item StoreDeliveryFeeEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDeliveryFeeCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "StoreDeliveryFeeEntity",
                                    "$ref": "#/components/schemas/StoreDeliveryFeeEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreDeliveryFeeEntity",
                                    "$ref": "#/components/schemas/StoreDeliveryFeeEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-fee"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudStoreDeliveryFeeController_find",
                "summary": "Retrieve multiple items StoreDeliveryFeeEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreDeliveryFeeEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreDeliveryFeeEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-fee"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreDeliveryFeeController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-fee"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-delivery-fee/{id}": {
            "get": {
                "operationId": "CrudStoreDeliveryFeeController_findOne",
                "summary": "Retrieve one item StoreDeliveryFeeEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreDeliveryFeeEntity",
                                    "$ref": "#/components/schemas/StoreDeliveryFeeEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-fee"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudStoreDeliveryFeeController_update",
                "summary": "Update item StoreDeliveryFeeEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDeliveryFeeUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreDeliveryFeeEntity",
                                    "$ref": "#/components/schemas/StoreDeliveryFeeEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-fee"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreDeliveryFeeController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-fee"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudStoreDeliveryFeeController_recover",
                "summary": "Recover item StoreDeliveryFeeEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreDeliveryFeeEntity",
                                    "$ref": "#/components/schemas/StoreDeliveryFeeEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-fee"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-delivery-fee/import": {
            "post": {
                "operationId": "CrudStoreDeliveryFeeController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-fee"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-delivery-fee/export": {
            "get": {
                "operationId": "CrudStoreDeliveryFeeController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store-delivery-fee"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-delivery-zone": {
            "post": {
                "operationId": "CrudStoreDeliveryZoneController_create",
                "summary": "Create one item StoreDeliveryZoneEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDeliveryZoneCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "StoreDeliveryZoneEntity",
                                    "$ref": "#/components/schemas/StoreDeliveryZoneEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreDeliveryZoneEntity",
                                    "$ref": "#/components/schemas/StoreDeliveryZoneEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-zone"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudStoreDeliveryZoneController_find",
                "summary": "Retrieve multiple items StoreDeliveryZoneEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreDeliveryZoneEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreDeliveryZoneEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-zone"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreDeliveryZoneController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-zone"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-delivery-zone/{id}": {
            "get": {
                "operationId": "CrudStoreDeliveryZoneController_findOne",
                "summary": "Retrieve one item StoreDeliveryZoneEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreDeliveryZoneEntity",
                                    "$ref": "#/components/schemas/StoreDeliveryZoneEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-zone"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudStoreDeliveryZoneController_update",
                "summary": "Update item StoreDeliveryZoneEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDeliveryZoneUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreDeliveryZoneEntity",
                                    "$ref": "#/components/schemas/StoreDeliveryZoneEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-zone"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreDeliveryZoneController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-zone"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudStoreDeliveryZoneController_recover",
                "summary": "Recover item StoreDeliveryZoneEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreDeliveryZoneEntity",
                                    "$ref": "#/components/schemas/StoreDeliveryZoneEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-zone"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-delivery-zone/import": {
            "post": {
                "operationId": "CrudStoreDeliveryZoneController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-zone"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-delivery-zone/export": {
            "get": {
                "operationId": "CrudStoreDeliveryZoneController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store-delivery-zone"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-opening-hour": {
            "post": {
                "operationId": "CrudStoreOpeningHourController_create",
                "summary": "Create one item StoreOpeningHourEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOpeningHourCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "StoreOpeningHourEntity",
                                    "$ref": "#/components/schemas/StoreOpeningHourEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreOpeningHourEntity",
                                    "$ref": "#/components/schemas/StoreOpeningHourEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-opening-hour"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudStoreOpeningHourController_find",
                "summary": "Retrieve multiple items StoreOpeningHourEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreOpeningHourEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreOpeningHourEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-opening-hour"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreOpeningHourController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-opening-hour"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-opening-hour/{id}": {
            "get": {
                "operationId": "CrudStoreOpeningHourController_findOne",
                "summary": "Retrieve one item StoreOpeningHourEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreOpeningHourEntity",
                                    "$ref": "#/components/schemas/StoreOpeningHourEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-opening-hour"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudStoreOpeningHourController_update",
                "summary": "Update item StoreOpeningHourEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOpeningHourUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreOpeningHourEntity",
                                    "$ref": "#/components/schemas/StoreOpeningHourEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-opening-hour"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreOpeningHourController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-opening-hour"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudStoreOpeningHourController_recover",
                "summary": "Recover item StoreOpeningHourEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreOpeningHourEntity",
                                    "$ref": "#/components/schemas/StoreOpeningHourEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-opening-hour"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-opening-hour/import": {
            "post": {
                "operationId": "CrudStoreOpeningHourController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-opening-hour"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-opening-hour/export": {
            "get": {
                "operationId": "CrudStoreOpeningHourController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store-opening-hour"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-weight-option": {
            "post": {
                "operationId": "CrudStoreWeightOptionController_create",
                "summary": "Create one item StoreWeightOptionEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreWeightOptionCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "StoreWeightOptionEntity",
                                    "$ref": "#/components/schemas/StoreWeightOptionEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreWeightOptionEntity",
                                    "$ref": "#/components/schemas/StoreWeightOptionEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-weight-option"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudStoreWeightOptionController_find",
                "summary": "Retrieve multiple items StoreWeightOptionEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreWeightOptionEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreWeightOptionEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-weight-option"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreWeightOptionController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-weight-option"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-weight-option/{id}": {
            "get": {
                "operationId": "CrudStoreWeightOptionController_findOne",
                "summary": "Retrieve one item StoreWeightOptionEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreWeightOptionEntity",
                                    "$ref": "#/components/schemas/StoreWeightOptionEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-weight-option"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudStoreWeightOptionController_update",
                "summary": "Update item StoreWeightOptionEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreWeightOptionUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreWeightOptionEntity",
                                    "$ref": "#/components/schemas/StoreWeightOptionEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-weight-option"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreWeightOptionController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-weight-option"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudStoreWeightOptionController_recover",
                "summary": "Recover item StoreWeightOptionEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreWeightOptionEntity",
                                    "$ref": "#/components/schemas/StoreWeightOptionEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-weight-option"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-weight-option/import": {
            "post": {
                "operationId": "CrudStoreWeightOptionController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-weight-option"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-weight-option/export": {
            "get": {
                "operationId": "CrudStoreWeightOptionController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store-weight-option"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-region": {
            "post": {
                "operationId": "CrudStoreRegionController_create",
                "summary": "Create one item StoreRegionEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreRegionCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "StoreRegionEntity",
                                    "$ref": "#/components/schemas/StoreRegionEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreRegionEntity",
                                    "$ref": "#/components/schemas/StoreRegionEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-region"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudStoreRegionController_find",
                "summary": "Retrieve multiple items StoreRegionEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreRegionEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreRegionEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-region"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreRegionController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-region"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-region/{id}": {
            "get": {
                "operationId": "CrudStoreRegionController_findOne",
                "summary": "Retrieve one item StoreRegionEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreRegionEntity",
                                    "$ref": "#/components/schemas/StoreRegionEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-region"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudStoreRegionController_update",
                "summary": "Update item StoreRegionEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreRegionUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreRegionEntity",
                                    "$ref": "#/components/schemas/StoreRegionEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-region"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreRegionController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-region"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudStoreRegionController_recover",
                "summary": "Recover item StoreRegionEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreRegionEntity",
                                    "$ref": "#/components/schemas/StoreRegionEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-region"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-region/import": {
            "post": {
                "operationId": "CrudStoreRegionController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-region"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-region/export": {
            "get": {
                "operationId": "CrudStoreRegionController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store-region"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-vendor-type": {
            "post": {
                "operationId": "CrudVendorTypeController_create",
                "summary": "Create one item VendorTypeEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VendorTypeCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "VendorTypeEntity",
                                    "$ref": "#/components/schemas/VendorTypeEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "VendorTypeEntity",
                                    "$ref": "#/components/schemas/VendorTypeEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudVendorTypeController_find",
                "summary": "Retrieve multiple items VendorTypeEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<VendorTypeEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/VendorTypeEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudVendorTypeController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-vendor-type/{id}": {
            "get": {
                "operationId": "CrudVendorTypeController_findOne",
                "summary": "Retrieve one item VendorTypeEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "VendorTypeEntity",
                                    "$ref": "#/components/schemas/VendorTypeEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudVendorTypeController_update",
                "summary": "Update item VendorTypeEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VendorTypeUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "VendorTypeEntity",
                                    "$ref": "#/components/schemas/VendorTypeEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudVendorTypeController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudVendorTypeController_recover",
                "summary": "Recover item VendorTypeEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "VendorTypeEntity",
                                    "$ref": "#/components/schemas/VendorTypeEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-vendor-type/import": {
            "post": {
                "operationId": "CrudVendorTypeController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-vendor-type/export": {
            "get": {
                "operationId": "CrudVendorTypeController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-vendor-type"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/store-scheduler": {
            "get": {
                "operationId": "StoreSchedulerController_getTimeSlots",
                "summary": "Get timeslots for one week",
                "parameters": [
                    {
                        "name": "storeId",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateStart",
                        "required": true,
                        "in": "query",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-15",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateEnd",
                        "required": true,
                        "in": "query",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-15",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreSchedulerDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "store-scheduler"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/store-scheduler/{storeId}/{timeStart}/{timeEnd}": {
            "get": {
                "operationId": "StoreSchedulerController_getTimeSlotDetails",
                "summary": "Get timeslot details",
                "parameters": [
                    {
                        "name": "storeId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeStart",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "timeEnd",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSlotDetailsDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "store-scheduler"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/store-scheduler/reservation/{id}": {
            "delete": {
                "operationId": "StoreSchedulerController_deleteReservation",
                "summary": "Delete reservation by id",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "store-scheduler"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/product-price-view": {
            "get": {
                "operationId": "ProductPriceViewController_find",
                "summary": "Retrieve multiple items ProductPriceViewEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<ProductPriceViewEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ProductPriceViewEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "product-price-view"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-out-of-stock": {
            "post": {
                "operationId": "CrudOutOfStockController_create",
                "summary": "Create one item OutOfStockEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OutOfStockCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "OutOfStockEntity",
                                    "$ref": "#/components/schemas/OutOfStockEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OutOfStockEntity",
                                    "$ref": "#/components/schemas/OutOfStockEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-out-of-stock"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudOutOfStockController_find",
                "summary": "Retrieve multiple items OutOfStockEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<OutOfStockEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/OutOfStockEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-out-of-stock"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudOutOfStockController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-out-of-stock"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-out-of-stock/{id}": {
            "get": {
                "operationId": "CrudOutOfStockController_findOne",
                "summary": "Retrieve one item OutOfStockEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OutOfStockEntity",
                                    "$ref": "#/components/schemas/OutOfStockEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-out-of-stock"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudOutOfStockController_update",
                "summary": "Update item OutOfStockEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OutOfStockUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OutOfStockEntity",
                                    "$ref": "#/components/schemas/OutOfStockEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-out-of-stock"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudOutOfStockController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-out-of-stock"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudOutOfStockController_recover",
                "summary": "Recover item OutOfStockEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OutOfStockEntity",
                                    "$ref": "#/components/schemas/OutOfStockEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-out-of-stock"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-out-of-stock/import": {
            "post": {
                "operationId": "CrudOutOfStockController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-out-of-stock"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-out-of-stock/export": {
            "get": {
                "operationId": "CrudOutOfStockController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-out-of-stock"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-delivery-slot": {
            "post": {
                "operationId": "CrudDeliverySlotController_create",
                "summary": "Create one item StoreDeliverySlotEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDeliverySlotCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "StoreDeliverySlotEntity",
                                    "$ref": "#/components/schemas/StoreDeliverySlotEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreDeliverySlotEntity",
                                    "$ref": "#/components/schemas/StoreDeliverySlotEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-slot"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudDeliverySlotController_find",
                "summary": "Retrieve multiple items StoreDeliverySlotEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreDeliverySlotEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreDeliverySlotEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-slot"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudDeliverySlotController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-slot"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-delivery-slot/custom": {
            "post": {
                "operationId": "CrudDeliverySlotController_updateCustomSlot",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCustomDeliverySlotInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store-delivery-slot"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-delivery-slot/{id}": {
            "get": {
                "operationId": "CrudDeliverySlotController_findOne",
                "summary": "Retrieve one item StoreDeliverySlotEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreDeliverySlotEntity",
                                    "$ref": "#/components/schemas/StoreDeliverySlotEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-slot"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudDeliverySlotController_update",
                "summary": "Update item StoreDeliverySlotEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDeliverySlotUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreDeliverySlotEntity",
                                    "$ref": "#/components/schemas/StoreDeliverySlotEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-slot"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudDeliverySlotController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-slot"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudDeliverySlotController_recover",
                "summary": "Recover item StoreDeliverySlotEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreDeliverySlotEntity",
                                    "$ref": "#/components/schemas/StoreDeliverySlotEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-slot"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-delivery-slot/import": {
            "post": {
                "operationId": "CrudDeliverySlotController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-delivery-slot"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-delivery-slot/export": {
            "get": {
                "operationId": "CrudDeliverySlotController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store-delivery-slot"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-shopping-list": {
            "get": {
                "operationId": "CrudStoreShoppingListController_find",
                "summary": "Retrieve multiple items StoreShoppingListEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreShoppingListEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreShoppingListEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-shopping-list"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreShoppingListController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-shopping-list"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-shopping-list/{id}": {
            "get": {
                "operationId": "CrudStoreShoppingListController_findOne",
                "summary": "Retrieve one item StoreShoppingListEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreShoppingListEntity",
                                    "$ref": "#/components/schemas/StoreShoppingListEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-shopping-list"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreShoppingListController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-shopping-list"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-shopping-list-product": {
            "get": {
                "operationId": "CrudStoreShoppingListProductController_find",
                "summary": "Retrieve multiple items StoreShoppingListProductEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreShoppingListProductEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreShoppingListProductEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-shopping-list-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreShoppingListProductController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-shopping-list-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-shopping-list-product/{id}": {
            "get": {
                "operationId": "CrudStoreShoppingListProductController_findOne",
                "summary": "Retrieve one item StoreShoppingListProductEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreShoppingListProductEntity",
                                    "$ref": "#/components/schemas/StoreShoppingListProductEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-shopping-list-product"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-staff-bound": {
            "post": {
                "operationId": "CrudStoreStaffBoundController_create",
                "summary": "Create one item StoreStaffBoundEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreStaffBoundCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "StoreStaffBoundEntity",
                                    "$ref": "#/components/schemas/StoreStaffBoundEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreStaffBoundEntity",
                                    "$ref": "#/components/schemas/StoreStaffBoundEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-staff-bound"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudStoreStaffBoundController_find",
                "summary": "Retrieve multiple items StoreStaffBoundEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StoreStaffBoundEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreStaffBoundEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-staff-bound"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreStaffBoundController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-staff-bound"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-staff-bound/{id}": {
            "get": {
                "operationId": "CrudStoreStaffBoundController_findOne",
                "summary": "Retrieve one item StoreStaffBoundEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreStaffBoundEntity",
                                    "$ref": "#/components/schemas/StoreStaffBoundEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-staff-bound"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudStoreStaffBoundController_update",
                "summary": "Update item StoreStaffBoundEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreStaffBoundUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreStaffBoundEntity",
                                    "$ref": "#/components/schemas/StoreStaffBoundEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-staff-bound"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreStaffBoundController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-staff-bound"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudStoreStaffBoundController_recover",
                "summary": "Recover item StoreStaffBoundEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StoreStaffBoundEntity",
                                    "$ref": "#/components/schemas/StoreStaffBoundEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-staff-bound"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-staff-bound/many/for-staff": {
            "post": {
                "operationId": "CrudStoreStaffBoundController_createManyForStaff",
                "summary": "Create many bounds for staff",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffStoreManyCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StoreStaffBoundEntity"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-staff-bound"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-staff-bound/many/for-store": {
            "post": {
                "operationId": "CrudStoreStaffBoundController_createManyForStore",
                "summary": "Create many bounds for store",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreStaffManyCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StoreStaffBoundEntity"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-staff-bound"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-staff-bound/import": {
            "post": {
                "operationId": "CrudStoreStaffBoundController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-store-staff-bound"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-store-staff-bound/export": {
            "get": {
                "operationId": "CrudStoreStaffBoundController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-store-staff-bound"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-vendor-category": {
            "post": {
                "operationId": "CrudVendorCategoryController_create",
                "summary": "Create one item VendorCategoryEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VendorCategoryCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "VendorCategoryEntity",
                                    "$ref": "#/components/schemas/VendorCategoryEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "VendorCategoryEntity",
                                    "$ref": "#/components/schemas/VendorCategoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudVendorCategoryController_find",
                "summary": "Retrieve multiple items VendorCategoryEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<VendorCategoryEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/VendorCategoryEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudVendorCategoryController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-vendor-category/{id}": {
            "get": {
                "operationId": "CrudVendorCategoryController_findOne",
                "summary": "Retrieve one item VendorCategoryEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "VendorCategoryEntity",
                                    "$ref": "#/components/schemas/VendorCategoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudVendorCategoryController_update",
                "summary": "Update item VendorCategoryEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VendorCategoryUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "VendorCategoryEntity",
                                    "$ref": "#/components/schemas/VendorCategoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudVendorCategoryController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudVendorCategoryController_recover",
                "summary": "Recover item VendorCategoryEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "VendorCategoryEntity",
                                    "$ref": "#/components/schemas/VendorCategoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-vendor-category/import": {
            "post": {
                "operationId": "CrudVendorCategoryController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-vendor-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-vendor-category/export": {
            "get": {
                "operationId": "CrudVendorCategoryController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-vendor-category"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-payback-card": {
            "post": {
                "operationId": "CrudPaybackCardController_create",
                "summary": "Create one item PaybackCardEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaybackCardCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "PaybackCardEntity",
                                    "$ref": "#/components/schemas/PaybackCardEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PaybackCardEntity",
                                    "$ref": "#/components/schemas/PaybackCardEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-payback-card"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudPaybackCardController_find",
                "summary": "Retrieve multiple items PaybackCardEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<PaybackCardEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/PaybackCardEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-payback-card"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudPaybackCardController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-payback-card"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-payback-card/{id}": {
            "get": {
                "operationId": "CrudPaybackCardController_findOne",
                "summary": "Retrieve one item PaybackCardEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PaybackCardEntity",
                                    "$ref": "#/components/schemas/PaybackCardEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-payback-card"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudPaybackCardController_update",
                "summary": "Update item PaybackCardEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaybackCardUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PaybackCardEntity",
                                    "$ref": "#/components/schemas/PaybackCardEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-payback-card"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudPaybackCardController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-payback-card"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudPaybackCardController_recover",
                "summary": "Recover item PaybackCardEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PaybackCardEntity",
                                    "$ref": "#/components/schemas/PaybackCardEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-payback-card"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-payback-card/import": {
            "post": {
                "operationId": "CrudPaybackCardController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-payback-card"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-payback-card/export": {
            "get": {
                "operationId": "CrudPaybackCardController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-payback-card"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-categories-and-groups-template": {
            "post": {
                "operationId": "CrudStoreCategoriesAndGroupsTemplatesController_create",
                "summary": "Create one item CategoriesAndGroupsTemplateEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoriesAndGroupsTemplateCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "CategoriesAndGroupsTemplateEntity",
                                    "$ref": "#/components/schemas/CategoriesAndGroupsTemplateEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CategoriesAndGroupsTemplateEntity",
                                    "$ref": "#/components/schemas/CategoriesAndGroupsTemplateEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-categories-and-groups-template"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudStoreCategoriesAndGroupsTemplatesController_find",
                "summary": "Retrieve multiple items CategoriesAndGroupsTemplateEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<CategoriesAndGroupsTemplateEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CategoriesAndGroupsTemplateEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-categories-and-groups-template"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreCategoriesAndGroupsTemplatesController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-categories-and-groups-template"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-categories-and-groups-template/{id}": {
            "get": {
                "operationId": "CrudStoreCategoriesAndGroupsTemplatesController_findOne",
                "summary": "Retrieve one item CategoriesAndGroupsTemplateEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CategoriesAndGroupsTemplateEntity",
                                    "$ref": "#/components/schemas/CategoriesAndGroupsTemplateEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-categories-and-groups-template"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStoreCategoriesAndGroupsTemplatesController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-categories-and-groups-template"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudStoreCategoriesAndGroupsTemplatesController_recover",
                "summary": "Recover item CategoriesAndGroupsTemplateEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CategoriesAndGroupsTemplateEntity",
                                    "$ref": "#/components/schemas/CategoriesAndGroupsTemplateEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-categories-and-groups-template"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-staff": {
            "post": {
                "operationId": "CrudStaffController_create",
                "summary": "Create one item StaffEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "StaffEntity",
                                    "$ref": "#/components/schemas/StaffEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StaffEntity",
                                    "$ref": "#/components/schemas/StaffEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-staff"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudStaffController_find",
                "summary": "Retrieve multiple items StaffEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StaffEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StaffEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-staff"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStaffController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-staff"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-staff/{id}": {
            "get": {
                "operationId": "CrudStaffController_findOne",
                "summary": "Retrieve one item StaffEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StaffEntity",
                                    "$ref": "#/components/schemas/StaffEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-staff"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudStaffController_update",
                "summary": "Update item StaffEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StaffEntity",
                                    "$ref": "#/components/schemas/StaffEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-staff"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudStaffController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-staff"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudStaffController_recover",
                "summary": "Recover item StaffEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StaffEntity",
                                    "$ref": "#/components/schemas/StaffEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-staff"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-staff/import": {
            "post": {
                "operationId": "CrudStaffController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-staff"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-staff/export": {
            "get": {
                "operationId": "CrudStaffController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-staff"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-staff-session-history": {
            "get": {
                "operationId": "CrudStaffSessionHistoryController_find",
                "summary": "Retrieve multiple items StaffSessionHistoryEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StaffSessionHistoryEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StaffSessionHistoryEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-staff-session-history"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-staff-session-history/{id}": {
            "get": {
                "operationId": "CrudStaffSessionHistoryController_findOne",
                "summary": "Retrieve one item StaffSessionHistoryEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StaffSessionHistoryEntity",
                                    "$ref": "#/components/schemas/StaffSessionHistoryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-staff-session-history"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/staff-bound/find-unbound-staff/{storeId}": {
            "get": {
                "operationId": "StaffBoundController_findUnboundStaff",
                "parameters": [
                    {
                        "name": "storeId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": true,
                        "in": "query",
                        "example": 1,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<StaffEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StaffEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/app-settings-customer": {
            "get": {
                "operationId": "AppSettingsCustomerController_get",
                "summary": "Get App Customer Settings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppSettingsCustomerEntity"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "access-token": []
                    }
                ],
                "tags": [
                    "app-settings-customer"
                ]
            },
            "patch": {
                "operationId": "AppSettingsCustomerController_update",
                "summary": "Update App Customer Settings",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AppSettingsCustomerUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppSettingsCustomerEntity"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "access-token": []
                    }
                ],
                "tags": [
                    "app-settings-customer"
                ]
            }
        },
        "/app-settings-staff": {
            "get": {
                "operationId": "AppSettingsStaffController_get",
                "summary": "Get App Staff Settings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppSettingsStaffEntity"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "access-token": []
                    }
                ],
                "tags": [
                    "app-settings-staff"
                ]
            },
            "patch": {
                "operationId": "AppSettingsStaffController_update",
                "summary": "Update App Staff Settings",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AppSettingsStaffUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppSettingsStaffEntity"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "access-token": []
                    }
                ],
                "tags": [
                    "app-settings-staff"
                ]
            }
        },
        "/crud-country": {
            "post": {
                "operationId": "CrudCountryController_create",
                "summary": "Create one item CountryEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CountryCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "CountryEntity",
                                    "$ref": "#/components/schemas/CountryEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CountryEntity",
                                    "$ref": "#/components/schemas/CountryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-country"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudCountryController_find",
                "summary": "Retrieve multiple items CountryEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<CountryEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CountryEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-country"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudCountryController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-country"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-country/{id}": {
            "get": {
                "operationId": "CrudCountryController_findOne",
                "summary": "Retrieve one item CountryEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CountryEntity",
                                    "$ref": "#/components/schemas/CountryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-country"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudCountryController_update",
                "summary": "Update item CountryEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CountryUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CountryEntity",
                                    "$ref": "#/components/schemas/CountryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-country"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudCountryController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-country"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudCountryController_recover",
                "summary": "Recover item CountryEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "CountryEntity",
                                    "$ref": "#/components/schemas/CountryEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-country"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-country/import": {
            "post": {
                "operationId": "CrudCountryController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-country"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-country/export": {
            "get": {
                "operationId": "CrudCountryController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-country"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/auth-manager/sign-up": {
            "post": {
                "operationId": "AuthManagerController_signUp",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManagerSignUpInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokensDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth-manager"
                ]
            }
        },
        "/auth-manager/send-verification-email": {
            "post": {
                "operationId": "AuthManagerController_sendVerificationEmail",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/auth-manager/sign-in": {
            "post": {
                "operationId": "AuthManagerController_signIn",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManagerSignInInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokensDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth-manager"
                ]
            }
        },
        "/auth-manager/sign-out": {
            "post": {
                "operationId": "AuthManagerController_signOut",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshTokenInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/auth-manager/sign-out-all": {
            "post": {
                "operationId": "AuthManagerController_signOutAll",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/auth-manager/verify-email": {
            "post": {
                "operationId": "AuthManagerController_verifyEmail",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailVerifyInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/auth-manager/refresh": {
            "post": {
                "operationId": "AuthManagerController_refresh",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshTokenInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokensDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth-manager"
                ]
            }
        },
        "/auth-manager/refresh/push-notification-token": {
            "post": {
                "operationId": "AuthManagerController_refreshPushNotificationToken",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshPushNotificationTokenInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/auth-manager/reset-password": {
            "post": {
                "operationId": "AuthManagerController_resetPassword",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/auth-manager/set-password": {
            "post": {
                "operationId": "AuthManagerController_setPassword",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetPasswordInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/auth-manager/change-password": {
            "post": {
                "operationId": "AuthManagerController_changePassword",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/auth-manager/session-log-out": {
            "post": {
                "operationId": "AuthManagerController_sessionLogOut",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionOutInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth-manager"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-manager-session": {
            "get": {
                "operationId": "ManagerSessionController_find",
                "summary": "Retrieve multiple items ManagerSessionEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<ManagerSessionEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ManagerSessionEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-manager-session"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-manager-session/{id}": {
            "get": {
                "operationId": "ManagerSessionController_findOne",
                "summary": "Retrieve one item ManagerSessionEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ManagerSessionEntity",
                                    "$ref": "#/components/schemas/ManagerSessionEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-manager-session"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/analytics-sales/by-products": {
            "get": {
                "operationId": "AnalyticsSalesController_getSalesByProducts",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateStart",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateEnd",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "name_i18n",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryCode",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subcategoryCode",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderedField",
                        "required": true,
                        "in": "query",
                        "example": "name_i18n",
                        "schema": {
                            "$ref": "#/components/schemas/SalesProductsOrderedFieldsEnum"
                        }
                    },
                    {
                        "name": "order",
                        "required": true,
                        "in": "query",
                        "example": "ASC",
                        "schema": {
                            "$ref": "#/components/schemas/OrderedEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageableAnalyticsSalesProducts"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics-sales"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/analytics-sales/sales-over-time": {
            "get": {
                "operationId": "AnalyticsSalesController_getSalesOverTime",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateStart",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateEnd",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "groupBy",
                        "required": true,
                        "in": "query",
                        "example": "DAY",
                        "schema": {
                            "$ref": "#/components/schemas/GroupByDateEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesOverTimeDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics-sales"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/analytics-sales/products-refund": {
            "get": {
                "operationId": "AnalyticsSalesController_getProductRefunds",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateStart",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateEnd",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "name_i18n",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryCode",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subcategoryCode",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order",
                        "required": true,
                        "in": "query",
                        "example": "ASC",
                        "schema": {
                            "$ref": "#/components/schemas/OrderedEnum"
                        }
                    },
                    {
                        "name": "orderedField",
                        "required": true,
                        "in": "query",
                        "example": "name_i18n",
                        "schema": {
                            "$ref": "#/components/schemas/SalesProductRefundOrderedFieldsEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageableProductRefund"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics-sales"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/analytics-sales/products-out-of-stock": {
            "get": {
                "operationId": "AnalyticsSalesController_productsOutOfStock",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateStart",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateEnd",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "example": "Bottle",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageableProductsOutOfStockDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics-sales"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/analytics-customers/customers-over-time": {
            "get": {
                "operationId": "AnalyticsCustomersController_customersOverTime",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateStart",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateEnd",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/CustomerRoleEnum"
                        }
                    },
                    {
                        "name": "groupBy",
                        "required": true,
                        "in": "query",
                        "example": "DAY",
                        "schema": {
                            "$ref": "#/components/schemas/GroupByDateEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BarCartValueDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics-customers"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/analytics-customers/loyal-customers": {
            "get": {
                "operationId": "AnalyticsCustomersController_loyalCustomers",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order",
                        "required": true,
                        "in": "query",
                        "example": "ASC",
                        "schema": {
                            "$ref": "#/components/schemas/OrderedEnum"
                        }
                    },
                    {
                        "name": "orderedField",
                        "required": true,
                        "in": "query",
                        "example": "customerNumber",
                        "schema": {
                            "$ref": "#/components/schemas/LoyalCustomerOrderedFieldsEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageableLoyalCustomerDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics-customers"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/analytics-customers/one-time-customers": {
            "get": {
                "operationId": "AnalyticsCustomersController_oneTimeCustomers",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateStart",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateEnd",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "example": "Matthew",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "totalRevenue",
                        "required": false,
                        "in": "query",
                        "example": ">= 0.15",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "itemsPurchased",
                        "required": false,
                        "in": "query",
                        "example": "!= 0.15",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order",
                        "required": true,
                        "in": "query",
                        "example": "ASC",
                        "schema": {
                            "$ref": "#/components/schemas/OrderedEnum"
                        }
                    },
                    {
                        "name": "orderedField",
                        "required": true,
                        "in": "query",
                        "example": "customerName",
                        "schema": {
                            "$ref": "#/components/schemas/OneTimeCustomerOrderedFieldsEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageableOneTimeCustomersDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics-customers"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/analytics-customers/customer-revenue-breakdown/{id}": {
            "get": {
                "operationId": "AnalyticsCustomersController_customerRevenueBreakdown",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "revenueType",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/CustomerRevenueTypesEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BarCartValueDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics-customers"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/analytics-customers/customer-category-breakdown/{id}": {
            "get": {
                "operationId": "AnalyticsCustomersController_customerCategoryBreakdown",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StackedBarCartValueDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics-customers"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/analytics-customers/customer-orders-heatmap/{id}": {
            "get": {
                "operationId": "AnalyticsCustomersController_customerOrdersHeatMap",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateStart",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateEnd",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerOrdersHeatMapDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics-customers"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/analytics-product-search/term": {
            "get": {
                "operationId": "AnalyticsProductSearchController_getProductSearchTerm",
                "summary": "Get product search term",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "countryCode",
                        "required": false,
                        "in": "query",
                        "example": "DE",
                        "schema": {
                            "$ref": "#/components/schemas/Iso2Enum"
                        }
                    },
                    {
                        "name": "term",
                        "required": false,
                        "in": "query",
                        "description": "Term",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "dateStart",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateEnd",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductSearchTermsDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics-product-search"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/analytics-product-search/product": {
            "get": {
                "operationId": "AnalyticsProductSearchController_getProductSearchTermProduct",
                "summary": "Get product search term",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "term",
                        "required": true,
                        "in": "query",
                        "description": "Term",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryCode",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subcategoryCode",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productName",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductSearchTermProductsDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics-product-search"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/analytics-product-search/popular-terms": {
            "get": {
                "operationId": "AnalyticsProductSearchController_getPopularTerms",
                "summary": "Get product search popular terms",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EN",
                                "DE",
                                "FR",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductSearchPopularTermsDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics-product-search"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/order-history/{id}/history": {
            "get": {
                "operationId": "OrderHistoryController_history",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderHistoryDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "order-history"
                ]
            }
        },
        "/app-process-order/process-prescheduled-orders": {
            "get": {
                "operationId": "AppProcessOrderController_processPrescheduledOrders",
                "summary": "Process pre-scheduled orders",
                "parameters": [
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "app-process-order"
                ]
            }
        },
        "/app-process-order/process-still-not-accept-orders": {
            "get": {
                "operationId": "AppProcessOrderController_processStillNotAcceptOrders",
                "summary": "Process delayed to accept orders",
                "parameters": [
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "app-process-order"
                ]
            }
        },
        "/app-process-order/process-delayed-to-start-orders": {
            "get": {
                "operationId": "AppProcessOrderController_processDelayedToStartOrders",
                "summary": "Process delayed to start orders",
                "parameters": [
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "app-process-order"
                ]
            }
        },
        "/app-process-order/process-delayed-to-end-orders": {
            "get": {
                "operationId": "AppProcessOrderController_processDelayedToEndOrders",
                "summary": "Process delayed to end orders",
                "parameters": [
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "app-process-order"
                ]
            }
        },
        "/app-process-order/process-delayed-payment-pending-orders": {
            "get": {
                "operationId": "AppProcessOrderController_processDelayedPaymentPendingOrders",
                "summary": "Process delayed payment pending orders",
                "parameters": [
                    {
                        "name": "apikey",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "app-process-order"
                ]
            }
        },
        "/crud-faq-topic": {
            "post": {
                "operationId": "CrudFaqTopicController_create",
                "summary": "Create one item FaqTopicEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FaqTopicCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "FaqTopicEntity",
                                    "$ref": "#/components/schemas/FaqTopicEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "FaqTopicEntity",
                                    "$ref": "#/components/schemas/FaqTopicEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-topic"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudFaqTopicController_find",
                "summary": "Retrieve multiple items FaqTopicEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<FaqTopicEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/FaqTopicEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-topic"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudFaqTopicController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-topic"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-faq-topic/{id}": {
            "get": {
                "operationId": "CrudFaqTopicController_findOne",
                "summary": "Retrieve one item FaqTopicEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "FaqTopicEntity",
                                    "$ref": "#/components/schemas/FaqTopicEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-topic"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudFaqTopicController_update",
                "summary": "Update item FaqTopicEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FaqTopicUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "FaqTopicEntity",
                                    "$ref": "#/components/schemas/FaqTopicEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-topic"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudFaqTopicController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-topic"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudFaqTopicController_recover",
                "summary": "Recover item FaqTopicEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "FaqTopicEntity",
                                    "$ref": "#/components/schemas/FaqTopicEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-topic"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-faq-topic/import": {
            "post": {
                "operationId": "CrudFaqTopicController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-topic"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-faq-topic/export": {
            "get": {
                "operationId": "CrudFaqTopicController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-faq-topic"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-faq-item": {
            "post": {
                "operationId": "CrudFaqItemController_create",
                "summary": "Create one item FaqItemEntity",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FaqItemCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "description": "...",
                                "schema": {
                                    "title": "FaqItemEntity",
                                    "$ref": "#/components/schemas/FaqItemEntity"
                                }
                            }
                        },
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "FaqItemEntity",
                                    "$ref": "#/components/schemas/FaqItemEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-item"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "get": {
                "operationId": "CrudFaqItemController_find",
                "summary": "Retrieve multiple items FaqItemEntity[]",
                "description": "find",
                "parameters": [
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s",
                        "required": false,
                        "in": "query",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "or",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "example": "EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Pageable<FaqItemEntity>",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Pageable"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/FaqItemEntity"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-item"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudFaqItemController_deleteMany",
                "summary": "Delete multiple items",
                "parameters": [
                    {
                        "name": "ids",
                        "required": true,
                        "in": "query",
                        "description": "ID`s of items selected for delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-item"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-faq-item/{id}": {
            "get": {
                "operationId": "CrudFaqItemController_findOne",
                "summary": "Retrieve one item FaqItemEntity",
                "description": "find on item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "required": false,
                        "in": "query",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "join",
                        "required": false,
                        "in": "query",
                        "explode": true,
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "softDelete",
                        "required": false,
                        "in": "query",
                        "description": "Load deleted items",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language. Default EN",
                        "schema": {
                            "$ref": "#/components/schemas/LangCodeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "FaqItemEntity",
                                    "$ref": "#/components/schemas/FaqItemEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-item"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "patch": {
                "operationId": "CrudFaqItemController_update",
                "summary": "Update item FaqItemEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FaqItemUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "FaqItemEntity",
                                    "$ref": "#/components/schemas/FaqItemEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-item"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "delete": {
                "operationId": "CrudFaqItemController_delete",
                "summary": "Delete one item",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-item"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            },
            "put": {
                "operationId": "CrudFaqItemController_recover",
                "summary": "Recover item FaqItemEntity",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "FaqItemEntity",
                                    "$ref": "#/components/schemas/FaqItemEntity"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-item"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-faq-item/import": {
            "post": {
                "operationId": "CrudFaqItemController_import",
                "summary": "Import multiple items by file upload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "crud-faq-item"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/crud-faq-item/export": {
            "get": {
                "operationId": "CrudFaqItemController_export",
                "summary": "Export items to file",
                "parameters": [
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "ID`s of items selected for export",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fileExt",
                        "required": true,
                        "in": "query",
                        "description": "Export File Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "crud-faq-item"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/seed/update-delivery-fee": {
            "post": {
                "operationId": "SeedController_updateDeliveryFee",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "seed"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        },
        "/validation-pipe-test": {
            "post": {
                "operationId": "TestValidationPipeController_postValidationPipe",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostValidationPipeDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostValidationPipeDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "test-validation-pipe"
                ],
                "security": [
                    {
                        "access-token": []
                    }
                ]
            }
        }
    },
    "info": {
        "title": "Admin Endpoints API",
        "description": "",
        "version": "1.0.1",
        "contact": {}
    },
    "tags": [],
    "servers": [
        {
            "url": "http://127.0.0.1:3000"
        }
    ],
    "components": {
        "securitySchemes": {
            "access-token": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http"
            }
        },
        "schemas": {
            "OrderCountersDto": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number"
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "required": [
                    "value",
                    "label"
                ]
            },
            "DashboardDto": {
                "type": "object",
                "properties": {
                    "sales": {
                        "type": "number"
                    },
                    "ordersTotal": {
                        "type": "number"
                    },
                    "ordersCanceled": {
                        "type": "number"
                    },
                    "newCustomers": {
                        "type": "number"
                    },
                    "newGuest": {
                        "type": "number"
                    },
                    "orderCounters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderCountersDto"
                        }
                    }
                },
                "required": [
                    "sales",
                    "ordersTotal",
                    "ordersCanceled",
                    "newCustomers",
                    "newGuest",
                    "orderCounters"
                ]
            },
            "ManagerRoleEnum": {
                "type": "string",
                "enum": [
                    "ADMIN",
                    "MANAGER",
                    "VENDOR",
                    "SUPPORT"
                ]
            },
            "SalutationEnum": {
                "type": "string",
                "enum": [
                    "MR",
                    "MRS",
                    "MS",
                    "MISS",
                    "DR",
                    "SR",
                    "PROF"
                ]
            },
            "ManagerProfileDto": {
                "type": "object",
                "properties": {
                    "managerLanguageCode": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/ManagerRoleEnum"
                    },
                    "dateOfBirth": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "managerNumber": {
                        "type": "string"
                    },
                    "isEmailVerified": {
                        "type": "boolean"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "phoneCountryCode": {
                        "type": "string"
                    },
                    "placeOfBirth": {
                        "type": "string"
                    },
                    "salutation": {
                        "$ref": "#/components/schemas/SalutationEnum"
                    },
                    "nationalityCode": {
                        "type": "string"
                    }
                },
                "required": [
                    "managerLanguageCode",
                    "role",
                    "email",
                    "firstName",
                    "managerNumber",
                    "isEmailVerified",
                    "lastName"
                ]
            },
            "ManagerProfileUpdateInput": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "maxLength": 200,
                        "example": "Depp@brooksfleet.com"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "example": "1980-01-25"
                    },
                    "phoneCountryCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "nationalityCode": {
                        "type": "string"
                    },
                    "managerLanguageCode": {
                        "type": "string"
                    },
                    "salutation": {
                        "$ref": "#/components/schemas/SalutationEnum"
                    }
                },
                "required": [
                    "phoneCountryCode",
                    "phoneNumber"
                ]
            },
            "CustomerRoleEnum": {
                "type": "string",
                "enum": [
                    "GUEST",
                    "CUSTOMER"
                ]
            },
            "Iso2Enum": {
                "type": "string",
                "enum": [
                    "AD",
                    "AE",
                    "AF",
                    "AG",
                    "AI",
                    "AL",
                    "AM",
                    "AO",
                    "AQ",
                    "AR",
                    "AS",
                    "AT",
                    "AU",
                    "AW",
                    "AX",
                    "AZ",
                    "BA",
                    "BB",
                    "BD",
                    "BE",
                    "BF",
                    "BG",
                    "BH",
                    "BI",
                    "BJ",
                    "BL",
                    "BM",
                    "BN",
                    "BO",
                    "BQ",
                    "BR",
                    "BS",
                    "BT",
                    "BV",
                    "BW",
                    "BY",
                    "BZ",
                    "CA",
                    "CC",
                    "CD",
                    "CF",
                    "CG",
                    "CH",
                    "CI",
                    "CK",
                    "CL",
                    "CM",
                    "CN",
                    "CO",
                    "CR",
                    "CU",
                    "CV",
                    "CW",
                    "CX",
                    "CY",
                    "CZ",
                    "DE",
                    "DJ",
                    "DK",
                    "DM",
                    "DO",
                    "DZ",
                    "EC",
                    "EE",
                    "EG",
                    "EH",
                    "ER",
                    "ES",
                    "ET",
                    "FI",
                    "FJ",
                    "FK",
                    "FM",
                    "FO",
                    "FR",
                    "GA",
                    "GB",
                    "GD",
                    "GE",
                    "GF",
                    "GG",
                    "GH",
                    "GI",
                    "GL",
                    "GM",
                    "GN",
                    "GP",
                    "GQ",
                    "GR",
                    "GS",
                    "GT",
                    "GU",
                    "GW",
                    "GY",
                    "HK",
                    "HM",
                    "HN",
                    "HR",
                    "HT",
                    "HU",
                    "ID",
                    "IE",
                    "IL",
                    "IM",
                    "IN",
                    "IO",
                    "IQ",
                    "IR",
                    "IS",
                    "IT",
                    "JE",
                    "JM",
                    "JO",
                    "JP",
                    "KE",
                    "KG",
                    "KH",
                    "KI",
                    "KM",
                    "KN",
                    "KP",
                    "KR",
                    "KW",
                    "KY",
                    "KZ",
                    "LA",
                    "LB",
                    "LC",
                    "LI",
                    "LK",
                    "LR",
                    "LS",
                    "LT",
                    "LU",
                    "LV",
                    "LY",
                    "MA",
                    "MC",
                    "MD",
                    "ME",
                    "MF",
                    "MG",
                    "MH",
                    "MK",
                    "ML",
                    "MM",
                    "MN",
                    "MO",
                    "MP",
                    "MQ",
                    "MR",
                    "MS",
                    "MT",
                    "MU",
                    "MV",
                    "MW",
                    "MX",
                    "MY",
                    "MZ",
                    "NA",
                    "NC",
                    "NE",
                    "NF",
                    "NG",
                    "NI",
                    "NL",
                    "NO",
                    "NP",
                    "NR",
                    "NU",
                    "NZ",
                    "OM",
                    "PA",
                    "PE",
                    "PF",
                    "PG",
                    "PH",
                    "PK",
                    "PL",
                    "PM",
                    "PN",
                    "PR",
                    "PS",
                    "PT",
                    "PW",
                    "PY",
                    "QA",
                    "RE",
                    "RO",
                    "RS",
                    "RU",
                    "RW",
                    "SA",
                    "SB",
                    "SC",
                    "SD",
                    "SE",
                    "SG",
                    "SH",
                    "SI",
                    "SJ",
                    "SK",
                    "SL",
                    "SM",
                    "SN",
                    "SO",
                    "SR",
                    "SS",
                    "ST",
                    "SV",
                    "SX",
                    "SY",
                    "SZ",
                    "TC",
                    "TD",
                    "TF",
                    "TG",
                    "TH",
                    "TJ",
                    "TK",
                    "TL",
                    "TM",
                    "TN",
                    "TO",
                    "TR",
                    "TT",
                    "TV",
                    "TW",
                    "TZ",
                    "UA",
                    "UG",
                    "UM",
                    "US",
                    "UY",
                    "UZ",
                    "VA",
                    "VC",
                    "VE",
                    "VG",
                    "VI",
                    "VN",
                    "VU",
                    "WF",
                    "WS",
                    "YE",
                    "YT",
                    "ZA",
                    "ZM",
                    "ZW"
                ]
            },
            "Iso3Enum": {
                "type": "string",
                "enum": [
                    "AFG",
                    "ALA",
                    "ALB",
                    "DZA",
                    "ASM",
                    "AND",
                    "AGO",
                    "AIA",
                    "ATA",
                    "ATG",
                    "ARG",
                    "ARM",
                    "ABW",
                    "AUS",
                    "AUT",
                    "AZE",
                    "BHS",
                    "BHR",
                    "BGD",
                    "BRB",
                    "BLR",
                    "BEL",
                    "BLZ",
                    "BEN",
                    "BMU",
                    "BTN",
                    "BOL",
                    "BES",
                    "BIH",
                    "BWA",
                    "BVT",
                    "BRA",
                    "IOT",
                    "BRN",
                    "BGR",
                    "BFA",
                    "BDI",
                    "CPV",
                    "KHM",
                    "CMR",
                    "CAN",
                    "CYM",
                    "CAF",
                    "TCD",
                    "CHL",
                    "CHN",
                    "CXR",
                    "CCK",
                    "COL",
                    "COM",
                    "COG",
                    "COD",
                    "COK",
                    "CRI",
                    "CIV",
                    "HRV",
                    "CUB",
                    "CUW",
                    "CYP",
                    "CZE",
                    "DNK",
                    "DJI",
                    "DMA",
                    "DOM",
                    "ECU",
                    "EGY",
                    "SLV",
                    "GNQ",
                    "ERI",
                    "EST",
                    "SWZ",
                    "ETH",
                    "FLK",
                    "FRO",
                    "FJI",
                    "FIN",
                    "FRA",
                    "GUF",
                    "PYF",
                    "ATF",
                    "GAB",
                    "GMB",
                    "GEO",
                    "DEU",
                    "GHA",
                    "GIB",
                    "GRC",
                    "GRL",
                    "GRD",
                    "GLP",
                    "GUM",
                    "GTM",
                    "GGY",
                    "GIN",
                    "GNB",
                    "GUY",
                    "HTI",
                    "HMD",
                    "VAT",
                    "HND",
                    "HKG",
                    "HUN",
                    "ISL",
                    "IND",
                    "IDN",
                    "IRN",
                    "IRQ",
                    "IRL",
                    "IMN",
                    "ISR",
                    "ITA",
                    "JAM",
                    "JPN",
                    "JEY",
                    "JOR",
                    "KAZ",
                    "KEN",
                    "KIR",
                    "PRK",
                    "KOR",
                    "KWT",
                    "KGZ",
                    "LAO",
                    "LVA",
                    "LBN",
                    "LSO",
                    "LBR",
                    "LBY",
                    "LIE",
                    "LTU",
                    "LUX",
                    "MAC",
                    "MDG",
                    "MWI",
                    "MYS",
                    "MDV",
                    "MLI",
                    "MLT",
                    "MHL",
                    "MTQ",
                    "MRT",
                    "MUS",
                    "MYT",
                    "MEX",
                    "FSM",
                    "MDA",
                    "MCO",
                    "MNG",
                    "MNE",
                    "MSR",
                    "MAR",
                    "MOZ",
                    "MMR",
                    "NAM",
                    "NRU",
                    "NPL",
                    "NLD",
                    "NCL",
                    "NZL",
                    "NIC",
                    "NER",
                    "NGA",
                    "NIU",
                    "NFK",
                    "MKD",
                    "MNP",
                    "NOR",
                    "OMN",
                    "PAK",
                    "PLW",
                    "PSE",
                    "PAN",
                    "PNG",
                    "PRY",
                    "PER",
                    "PHL",
                    "PCN",
                    "POL",
                    "PRT",
                    "PRI",
                    "QAT",
                    "REU",
                    "ROU",
                    "RUS",
                    "RWA",
                    "BLM",
                    "SHN",
                    "KNA",
                    "LCA",
                    "MAF",
                    "SPM",
                    "VCT",
                    "WSM",
                    "SMR",
                    "STP",
                    "SAU",
                    "SEN",
                    "SRB",
                    "SYC",
                    "SLE",
                    "SGP",
                    "SXM",
                    "SVK",
                    "SVN",
                    "SLB",
                    "SOM",
                    "ZAF",
                    "SGS",
                    "SSD",
                    "ESP",
                    "LKA",
                    "SDN",
                    "SUR",
                    "SJM",
                    "SWE",
                    "CHE",
                    "SYR",
                    "TWN",
                    "TJK",
                    "TZA",
                    "THA",
                    "TLS",
                    "TGO",
                    "TKL",
                    "TON",
                    "TTO",
                    "TUN",
                    "TUR",
                    "TKM",
                    "TCA",
                    "TUV",
                    "UGA",
                    "UKR",
                    "ARE",
                    "GBR",
                    "USA",
                    "UMI",
                    "URY",
                    "UZB",
                    "VUT",
                    "VEN",
                    "VNM",
                    "VGB",
                    "VIR",
                    "WLF",
                    "ESH",
                    "YEM",
                    "ZMB",
                    "ZWE"
                ]
            },
            "CountryEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Iso2Enum"
                    },
                    "iso2": {
                        "$ref": "#/components/schemas/Iso2Enum"
                    },
                    "iso3": {
                        "$ref": "#/components/schemas/Iso3Enum"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "code",
                    "iso2",
                    "iso3"
                ]
            },
            "LocationDto": {
                "type": "object",
                "properties": {
                    "lat": {
                        "type": "number"
                    },
                    "lng": {
                        "type": "number"
                    }
                },
                "required": [
                    "lat",
                    "lng"
                ]
            },
            "AddressTypeEnum": {
                "type": "string",
                "enum": [
                    "DELIVERY",
                    "BILLING"
                ]
            },
            "CustomerAddressEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "streets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "floorNumber": {
                        "type": "string"
                    },
                    "apartmentNumber": {
                        "type": "string"
                    },
                    "zipCode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryEntity"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationDto"
                    },
                    "addressName": {
                        "type": "string",
                        "example": "Home"
                    },
                    "addressType": {
                        "$ref": "#/components/schemas/AddressTypeEnum"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "deliveryComment": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "streets",
                    "addressName",
                    "addressType"
                ]
            },
            "LangCodeEnum": {
                "type": "string",
                "enum": [
                    "EN",
                    "DE",
                    "FR",
                    "ALL"
                ]
            },
            "LanguageEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "$ref": "#/components/schemas/LangCodeEnum"
                    },
                    "isPrimary": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "NationalityEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "CustomerSettingsEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "customerLanguage": {
                        "$ref": "#/components/schemas/LanguageEntity"
                    },
                    "customerLanguageCode": {
                        "$ref": "#/components/schemas/LangCodeEnum"
                    },
                    "phoneCountryCode": {
                        "type": "string",
                        "maxLength": 6
                    },
                    "phoneNumber": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "nationality": {
                        "$ref": "#/components/schemas/NationalityEntity"
                    },
                    "nationalityCode": {
                        "type": "string"
                    },
                    "salutation": {
                        "$ref": "#/components/schemas/SalutationEnum"
                    },
                    "dateOfBirth": {
                        "type": "string"
                    },
                    "placeOfBirth": {
                        "type": "string",
                        "maxLength": 400
                    },
                    "customerNumber": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "inviteCode": {
                        "type": "string",
                        "maxLength": 200
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "CustomerNotificationSettingsEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "newProductArrivals": {
                        "type": "boolean"
                    },
                    "sales": {
                        "type": "boolean"
                    },
                    "deliveryStatusChange": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "ManagerSettingsEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "managerLanguage": {
                        "$ref": "#/components/schemas/LanguageEntity"
                    },
                    "managerLanguageCode": {
                        "$ref": "#/components/schemas/LangCodeEnum"
                    },
                    "phoneCountryCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "nationality": {
                        "$ref": "#/components/schemas/NationalityEntity"
                    },
                    "nationalityCode": {
                        "type": "string"
                    },
                    "salutation": {
                        "$ref": "#/components/schemas/SalutationEnum"
                    },
                    "dateOfBirth": {
                        "type": "string"
                    },
                    "placeOfBirth": {
                        "type": "string"
                    },
                    "managerNumber": {
                        "type": "string",
                        "maxLength": 200
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "managerLanguageCode"
                ]
            },
            "ManagerEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "tempPassword": {
                        "type": "string"
                    },
                    "forgotDateTime": {
                        "type": "string"
                    },
                    "rightToBeForgotten": {
                        "type": "boolean"
                    },
                    "forgotUrl": {
                        "type": "string"
                    },
                    "isEmailVerified": {
                        "type": "boolean"
                    },
                    "isTermsAndConditionsAgreed": {
                        "type": "boolean"
                    },
                    "lastLoginDate": {
                        "type": "string"
                    },
                    "isOnline": {
                        "type": "boolean"
                    },
                    "note": {
                        "type": "string"
                    },
                    "appVersion": {
                        "type": "string"
                    },
                    "settingsId": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/ManagerRoleEnum"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/ManagerSettingsEntity"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "email",
                    "password",
                    "tempPassword",
                    "forgotDateTime",
                    "rightToBeForgotten",
                    "forgotUrl",
                    "isEmailVerified",
                    "isTermsAndConditionsAgreed",
                    "lastLoginDate",
                    "isOnline",
                    "note",
                    "appVersion",
                    "role"
                ]
            },
            "CustomerBanEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "managerId": {
                        "type": "string"
                    },
                    "managerComment": {
                        "type": "string",
                        "maxLength": 300
                    },
                    "startDateTime": {
                        "type": "string"
                    },
                    "endDateTime": {
                        "type": "string"
                    },
                    "manager": {
                        "$ref": "#/components/schemas/ManagerEntity"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerEntity"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "customerId",
                    "managerId",
                    "startDateTime"
                ]
            },
            "CustomerEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "tempPassword": {
                        "type": "string"
                    },
                    "forgotDateTime": {
                        "type": "string"
                    },
                    "rightToBeForgotten": {
                        "type": "boolean"
                    },
                    "forgotUrl": {
                        "type": "string"
                    },
                    "isEmailVerified": {
                        "type": "boolean"
                    },
                    "isTermsAndConditionsAgreed": {
                        "type": "boolean"
                    },
                    "lastLoginDate": {
                        "type": "string"
                    },
                    "isOnline": {
                        "type": "boolean"
                    },
                    "note": {
                        "type": "string"
                    },
                    "appVersion": {
                        "type": "string"
                    },
                    "settingsId": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/CustomerRoleEnum"
                    },
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerAddressEntity"
                        }
                    },
                    "carts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartEntity"
                        }
                    },
                    "settings": {
                        "$ref": "#/components/schemas/CustomerSettingsEntity"
                    },
                    "notificationSettings": {
                        "$ref": "#/components/schemas/CustomerNotificationSettingsEntity"
                    },
                    "bans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerBanEntity"
                        }
                    },
                    "tags_i18n": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "email",
                    "password",
                    "tempPassword",
                    "forgotDateTime",
                    "rightToBeForgotten",
                    "forgotUrl",
                    "isEmailVerified",
                    "isTermsAndConditionsAgreed",
                    "lastLoginDate",
                    "isOnline",
                    "note",
                    "appVersion",
                    "role"
                ]
            },
            "CorporateEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "StoreBrandEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "corporate": {
                        "$ref": "#/components/schemas/CorporateEntity"
                    },
                    "corporateCode": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "StoreRegionEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "StoreAddressEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "streets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "floorNumber": {
                        "type": "string"
                    },
                    "apartmentNumber": {
                        "type": "string"
                    },
                    "zipCode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryEntity"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationDto"
                    },
                    "gln": {
                        "type": "string",
                        "description": "Global location number"
                    },
                    "addressType": {
                        "type": "string",
                        "enum": [
                            "MAIN",
                            "SECONDARY",
                            "WAREHOUSE",
                            "OTHER"
                        ]
                    },
                    "storeId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "streets",
                    "addressType"
                ]
            },
            "StoreContactTypeEnum": {
                "type": "string",
                "enum": [
                    "MANAGER",
                    "SUPERVISOR",
                    "OTHER"
                ]
            },
            "StoreContactEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "lastName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "salutation": {
                        "$ref": "#/components/schemas/SalutationEnum"
                    },
                    "contactType": {
                        "$ref": "#/components/schemas/StoreContactTypeEnum"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phoneCountryCode": {
                        "type": "string",
                        "maxLength": 6
                    },
                    "phoneNumber": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreEntity"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "streets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "zipCode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryEntity"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "salutation"
                ]
            },
            "StoreClosingDayEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreEntity"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string",
                        "maxLength": 300
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "DayOfWeekEnum": {
                "type": "string",
                "enum": [
                    "MON",
                    "TUE",
                    "WED",
                    "THU",
                    "FRI",
                    "SAT",
                    "SUN"
                ]
            },
            "StoreOpeningHourEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "timeStart": {
                        "type": "string"
                    },
                    "timeEnd": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreEntity"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "daysOfWeek": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayOfWeekEnum"
                        }
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "StoreWeightOptionEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "timeStart": {
                        "type": "string"
                    },
                    "timeEnd": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "weightValue": {
                        "type": "number"
                    },
                    "storeId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "weightValue",
                    "storeId"
                ]
            },
            "StoreDeliveryZoneEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "zipCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryEntity"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "deliveryTime": {
                        "type": "number"
                    },
                    "defaultFee": {
                        "type": "number",
                        "description": "Default fee for this zone",
                        "example": 4.25
                    },
                    "isInstantDelivery": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "StoreSocialMediaEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "accountType": {
                        "type": "string"
                    },
                    "account": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "accountType",
                    "account",
                    "storeId"
                ]
            },
            "StoreDeliveryTimeEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "timeStart": {
                        "type": "string"
                    },
                    "timeEnd": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "storeId"
                ]
            },
            "StoreDeliveryFeeEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "timeStart": {
                        "type": "string"
                    },
                    "timeEnd": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "fee": {
                        "type": "number"
                    },
                    "zipCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreEntity"
                    },
                    "storeId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "CurrencyCodeEnum": {
                "type": "string",
                "enum": [
                    "USD",
                    "EUR",
                    "NOK",
                    "DKK"
                ]
            },
            "CurrencyEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CurrencyCodeEnum"
                    },
                    "symbol": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "VendorTypeEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "VendorCategoryEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "ProductSubcategoryEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "category": {
                        "$ref": "#/components/schemas/ProductCategoryEntity"
                    },
                    "categoryCode": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "order": {
                        "type": "number"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Unique identifying part of a web address"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "ProductCategoryEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "subcategories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductSubcategoryEntity"
                        }
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "order": {
                        "type": "number"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Unique identifying part of a web address"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "StaffRoleEnum": {
                "type": "string",
                "enum": [
                    "UNASSIGNED",
                    "DRIVER",
                    "PICKER",
                    "PICKER_DRIVER"
                ]
            },
            "StaffSettingsEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "staffLanguage": {
                        "$ref": "#/components/schemas/LanguageEntity"
                    },
                    "staffLanguageCode": {
                        "$ref": "#/components/schemas/LangCodeEnum"
                    },
                    "phoneCountryCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "staffNumber": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "nationality": {
                        "$ref": "#/components/schemas/NationalityEntity"
                    },
                    "nationalityCode": {
                        "type": "string"
                    },
                    "salutation": {
                        "$ref": "#/components/schemas/SalutationEnum"
                    },
                    "dateOfBirth": {
                        "type": "string"
                    },
                    "placeOfBirth": {
                        "type": "string"
                    },
                    "allowAssociateJobs": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "staffLanguageCode",
                    "allowAssociateJobs"
                ]
            },
            "StaffEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "tempPassword": {
                        "type": "string"
                    },
                    "forgotDateTime": {
                        "type": "string"
                    },
                    "rightToBeForgotten": {
                        "type": "boolean"
                    },
                    "forgotUrl": {
                        "type": "string"
                    },
                    "isEmailVerified": {
                        "type": "boolean"
                    },
                    "isTermsAndConditionsAgreed": {
                        "type": "boolean"
                    },
                    "lastLoginDate": {
                        "type": "string"
                    },
                    "isOnline": {
                        "type": "boolean"
                    },
                    "note": {
                        "type": "string"
                    },
                    "appVersion": {
                        "type": "string"
                    },
                    "settingsId": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/StaffRoleEnum"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/StaffSettingsEntity"
                    },
                    "storesBound": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "email",
                    "password",
                    "tempPassword",
                    "forgotDateTime",
                    "rightToBeForgotten",
                    "forgotUrl",
                    "isEmailVerified",
                    "isTermsAndConditionsAgreed",
                    "lastLoginDate",
                    "isOnline",
                    "note",
                    "appVersion",
                    "role"
                ]
            },
            "StoreStaffBoundEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "staffId": {
                        "type": "string"
                    },
                    "staff": {
                        "$ref": "#/components/schemas/StaffEntity"
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreEntity"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "storeId",
                    "staffId"
                ]
            },
            "StoreStaffRestrictionEnum": {
                "type": "string",
                "enum": [
                    "FREELANCE_ONLY",
                    "BOUND_ONLY",
                    "BOUND_AND_FREELANCE"
                ]
            },
            "StoreEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "name_public_short_i18n": {
                        "type": "string"
                    },
                    "name_public_long_i18n": {
                        "type": "string"
                    },
                    "storeBrand": {
                        "$ref": "#/components/schemas/StoreBrandEntity"
                    },
                    "storeBrandCode": {
                        "type": "string"
                    },
                    "corporate": {
                        "$ref": "#/components/schemas/CorporateEntity"
                    },
                    "corporateCode": {
                        "type": "string"
                    },
                    "region": {
                        "$ref": "#/components/schemas/StoreRegionEntity"
                    },
                    "storeRegionCode": {
                        "type": "string"
                    },
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreAddressEntity"
                        }
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreContactEntity"
                        }
                    },
                    "closingDays": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreClosingDayEntity"
                        }
                    },
                    "openingHours": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreOpeningHourEntity"
                        }
                    },
                    "storeWeights": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreWeightOptionEntity"
                        }
                    },
                    "deliveryZones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreDeliveryZoneEntity"
                        }
                    },
                    "socialMedia": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreSocialMediaEntity"
                        }
                    },
                    "deliveryTime": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreDeliveryTimeEntity"
                        }
                    },
                    "deliveryFee": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreDeliveryFeeEntity"
                        }
                    },
                    "logoUrl": {
                        "type": "string"
                    },
                    "heroImgUrl": {
                        "type": "string"
                    },
                    "promoImgUrl": {
                        "type": "string"
                    },
                    "landingImgUrl": {
                        "type": "string"
                    },
                    "primaryColor": {
                        "type": "string"
                    },
                    "secondaryColor": {
                        "type": "string"
                    },
                    "isPickup": {
                        "type": "boolean"
                    },
                    "isDelivery": {
                        "type": "boolean"
                    },
                    "isOnlineShipment": {
                        "type": "boolean"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/CurrencyEntity"
                    },
                    "currencyCode": {
                        "$ref": "#/components/schemas/CurrencyCodeEnum"
                    },
                    "vendorType": {
                        "$ref": "#/components/schemas/VendorTypeEntity"
                    },
                    "vendorTypeCode": {
                        "type": "string"
                    },
                    "vendorCategory": {
                        "$ref": "#/components/schemas/VendorCategoryEntity"
                    },
                    "vendorCategoryCode": {
                        "type": "string"
                    },
                    "productOutOfStockTime": {
                        "type": "number",
                        "description": "Product out out stock time, hours",
                        "example": 24
                    },
                    "productLink": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductCategoryEntity"
                        }
                    },
                    "subcategories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductSubcategoryEntity"
                        }
                    },
                    "staffBound": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreStaffBoundEntity"
                        }
                    },
                    "slug": {
                        "type": "string",
                        "description": "Unique identifying part of a web address"
                    },
                    "pickerRestriction": {
                        "example": "FREELANCE_ONLY",
                        "$ref": "#/components/schemas/StoreStaffRestrictionEnum"
                    },
                    "driverRestriction": {
                        "example": "FREELANCE_ONLY",
                        "$ref": "#/components/schemas/StoreStaffRestrictionEnum"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "name_public_short_i18n",
                    "name_public_long_i18n",
                    "pickerRestriction",
                    "driverRestriction"
                ]
            },
            "CartAddressEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "streets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "floorNumber": {
                        "type": "string"
                    },
                    "apartmentNumber": {
                        "type": "string"
                    },
                    "zipCode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryEntity"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationDto"
                    },
                    "cartId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "streets"
                ]
            },
            "ProductBrandEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "ProductUnitCodeEnum": {
                "type": "string",
                "enum": [
                    "GRAM",
                    "KILOGRAM",
                    "METER",
                    "CENTIMETER",
                    "LITER",
                    "MILLILITER",
                    "ITEM"
                ]
            },
            "ProductUnitEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "$ref": "#/components/schemas/ProductUnitCodeEnum"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "NutriScoreEnum": {
                "type": "string",
                "enum": [
                    "A",
                    "B",
                    "C",
                    "D",
                    "E",
                    "UNKNOWN"
                ]
            },
            "ProductDepositEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "itemDepositValueGross": {
                        "type": "number",
                        "example": 3.55
                    },
                    "itemDepositValueNet": {
                        "type": "number",
                        "example": 3.55
                    },
                    "itemDepositVatValue": {
                        "type": "number",
                        "example": 3.55
                    },
                    "boxDepositValueGross": {
                        "type": "number",
                        "example": 3.55
                    },
                    "boxDepositValueNet": {
                        "type": "number",
                        "example": 3.55
                    },
                    "boxDepositVatValue": {
                        "type": "number",
                        "example": 3.55
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "VatEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "value": {
                        "type": "number",
                        "example": 0
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "ProductEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "note_internal": {
                        "type": "string"
                    },
                    "note_external": {
                        "type": "string"
                    },
                    "gtin": {
                        "type": "string",
                        "description": "Global Trade Item Number"
                    },
                    "metaData": {
                        "type": "string"
                    },
                    "sku": {
                        "type": "string",
                        "description": "Stock Keeping Unit"
                    },
                    "ean": {
                        "type": "number",
                        "description": "European Article Number"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Unique identifying part of a web address"
                    },
                    "isAlcohol": {
                        "type": "boolean",
                        "description": "Is alcoholic drink"
                    },
                    "alcoholValue": {
                        "type": "number",
                        "description": "Alcohol value",
                        "example": 4.25
                    },
                    "isApproved": {
                        "type": "boolean",
                        "description": "Approved to be published"
                    },
                    "isPublic": {
                        "type": "boolean",
                        "description": "visible on backend"
                    },
                    "isPublicDateTime": {
                        "type": "string",
                        "description": "visible from"
                    },
                    "isPickup": {
                        "type": "boolean",
                        "default": true
                    },
                    "isPickAndDrive": {
                        "type": "boolean",
                        "default": true
                    },
                    "isOnlineShipment": {
                        "type": "boolean",
                        "default": true
                    },
                    "productBrand": {
                        "$ref": "#/components/schemas/ProductBrandEntity"
                    },
                    "productBrandCode": {
                        "type": "string"
                    },
                    "subcategory": {
                        "$ref": "#/components/schemas/ProductSubcategoryEntity"
                    },
                    "productSubcategoryCode": {
                        "type": "string"
                    },
                    "category": {
                        "$ref": "#/components/schemas/ProductCategoryEntity"
                    },
                    "productCategoryCode": {
                        "type": "string"
                    },
                    "productIngredients": {
                        "type": "string"
                    },
                    "imageUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "weight": {
                        "type": "number"
                    },
                    "productUnit": {
                        "$ref": "#/components/schemas/ProductUnitEntity"
                    },
                    "productUnitCode": {
                        "$ref": "#/components/schemas/ProductUnitCodeEnum"
                    },
                    "nutriScore": {
                        "default": "UNKNOWN",
                        "$ref": "#/components/schemas/NutriScoreEnum"
                    },
                    "baseUnitCode": {
                        "$ref": "#/components/schemas/ProductUnitCodeEnum"
                    },
                    "baseUnit": {
                        "$ref": "#/components/schemas/ProductUnitEntity"
                    },
                    "productMeasurement": {
                        "type": "number"
                    },
                    "baseMeasurement": {
                        "type": "number"
                    },
                    "defaultPrice": {
                        "type": "number",
                        "description": "Default product price",
                        "example": 4.25
                    },
                    "costPrice": {
                        "type": "number",
                        "description": "Cost product price",
                        "example": 4.25
                    },
                    "chargeTax": {
                        "type": "boolean",
                        "description": "Charge tax on this product"
                    },
                    "productLink": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductLinkEntity"
                        }
                    },
                    "deposit": {
                        "$ref": "#/components/schemas/ProductDepositEntity"
                    },
                    "depositId": {
                        "type": "string"
                    },
                    "vat": {
                        "$ref": "#/components/schemas/VatEntity"
                    },
                    "vatCode": {
                        "type": "string"
                    },
                    "productVatPercent": {
                        "type": "number"
                    },
                    "productValueGross": {
                        "type": "number",
                        "example": 3.55
                    },
                    "productValueNet": {
                        "type": "number",
                        "example": 3.55
                    },
                    "productVatValue": {
                        "type": "number",
                        "example": 3.55
                    },
                    "basePriceCoefficient": {
                        "type": "number",
                        "example": 3.55
                    },
                    "tags_i18n": {
                        "type": "string"
                    },
                    "noImage": {
                        "type": "boolean",
                        "description": "Image not found"
                    },
                    "manufacturer_i18n": {
                        "type": "string"
                    },
                    "nutritional_value_i18n": {
                        "type": "string"
                    },
                    "ingredients_i18n": {
                        "type": "string"
                    },
                    "special_notes_i18n": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "productUnitCode",
                    "baseUnitCode"
                ]
            },
            "PriceTypeEnum": {
                "type": "string",
                "enum": [
                    "REGULAR",
                    "SALE"
                ]
            },
            "ProductPriceEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "productLink": {
                        "$ref": "#/components/schemas/ProductLinkEntity"
                    },
                    "productLinkId": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "description": "Price",
                        "example": 4.25
                    },
                    "vat": {
                        "$ref": "#/components/schemas/VatEntity"
                    },
                    "vatCode": {
                        "type": "string"
                    },
                    "productVatPercent": {
                        "type": "number"
                    },
                    "note": {
                        "type": "string"
                    },
                    "productValueGross": {
                        "type": "number",
                        "example": 3.55
                    },
                    "productValueNet": {
                        "type": "number",
                        "example": 3.55
                    },
                    "productVatValue": {
                        "type": "number",
                        "example": 3.55
                    },
                    "type": {
                        "$ref": "#/components/schemas/PriceTypeEnum"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "productValueGross",
                    "productValueNet",
                    "productVatValue"
                ]
            },
            "UserRoleEnum": {
                "type": "string",
                "enum": [
                    "manager",
                    "staff",
                    "customer"
                ]
            },
            "OutOfStockEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "productLink": {
                        "$ref": "#/components/schemas/ProductLinkEntity"
                    },
                    "productLinkId": {
                        "type": "string"
                    },
                    "startDateTime": {
                        "type": "string"
                    },
                    "endDateTime": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment"
                    },
                    "creatorRole": {
                        "$ref": "#/components/schemas/UserRoleEnum"
                    },
                    "creatorId": {
                        "type": "string"
                    },
                    "finderId": {
                        "type": "string",
                        "description": "Id of picker who found product"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "startDateTime",
                    "endDateTime"
                ]
            },
            "ProductLinkEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "product": {
                        "$ref": "#/components/schemas/ProductEntity"
                    },
                    "productId": {
                        "type": "string"
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreEntity"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductPriceEntity"
                        }
                    },
                    "outStocks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OutOfStockEntity"
                        }
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "ReplaceTypeEnum": {
                "type": "string",
                "enum": [
                    "REPLACE_OTHER_BRAND",
                    "REPLACE_CHEAPER",
                    "CONTACT_ME",
                    "REMOVE"
                ]
            },
            "CartItemEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "productLink": {
                        "$ref": "#/components/schemas/ProductLinkEntity"
                    },
                    "productLinkId": {
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "category_name_i18n": {
                        "type": "string"
                    },
                    "categoryCode": {
                        "type": "string"
                    },
                    "subcategory_name_i18n": {
                        "type": "string"
                    },
                    "subcategoryCode": {
                        "type": "string"
                    },
                    "imageUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "productVatPercent": {
                        "type": "number",
                        "description": "One Item VAT %",
                        "example": 17
                    },
                    "productVatValue": {
                        "type": "number",
                        "description": "One Item Vat Value",
                        "example": 4.25
                    },
                    "weight": {
                        "type": "number",
                        "description": "One Item weight in gramms",
                        "example": 500
                    },
                    "isAlcohol": {
                        "type": "boolean",
                        "description": "Is alcoholic drink"
                    },
                    "alcoholValue": {
                        "type": "number",
                        "description": "Alcohol value",
                        "example": 5.5
                    },
                    "replaceTypeCode": {
                        "nullable": true,
                        "$ref": "#/components/schemas/ReplaceTypeEnum"
                    },
                    "quantity": {
                        "type": "number"
                    },
                    "sku": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "ean": {
                        "type": "number",
                        "description": "European Article Number"
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "store_name_i18n": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "regularPrice": {
                        "type": "number",
                        "description": "Regular item price",
                        "example": 2.25
                    },
                    "salePrice": {
                        "type": "number",
                        "description": "Sale item price",
                        "example": 2.25
                    },
                    "price": {
                        "type": "number",
                        "description": "Saved item price",
                        "example": 4.25
                    },
                    "productId": {
                        "type": "string"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/CurrencyEntity"
                    },
                    "currencyCode": {
                        "$ref": "#/components/schemas/CurrencyCodeEnum"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerEntity"
                    },
                    "cart": {
                        "$ref": "#/components/schemas/CartEntity"
                    },
                    "cartId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "productVatPercent",
                    "productVatValue",
                    "weight",
                    "replaceTypeCode",
                    "store_name_i18n"
                ]
            },
            "CartStatusEnum": {
                "type": "string",
                "enum": [
                    "OPEN",
                    "PAYMENT_PENDING",
                    "PAID"
                ]
            },
            "CartEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerEntity"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreEntity"
                    },
                    "address": {
                        "$ref": "#/components/schemas/CartAddressEntity"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "cartCode": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItemEntity"
                        }
                    },
                    "replaceTypeCode": {
                        "$ref": "#/components/schemas/ReplaceTypeEnum"
                    },
                    "weight": {
                        "type": "number"
                    },
                    "maxWeight": {
                        "type": "number"
                    },
                    "cartStatus": {
                        "$ref": "#/components/schemas/CartStatusEnum"
                    },
                    "cartItemQuantity": {
                        "type": "number"
                    },
                    "cartProductQuantity": {
                        "type": "number"
                    },
                    "totalAmount": {
                        "type": "number",
                        "example": 4.25,
                        "description": "Order price without delivery fee"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "replaceTypeCode"
                ]
            },
            "CustomerSettingsCreateInput": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Jeffrey"
                    },
                    "lastName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Lebowski"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "example": "1949-12-04"
                    },
                    "placeOfBirth": {
                        "type": "string",
                        "example": "Los Angeles"
                    },
                    "customerLanguageCode": {
                        "$ref": "#/components/schemas/LangCodeEnum"
                    },
                    "nationalityCode": {
                        "type": "string"
                    },
                    "salutation": {
                        "$ref": "#/components/schemas/SalutationEnum"
                    },
                    "phoneCountryCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "customerNumber": {
                        "type": "string"
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "customerLanguageCode"
                ]
            },
            "I18nInput": {
                "type": "object",
                "properties": {
                    "EN": {
                        "type": "string",
                        "example": ""
                    },
                    "DE": {
                        "type": "string",
                        "example": ""
                    },
                    "FR": {
                        "type": "string",
                        "example": ""
                    }
                },
                "required": [
                    "EN"
                ]
            },
            "CustomerCreateInput": {
                "type": "object",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/CustomerRoleEnum"
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 200,
                        "example": "lebowski@bringoo.de"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "DUDE"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/CustomerSettingsCreateInput"
                    },
                    "note": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "tags_i18n": {
                        "description": "Multi language tags",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    }
                },
                "required": [
                    "role",
                    "email",
                    "password",
                    "settings"
                ]
            },
            "CustomerSettingsUpdateInput": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Jeffrey"
                    },
                    "lastName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Lebowski"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "example": "1949-12-04"
                    },
                    "placeOfBirth": {
                        "type": "string",
                        "example": "Los Angeles"
                    },
                    "customerLanguageCode": {
                        "$ref": "#/components/schemas/LangCodeEnum"
                    },
                    "nationalityCode": {
                        "type": "string"
                    },
                    "salutation": {
                        "$ref": "#/components/schemas/SalutationEnum"
                    },
                    "phoneCountryCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    }
                }
            },
            "CustomerNotificationSettingsInput": {
                "type": "object",
                "properties": {
                    "newProductArrivals": {
                        "type": "boolean"
                    },
                    "sales": {
                        "type": "boolean"
                    },
                    "deliveryStatusChange": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "newProductArrivals",
                    "sales",
                    "deliveryStatusChange"
                ]
            },
            "CustomerUpdateInput": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "maxLength": 200,
                        "example": "the-dude@bringoo.de"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "settings": {
                        "$ref": "#/components/schemas/CustomerSettingsUpdateInput"
                    },
                    "notificationSettings": {
                        "$ref": "#/components/schemas/CustomerNotificationSettingsInput"
                    },
                    "note": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "tags_i18n": {
                        "description": "Multi language tags",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    }
                }
            },
            "InputError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "property": {
                        "type": "string"
                    }
                },
                "required": [
                    "message",
                    "property"
                ]
            },
            "ImportErrorDto": {
                "type": "object",
                "properties": {
                    "target": {
                        "type": "object",
                        "description": "Input value"
                    },
                    "errors": {
                        "description": "Validation errors",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InputError"
                        }
                    }
                },
                "required": [
                    "target",
                    "errors"
                ]
            },
            "ImportDto": {
                "type": "object",
                "properties": {
                    "keys": {
                        "description": "Input object keys",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "errors": {
                        "description": "Validation errors",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportErrorDto"
                        }
                    },
                    "isValid": {
                        "type": "boolean",
                        "description": "Number of rows with errors"
                    },
                    "errorCount": {
                        "type": "number",
                        "description": "Number of rows with errors"
                    },
                    "successCount": {
                        "type": "number",
                        "description": "Total imported rows count"
                    },
                    "totalCount": {
                        "type": "number",
                        "description": "Total rows count"
                    }
                },
                "required": [
                    "keys",
                    "errors",
                    "isValid",
                    "errorCount",
                    "successCount",
                    "totalCount"
                ]
            },
            "CustomerBanCreateInput": {
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "startDateTime": {
                        "type": "string",
                        "example": "2021-01-11"
                    },
                    "endDateTime": {
                        "type": "string",
                        "example": "2023-12-25"
                    },
                    "managerComment": {
                        "type": "string"
                    }
                },
                "required": [
                    "isActive",
                    "customerId",
                    "startDateTime"
                ]
            },
            "CustomerBannedDto": {
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "startDateTime": {
                        "type": "string"
                    },
                    "endDateTime": {
                        "type": "string"
                    },
                    "managerComment": {
                        "type": "string"
                    }
                },
                "required": [
                    "isActive",
                    "startDateTime",
                    "endDateTime",
                    "managerComment"
                ]
            },
            "CustomerSessionHistoryEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "deviceName": {
                        "type": "string"
                    },
                    "deviceType": {
                        "type": "string"
                    },
                    "deviceBrand": {
                        "type": "string"
                    },
                    "deviceOs": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "appVersion": {
                        "type": "string"
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "customerId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "deviceId",
                    "customerId"
                ]
            },
            "LocationInput": {
                "type": "object",
                "properties": {
                    "lat": {
                        "type": "number",
                        "example": 53.54971200706458
                    },
                    "lng": {
                        "type": "number",
                        "example": 9.968216616141591
                    }
                },
                "required": [
                    "lat",
                    "lng"
                ]
            },
            "CustomerAddressCreateInput": {
                "type": "object",
                "properties": {
                    "addressName": {
                        "type": "string",
                        "example": "Home"
                    },
                    "addressType": {
                        "type": "string",
                        "enum": [
                            "DELIVERY",
                            "BILLING"
                        ]
                    },
                    "streets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string",
                        "example": "Hamburg"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "floorNumber": {
                        "type": "string",
                        "example": "1"
                    },
                    "apartmentNumber": {
                        "type": "string",
                        "example": "16a"
                    },
                    "zipCode": {
                        "type": "string",
                        "example": "NW1 6XE"
                    },
                    "state": {
                        "type": "string",
                        "example": "Marylebone"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationInput"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "deliveryComment": {
                        "type": "string",
                        "maxLength": 300
                    }
                },
                "required": [
                    "addressName",
                    "addressType",
                    "streets",
                    "countryCode",
                    "city",
                    "customerId",
                    "zipCode",
                    "location"
                ]
            },
            "CustomerAddressUpdateInput": {
                "type": "object",
                "properties": {
                    "addressName": {
                        "type": "string",
                        "example": "Home"
                    },
                    "addressType": {
                        "type": "string",
                        "enum": [
                            "DELIVERY",
                            "BILLING"
                        ]
                    },
                    "streets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string",
                        "example": "Hamburg"
                    },
                    "floorNumber": {
                        "type": "string",
                        "example": "1"
                    },
                    "apartmentNumber": {
                        "type": "string",
                        "example": "16a"
                    },
                    "zipCode": {
                        "type": "string",
                        "example": "NW1 6XE"
                    },
                    "state": {
                        "type": "string",
                        "example": "Marylebone"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationInput"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "deliveryComment": {
                        "type": "string",
                        "maxLength": 300
                    }
                },
                "required": [
                    "city",
                    "location"
                ]
            },
            "LanguageCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "default": "EN",
                        "$ref": "#/components/schemas/LangCodeEnum"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code"
                ]
            },
            "LanguageUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "default": "EN",
                        "$ref": "#/components/schemas/LangCodeEnum"
                    }
                },
                "required": [
                    "name_i18n",
                    "code"
                ]
            },
            "ChangePrimaryInput": {
                "type": "object",
                "properties": {
                    "lang": {
                        "$ref": "#/components/schemas/LangCodeEnum"
                    }
                },
                "required": [
                    "lang"
                ]
            },
            "UserGroupEnum": {
                "type": "string",
                "enum": [
                    "manager",
                    "staff",
                    "customer"
                ]
            },
            "PushNotificationGroupEnum": {
                "type": "string",
                "enum": [
                    "newProductArrivals",
                    "sales",
                    "deliveryStatusChange"
                ]
            },
            "PushNotificationCodeEnum": {
                "type": "string",
                "enum": [
                    "STAFF_ORDER_CANCEL_CUSTOMER",
                    "STAFF_ORDER_CANCEL_ADMIN",
                    "STAFF_ORDER_CANCEL_NO_PRODUCTS",
                    "STAFF_ORDER_JOB_PICKER_CREATED",
                    "STAFF_ORDER_JOB_PICKER_ACCEPTED",
                    "STAFF_ORDER_JOB_PICKER_END",
                    "STAFF_ORDER_JOB_RIDER_CREATED",
                    "STAFF_ORDER_JOB_RIDER_ACCEPTED",
                    "STAFF_ORDER_JOB_RIDER_END",
                    "STAFF_ORDER_JOB_PICKER_STILL_NOT_ACCEPTED",
                    "STAFF_ORDER_JOB_RIDER_STILL_NOT_ACCEPTED",
                    "STAFF_ORDER_JOB_PICKER_DELAYED_TO_START",
                    "STAFF_ORDER_JOB_RIDER_DELAYED_TO_START",
                    "CUSTOMER_ORDER_PAID_SUCCESSFUL",
                    "CUSTOMER_ORDER_CANCEL",
                    "CUSTOMER_ORDER_CANCEL_NO_PRODUCTS",
                    "CUSTOMER_ORDER_CANCEL_BY_SUPPORT",
                    "CUSTOMER_ORDER_JOB_PICKER_START",
                    "CUSTOMER_ORDER_UPDATE_PRODUCT",
                    "CUSTOMER_ORDER_PICK_COMPLETE",
                    "CUSTOMER_ORDER_JOB_RIDER_START",
                    "CUSTOMER_ORDER_JOB_RIDER_END",
                    "CUSTOMER_ORDER_TERMINATE_WITH_REFUND",
                    "CUSTOMER_ORDER_TERMINATE_NO_REFUND",
                    "CUSTOMER_ORDER_ADDRESS_CHANGED",
                    "CUSTOMER_ORDER_JOB_RIDER_DELAYED_TO_END",
                    "CUSTOMER_ORDER_PAYMENT_PENDING_DELAYED"
                ]
            },
            "PushNotificationEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "userGroup": {
                        "$ref": "#/components/schemas/UserGroupEnum"
                    },
                    "notificationGroup": {
                        "$ref": "#/components/schemas/PushNotificationGroupEnum"
                    },
                    "notificationCode": {
                        "$ref": "#/components/schemas/PushNotificationCodeEnum"
                    },
                    "title_i18n": {
                        "type": "string"
                    },
                    "body_i18n": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "userGroup",
                    "notificationGroup",
                    "notificationCode"
                ]
            },
            "PushNotificationCreateInput": {
                "type": "object",
                "properties": {
                    "title_i18n": {
                        "description": "Multi language title",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "body_i18n": {
                        "description": "Multi language body",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "userGroup": {
                        "$ref": "#/components/schemas/UserGroupEnum"
                    },
                    "notificationGroup": {
                        "$ref": "#/components/schemas/PushNotificationGroupEnum"
                    },
                    "notificationCode": {
                        "$ref": "#/components/schemas/PushNotificationCodeEnum"
                    }
                },
                "required": [
                    "title_i18n",
                    "body_i18n",
                    "userGroup",
                    "notificationGroup",
                    "notificationCode"
                ]
            },
            "PushNotificationUpdateInput": {
                "type": "object",
                "properties": {
                    "title_i18n": {
                        "description": "Multi language title",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "body_i18n": {
                        "description": "Multi language body",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "userGroup": {
                        "$ref": "#/components/schemas/UserGroupEnum"
                    },
                    "notificationGroup": {
                        "$ref": "#/components/schemas/PushNotificationGroupEnum"
                    },
                    "notificationCode": {
                        "$ref": "#/components/schemas/PushNotificationCodeEnum"
                    }
                }
            },
            "PushNotificationHistoryDataDto": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string"
                    },
                    "orderJobId": {
                        "type": "string"
                    },
                    "code": {
                        "$ref": "#/components/schemas/PushNotificationCodeEnum"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "orderNumber": {
                        "type": "string"
                    }
                },
                "required": [
                    "orderId",
                    "orderJobId",
                    "code",
                    "firstName",
                    "lastName",
                    "orderNumber"
                ]
            },
            "PushNotificationHistoryEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "userGroup": {
                        "$ref": "#/components/schemas/UserGroupEnum"
                    },
                    "title": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/PushNotificationHistoryDataDto"
                    },
                    "markedAsReaded": {
                        "type": "boolean"
                    },
                    "markedAsDeleted": {
                        "type": "boolean"
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "userId",
                    "userGroup",
                    "title",
                    "body",
                    "markedAsReaded",
                    "markedAsDeleted"
                ]
            },
            "ManagerSettingsCreateInput": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Jeffrey"
                    },
                    "lastName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Lebowski"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "example": "1949-12-04"
                    },
                    "placeOfBirth": {
                        "type": "string",
                        "example": "Los Angeles"
                    },
                    "managerLanguageCode": {
                        "$ref": "#/components/schemas/LangCodeEnum"
                    },
                    "nationalityCode": {
                        "type": "string"
                    },
                    "salutation": {
                        "$ref": "#/components/schemas/SalutationEnum"
                    },
                    "phoneCountryCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "managerLanguageCode"
                ]
            },
            "ManagerCreateInput": {
                "type": "object",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/ManagerRoleEnum"
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 200,
                        "example": "manager@bringoo.de"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "DUDE"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/ManagerSettingsCreateInput"
                    },
                    "note": {
                        "type": "string",
                        "maxLength": 200
                    }
                },
                "required": [
                    "role",
                    "email",
                    "password",
                    "settings"
                ]
            },
            "ManagerUpdateInput": {
                "type": "object",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/ManagerRoleEnum"
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 200,
                        "example": "manager@bringoo.de"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "settings": {
                        "$ref": "#/components/schemas/ManagerSettingsEntity"
                    },
                    "note": {
                        "type": "string",
                        "maxLength": 200
                    }
                }
            },
            "ManagerSessionHistoryEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "deviceName": {
                        "type": "string"
                    },
                    "deviceType": {
                        "type": "string"
                    },
                    "deviceBrand": {
                        "type": "string"
                    },
                    "deviceOs": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "appVersion": {
                        "type": "string"
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "managerId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "deviceId",
                    "managerId"
                ]
            },
            "CurrencyCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "$ref": "#/components/schemas/CurrencyCodeEnum"
                    },
                    "symbol": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code",
                    "symbol"
                ]
            },
            "CurrencyUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "$ref": "#/components/schemas/CurrencyCodeEnum"
                    },
                    "symbol": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n"
                ]
            },
            "JobCancelReasonEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "JobCancelReasonCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code"
                ]
            },
            "JobCancelReasonUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n",
                    "code"
                ]
            },
            "OrderCancelReasonEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "OrderCancelReasonCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code"
                ]
            },
            "OrderCancelReasonUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n",
                    "code"
                ]
            },
            "OrderItemStatusEnum": {
                "type": "string",
                "enum": [
                    "NEW",
                    "FOUND_ALL",
                    "FOUND_PARTIALLY",
                    "NOT_FOUND",
                    "REPLACED_ALL",
                    "SHIPPED_ALL",
                    "SHIPPED_PARTIALLY",
                    "CANCELED"
                ]
            },
            "OrderItemEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "productLink": {
                        "$ref": "#/components/schemas/ProductLinkEntity"
                    },
                    "productLinkId": {
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "category_name_i18n": {
                        "type": "string"
                    },
                    "categoryCode": {
                        "type": "string"
                    },
                    "subcategory_name_i18n": {
                        "type": "string"
                    },
                    "subcategoryCode": {
                        "type": "string"
                    },
                    "imageUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "productVatPercent": {
                        "type": "number",
                        "description": "One Item VAT %",
                        "example": 17
                    },
                    "productVatValue": {
                        "type": "number",
                        "description": "One Item Vat Value",
                        "example": 4.25
                    },
                    "weight": {
                        "type": "number",
                        "description": "One Item weight in gramms",
                        "example": 500
                    },
                    "isAlcohol": {
                        "type": "boolean",
                        "description": "Is alcoholic drink"
                    },
                    "alcoholValue": {
                        "type": "number",
                        "description": "Alcohol value",
                        "example": 5.5
                    },
                    "replaceTypeCode": {
                        "nullable": true,
                        "$ref": "#/components/schemas/ReplaceTypeEnum"
                    },
                    "quantity": {
                        "type": "number"
                    },
                    "sku": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "ean": {
                        "type": "number",
                        "description": "European Article Number"
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "store_name_i18n": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "regularPrice": {
                        "type": "number",
                        "description": "Regular item price",
                        "example": 2.25
                    },
                    "salePrice": {
                        "type": "number",
                        "description": "Sale item price",
                        "example": 2.25
                    },
                    "price": {
                        "type": "number",
                        "description": "Saved item price",
                        "example": 4.25
                    },
                    "productId": {
                        "type": "string"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/CurrencyEntity"
                    },
                    "currencyCode": {
                        "$ref": "#/components/schemas/CurrencyCodeEnum"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerEntity"
                    },
                    "orderTransaction": {
                        "$ref": "#/components/schemas/OrderTransactionEntity"
                    },
                    "orderTransactionId": {
                        "type": "string"
                    },
                    "orderItemStatus": {
                        "$ref": "#/components/schemas/OrderItemStatusEnum"
                    },
                    "isDeposit": {
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "mollieLineId": {
                        "type": "string"
                    },
                    "quantityFound": {
                        "type": "number"
                    },
                    "quantityRefund": {
                        "type": "number"
                    },
                    "shipmentId": {
                        "type": "string"
                    },
                    "paymentId": {
                        "type": "string"
                    },
                    "shipmentDate": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "productVatPercent",
                    "productVatValue",
                    "weight",
                    "replaceTypeCode",
                    "store_name_i18n"
                ]
            },
            "ErrorsLogDto": {
                "type": "object",
                "properties": {
                    "errorDate": {
                        "type": "string"
                    },
                    "errorType": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                },
                "required": [
                    "errorDate"
                ]
            },
            "OrderTransStatusEnum": {
                "type": "string",
                "enum": [
                    "NEW",
                    "PAID",
                    "PICKING",
                    "REPLACEMENT",
                    "COMPLETE"
                ]
            },
            "OrderTransactionEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "order": {
                        "$ref": "#/components/schemas/OrderEntity"
                    },
                    "orderId": {
                        "type": "string",
                        "description": "ID of bringoo order"
                    },
                    "mollieOrderId": {
                        "type": "string",
                        "description": "ID of Mollie order"
                    },
                    "orderItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemEntity"
                        }
                    },
                    "totalAmount": {
                        "type": "number",
                        "example": 4.25,
                        "description": "Order price without delivery fee"
                    },
                    "totalRefund": {
                        "type": "number",
                        "example": 4.25,
                        "description": "Total refund"
                    },
                    "paymentMethod": {
                        "type": "string"
                    },
                    "checkoutUrl": {
                        "type": "string"
                    },
                    "orderQuantityRequested": {
                        "type": "number"
                    },
                    "orderQuantityFound": {
                        "type": "number"
                    },
                    "mollieErrors": {
                        "$ref": "#/components/schemas/ErrorsLogDto"
                    },
                    "payDate": {
                        "type": "string"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/CurrencyEntity"
                    },
                    "currencyCode": {
                        "type": "string"
                    },
                    "orderTransactionNumber": {
                        "type": "string"
                    },
                    "orderTransactionStatus": {
                        "$ref": "#/components/schemas/OrderTransStatusEnum"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "JobTypeEnum": {
                "type": "string",
                "enum": [
                    "PICK",
                    "DRIVE"
                ]
            },
            "OrderJobStatusEnum": {
                "type": "string",
                "enum": [
                    "NEW",
                    "ACCEPTED",
                    "PROCESSING",
                    "PAYMENT_PENDING",
                    "PAUSED",
                    "COMPLETE",
                    "CANCELED"
                ]
            },
            "OrderJobEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "jobType": {
                        "$ref": "#/components/schemas/JobTypeEnum"
                    },
                    "jobStatus": {
                        "$ref": "#/components/schemas/OrderJobStatusEnum"
                    },
                    "order": {
                        "$ref": "#/components/schemas/OrderEntity"
                    },
                    "orderId": {
                        "type": "string"
                    },
                    "staff": {
                        "$ref": "#/components/schemas/StaffEntity"
                    },
                    "staffId": {
                        "type": "string"
                    },
                    "acceptDateTime": {
                        "type": "string"
                    },
                    "startDateTime": {
                        "type": "string"
                    },
                    "endDateTime": {
                        "type": "string"
                    },
                    "completeDateTime": {
                        "type": "string"
                    },
                    "cancelDateTime": {
                        "type": "string"
                    },
                    "cancelReason": {
                        "$ref": "#/components/schemas/JobCancelReasonEntity"
                    },
                    "cancelReasonCode": {
                        "type": "string"
                    },
                    "cancelDescription": {
                        "type": "string"
                    },
                    "jobNumber": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "OrderAgeVerificationEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "ageConfirmVerbally": {
                        "type": "boolean"
                    },
                    "ageConfirmVerballyDateTime": {
                        "type": "string"
                    },
                    "ageConfirmVerballyIssue": {
                        "type": "string"
                    },
                    "ageConfirmVerballyIssueDateTime": {
                        "type": "string"
                    },
                    "idPhotoConfirm": {
                        "type": "boolean"
                    },
                    "idPhotoConfirmDateTime": {
                        "type": "string"
                    },
                    "idPhotoConfirmIssue": {
                        "type": "string"
                    },
                    "idPhotoConfirmIssueDateTime": {
                        "type": "string"
                    },
                    "ageVerified": {
                        "type": "boolean"
                    },
                    "ageVerifiedDateTime": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "OrderAddressEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "streets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "floorNumber": {
                        "type": "string"
                    },
                    "apartmentNumber": {
                        "type": "string"
                    },
                    "zipCode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryEntity"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationDto"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "customerNumber": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "orderAddressType": {
                        "$ref": "#/components/schemas/AddressTypeEnum"
                    },
                    "salutation": {
                        "type": "string"
                    },
                    "organizationName": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "streets"
                ]
            },
            "OrderStatusEnum": {
                "type": "string",
                "enum": [
                    "NEW",
                    "PAYMENT_PENDING",
                    "PAYMENT_ERROR",
                    "PAID",
                    "PENDING",
                    "READY",
                    "PICKING",
                    "DELIVERY_STARTED",
                    "DELIVERY",
                    "SHIPMENT",
                    "REJECTED",
                    "COMPLETE",
                    "COMPLETE_TERMINATION_REFUND",
                    "COMPLETE_TERMINATION_NO_REFUND",
                    "CANCELED",
                    "CANCELED_NO_PRODUCT",
                    "CANCELED_BY_MANAGER"
                ]
            },
            "OrderTypeEnum": {
                "type": "string",
                "enum": [
                    "DELIVERY",
                    "PICKUP",
                    "SHIPPING"
                ]
            },
            "DeliveryDestinationEnum": {
                "type": "string",
                "enum": [
                    "HOME",
                    "NEIGHBOUR"
                ]
            },
            "OrderPriorityEnum": {
                "type": "string",
                "enum": [
                    "LOW",
                    "MEDIUM",
                    "HIGH",
                    "PREMIUM"
                ]
            },
            "OrderEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerEntity"
                    },
                    "customerId": {
                        "type": "string",
                        "description": "ID of customer who created this order"
                    },
                    "customerLanguageCode": {
                        "description": "Customer language code",
                        "$ref": "#/components/schemas/LangCodeEnum"
                    },
                    "cartId": {
                        "type": "string"
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreEntity"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "orderEvents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderEventEntity"
                        }
                    },
                    "orderTransactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderTransactionEntity"
                        }
                    },
                    "orderWeight": {
                        "type": "number",
                        "description": "Total order weight in grams",
                        "example": 500
                    },
                    "maxWeight": {
                        "type": "number",
                        "description": "Max order weight in grams",
                        "example": 500
                    },
                    "jobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderJobEntity"
                        }
                    },
                    "ageVerification": {
                        "$ref": "#/components/schemas/OrderAgeVerificationEntity"
                    },
                    "ageVerificationId": {
                        "type": "string"
                    },
                    "orderDeliveryAddress": {
                        "$ref": "#/components/schemas/OrderAddressEntity"
                    },
                    "orderDeliveryAddressId": {
                        "type": "string"
                    },
                    "orderBillingAddress": {
                        "$ref": "#/components/schemas/OrderAddressEntity"
                    },
                    "orderBillingAddressId": {
                        "type": "string"
                    },
                    "orderStatus": {
                        "$ref": "#/components/schemas/OrderStatusEnum"
                    },
                    "orderType": {
                        "$ref": "#/components/schemas/OrderTypeEnum"
                    },
                    "orderCategory": {
                        "$ref": "#/components/schemas/OrderTypeEnum"
                    },
                    "orderNumber": {
                        "type": "string"
                    },
                    "deliveryDate": {
                        "type": "string"
                    },
                    "deliveryTimeFrom": {
                        "type": "string"
                    },
                    "deliveryTimeTo": {
                        "type": "string"
                    },
                    "deliveryDuration": {
                        "type": "number"
                    },
                    "phoneCountryCode": {
                        "type": "string",
                        "maxLength": 6
                    },
                    "phoneNumber": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "deliveryComment": {
                        "type": "string"
                    },
                    "messageForShopper": {
                        "type": "string"
                    },
                    "deliveryDestination": {
                        "$ref": "#/components/schemas/DeliveryDestinationEnum"
                    },
                    "isAlcohol": {
                        "type": "boolean",
                        "description": "Is order contains alcoholic drinks"
                    },
                    "isAgeVerified": {
                        "type": "boolean",
                        "description": "Driver verified age"
                    },
                    "totalAmount": {
                        "type": "number",
                        "example": 4.25,
                        "description": "Order price without delivery fee"
                    },
                    "payDate": {
                        "type": "string"
                    },
                    "grandTotal": {
                        "type": "number",
                        "example": 4.25,
                        "description": "Order price with delivery fee"
                    },
                    "totalRefund": {
                        "type": "number",
                        "example": 4.25,
                        "description": "Total refund"
                    },
                    "receiptNumber": {
                        "type": "number"
                    },
                    "receiptDate": {
                        "type": "string"
                    },
                    "receiptUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "expires": {
                        "type": "string"
                    },
                    "invoiceDate": {
                        "type": "string"
                    },
                    "invoiceNumber": {
                        "type": "string"
                    },
                    "deliveryPrice": {
                        "type": "number",
                        "example": 4.25
                    },
                    "totalShopAmount": {
                        "type": "number",
                        "example": 4.25,
                        "description": "The sum of the cost of all the products in the shop"
                    },
                    "ignoredBy": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "takenBy": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "orderPriority": {
                        "$ref": "#/components/schemas/OrderPriorityEnum"
                    },
                    "deliveryDontRing": {
                        "type": "boolean"
                    },
                    "deliveryCallMe": {
                        "type": "boolean"
                    },
                    "deliveryLeaveAtTheDoor": {
                        "type": "boolean"
                    },
                    "orderQuantityRequested": {
                        "type": "number"
                    },
                    "orderQuantityFound": {
                        "type": "number"
                    },
                    "invoiceUrl": {
                        "type": "string"
                    },
                    "cancelDateTime": {
                        "type": "string"
                    },
                    "cancelReason": {
                        "$ref": "#/components/schemas/OrderCancelReasonEntity"
                    },
                    "cancelReasonCode": {
                        "type": "string"
                    },
                    "cancelDescription": {
                        "type": "string"
                    },
                    "cancelByManagerId": {
                        "type": "string"
                    },
                    "deliveryDistance": {
                        "type": "number"
                    },
                    "mollieErrors": {
                        "$ref": "#/components/schemas/ErrorsLogDto"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "orderWeight",
                    "maxWeight",
                    "deliveryDestination",
                    "isAlcohol",
                    "isAgeVerified",
                    "deliveryPrice",
                    "totalShopAmount",
                    "orderPriority"
                ]
            },
            "OrderHistoryEventTypeEnum": {
                "type": "string",
                "enum": [
                    "ORDER_CREATED",
                    "ORDER_CANCELED_BY_CUSTOMER",
                    "ORDER_CANCELED_BY_MANAGER",
                    "ORDER_CANCELED_NO_PRODUCTS",
                    "ORDER_PAID",
                    "PICK_JOB_ACCEPTED",
                    "DELIVERY_JOB_ACCEPTED",
                    "PICK_JOB_STARTED",
                    "END_OF_PICKING",
                    "IN_SHOP_PAYMENT",
                    "DELIVERY_JOB_STARTED",
                    "CONFIRM_AGE_VERBALLY",
                    "CONFIRM_AGE_VERBALLY_ISSUE",
                    "CONFIRM_ID_PHOTO",
                    "CONFIRM_ID_PHOTO_ISSUE",
                    "VERIFY_AGE",
                    "TERMINATE_ORDER_WITH_REFUND",
                    "TERMINATE_ORDER_WITHOUT_REFUND",
                    "DELIVERY_JOB_COMPLETE",
                    "SET_PICKER_BY_MANAGER",
                    "SET_DRIVER_BY_MANAGER",
                    "CHANGE_DELIVERY_COMMENT",
                    "CHANGE_MESSAGE_FOR_SHOPPER",
                    "CHANGE_DELIVERY_ADDRESS",
                    "CHANGE_BILLING_ADDRESS"
                ]
            },
            "OrderEventEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "metadata": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "order": {
                        "$ref": "#/components/schemas/OrderEntity"
                    },
                    "orderId": {
                        "type": "string"
                    },
                    "eventType": {
                        "$ref": "#/components/schemas/OrderHistoryEventTypeEnum"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "StoreDto": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "deliveryTimeInMinutes": {
                        "type": "number"
                    },
                    "deliveryFee": {
                        "type": "string"
                    },
                    "deliveryPrice": {
                        "type": "number"
                    },
                    "distance": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isPickup": {
                        "type": "boolean"
                    },
                    "isDelivery": {
                        "type": "boolean"
                    },
                    "isInstantDelivery": {
                        "type": "boolean"
                    },
                    "isOnlineShipment": {
                        "type": "boolean"
                    },
                    "logoUrl": {
                        "type": "string"
                    },
                    "heroImgUrl": {
                        "type": "string"
                    },
                    "promoImgUrl": {
                        "type": "string"
                    },
                    "landingImgUrl": {
                        "type": "string"
                    },
                    "primaryColor": {
                        "type": "string"
                    },
                    "secondaryColor": {
                        "type": "string"
                    },
                    "name_public_long_i18n": {
                        "type": "string"
                    },
                    "name_public_short_i18n": {
                        "type": "string"
                    },
                    "openingTime": {
                        "type": "string"
                    },
                    "vendorType": {
                        "$ref": "#/components/schemas/VendorTypeEntity"
                    },
                    "isOpen": {
                        "type": "boolean"
                    },
                    "deliveryDate": {
                        "type": "number"
                    }
                },
                "required": [
                    "address",
                    "id",
                    "isPickup",
                    "isDelivery",
                    "isInstantDelivery",
                    "isOnlineShipment",
                    "logoUrl",
                    "name_public_long_i18n",
                    "name_public_short_i18n",
                    "openingTime",
                    "vendorType",
                    "isOpen",
                    "deliveryDate"
                ]
            },
            "OrderCategoryEnum": {
                "type": "string",
                "enum": [
                    "INSTANT_DELIVERY",
                    "PRE_ORDERED_DELIVERY",
                    "ONLINE_SHIPMENT"
                ]
            },
            "OrderJobTypeEnum": {
                "type": "string",
                "enum": [
                    "PICK",
                    "DRIVE"
                ]
            },
            "OrderJobDto": {
                "type": "object",
                "properties": {
                    "jobType": {
                        "$ref": "#/components/schemas/OrderJobTypeEnum"
                    },
                    "jobStatus": {
                        "$ref": "#/components/schemas/OrderJobStatusEnum"
                    },
                    "jobNumber": {
                        "type": "string"
                    },
                    "staffFirstName": {
                        "type": "string"
                    },
                    "staffLastName": {
                        "type": "string"
                    }
                },
                "required": [
                    "jobType",
                    "jobStatus",
                    "jobNumber"
                ]
            },
            "DeliveryAddressDto": {
                "type": "object",
                "properties": {
                    "streets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "zipCode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "country_name_i18n": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationDto"
                    },
                    "state": {
                        "type": "string"
                    },
                    "floorNumber": {
                        "type": "string"
                    },
                    "apartmentNumber": {
                        "type": "string"
                    }
                },
                "required": [
                    "streets",
                    "zipCode",
                    "city",
                    "country_name_i18n",
                    "location"
                ]
            },
            "OrderItemDto": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string"
                    },
                    "orderItemId": {
                        "type": "string"
                    },
                    "linkId": {
                        "type": "string"
                    },
                    "ean": {
                        "type": "number"
                    },
                    "replaceTypeCode": {
                        "$ref": "#/components/schemas/ReplaceTypeEnum"
                    },
                    "discount": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "price": {
                        "type": "string"
                    },
                    "subcategoryName": {
                        "type": "string"
                    },
                    "isDeposit": {
                        "type": "boolean"
                    },
                    "categoryName": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "number"
                    },
                    "quantityFound": {
                        "type": "number"
                    },
                    "quantityRefund": {
                        "type": "number"
                    },
                    "totalRefund": {
                        "type": "string"
                    },
                    "basePrice": {
                        "type": "string"
                    },
                    "baseSize": {
                        "type": "string"
                    },
                    "productSize": {
                        "type": "string"
                    },
                    "vatPercent": {
                        "type": "number"
                    },
                    "totalAmount": {
                        "type": "string"
                    },
                    "orderItemStatus": {
                        "$ref": "#/components/schemas/OrderItemStatusEnum"
                    },
                    "weight": {
                        "type": "number"
                    }
                },
                "required": [
                    "orderId",
                    "orderItemId",
                    "linkId",
                    "ean",
                    "replaceTypeCode",
                    "imageUrl",
                    "name_i18n",
                    "price",
                    "subcategoryName",
                    "categoryName",
                    "quantity",
                    "quantityFound",
                    "quantityRefund",
                    "totalRefund",
                    "basePrice",
                    "baseSize",
                    "productSize",
                    "vatPercent",
                    "totalAmount",
                    "orderItemStatus",
                    "weight"
                ]
            },
            "TotalVatDto": {
                "type": "object",
                "properties": {
                    "vat": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "vat",
                    "value"
                ]
            },
            "OrderDetailsDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreDto"
                    },
                    "deliveryDate": {
                        "type": "number",
                        "description": "unix timestamp"
                    },
                    "deliveryTimeFrom": {
                        "type": "string",
                        "description": "Delivery time from",
                        "example": "10:00"
                    },
                    "deliveryTimeTo": {
                        "type": "string",
                        "description": "Delivery time to",
                        "example": "11:00"
                    },
                    "orderNumber": {
                        "type": "string"
                    },
                    "allowCancel": {
                        "type": "boolean"
                    },
                    "orderStatus": {
                        "$ref": "#/components/schemas/OrderStatusEnum"
                    },
                    "orderCategory": {
                        "$ref": "#/components/schemas/OrderCategoryEnum"
                    },
                    "orderStatus_i18n": {
                        "type": "string"
                    },
                    "deliveryPrice": {
                        "type": "string"
                    },
                    "subTotal": {
                        "type": "string"
                    },
                    "grandTotal": {
                        "type": "string"
                    },
                    "orderDateTime": {
                        "type": "number",
                        "description": "unix timestamp"
                    },
                    "jobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderJobDto"
                        }
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "customerNumber": {
                        "type": "string"
                    },
                    "invoiceDate": {
                        "type": "number"
                    },
                    "invoiceNumber": {
                        "type": "string"
                    },
                    "totalShopAmount": {
                        "type": "string"
                    },
                    "receiptUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "receiptNumber": {
                        "type": "string"
                    },
                    "deliveryAddress": {
                        "$ref": "#/components/schemas/DeliveryAddressDto"
                    },
                    "deliveryAddressShort": {
                        "type": "string"
                    },
                    "orderItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemDto"
                        }
                    },
                    "orderType": {
                        "$ref": "#/components/schemas/OrderStatusEnum"
                    },
                    "orderWeight": {
                        "type": "number",
                        "description": "Total weight in grams"
                    },
                    "totalDeposit": {
                        "type": "string"
                    },
                    "vatTotal": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TotalVatDto"
                        }
                    },
                    "isAlcohol": {
                        "type": "boolean"
                    },
                    "isAgeVerified": {
                        "type": "boolean"
                    },
                    "orderQuantityRequested": {
                        "type": "number",
                        "description": "Products quantity in customer cart"
                    },
                    "orderQuantityFound": {
                        "type": "number",
                        "description": "Products quantity found by picker"
                    },
                    "messageForShopper": {
                        "type": "string"
                    },
                    "deliveryComment": {
                        "type": "string"
                    },
                    "phoneCountryCode": {
                        "type": "string",
                        "maxLength": 6
                    },
                    "phoneNumber": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "totalRefund": {
                        "type": "string"
                    },
                    "deliveryDistance": {
                        "type": "number"
                    },
                    "deliveryDontRing": {
                        "type": "boolean"
                    },
                    "deliveryCallMe": {
                        "type": "boolean"
                    },
                    "deliveryLeaveAtTheDoor": {
                        "type": "boolean"
                    },
                    "invoiceUrl": {
                        "type": "string"
                    },
                    "hasReplacement": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "store",
                    "deliveryDate",
                    "deliveryTimeFrom",
                    "deliveryTimeTo",
                    "orderNumber",
                    "allowCancel",
                    "orderStatus",
                    "orderCategory",
                    "orderStatus_i18n",
                    "deliveryPrice",
                    "subTotal",
                    "grandTotal",
                    "orderDateTime",
                    "customerName",
                    "customerNumber",
                    "deliveryAddress",
                    "deliveryAddressShort",
                    "orderItems",
                    "orderType",
                    "orderWeight",
                    "vatTotal",
                    "isAlcohol",
                    "isAgeVerified",
                    "orderQuantityRequested",
                    "orderQuantityFound",
                    "totalRefund",
                    "deliveryDontRing",
                    "deliveryCallMe",
                    "deliveryLeaveAtTheDoor",
                    "hasReplacement"
                ]
            },
            "CancelByManagerInput": {
                "type": "object",
                "properties": {
                    "refundOrder": {
                        "type": "boolean"
                    },
                    "cancelDescription": {
                        "type": "string",
                        "maxLength": 300
                    }
                },
                "required": [
                    "refundOrder"
                ]
            },
            "CheckoutAddressInput": {
                "type": "object",
                "properties": {
                    "streets": {
                        "example": [
                            "Baker street, o442b"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "countryCode": {
                        "type": "string",
                        "example": "DE"
                    },
                    "city": {
                        "type": "string",
                        "example": "Hamburg"
                    },
                    "floorNumber": {
                        "type": "string",
                        "example": "1b"
                    },
                    "apartmentNumber": {
                        "type": "string",
                        "example": "16a"
                    },
                    "zipCode": {
                        "type": "string",
                        "example": "NW1 6XE"
                    },
                    "state": {
                        "type": "string",
                        "example": "Marylebone"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationInput"
                    }
                },
                "required": [
                    "streets",
                    "countryCode",
                    "city",
                    "zipCode",
                    "location"
                ]
            },
            "OrderCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "orderPriority": {
                        "example": "LOW",
                        "$ref": "#/components/schemas/OrderPriorityEnum"
                    },
                    "deliveryAddress": {
                        "$ref": "#/components/schemas/CheckoutAddressInput"
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/CheckoutAddressInput"
                    },
                    "deliveryDestination": {
                        "default": "HOME",
                        "$ref": "#/components/schemas/DeliveryDestinationEnum"
                    },
                    "orderType": {
                        "$ref": "#/components/schemas/OrderTypeEnum"
                    },
                    "deliveryDate": {
                        "type": "string",
                        "example": "2021-05-25"
                    },
                    "pickerId": {
                        "type": "string"
                    },
                    "driverId": {
                        "type": "string"
                    },
                    "deliveryTimeFrom": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "10:00"
                    },
                    "deliveryTimeTo": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "11:00"
                    },
                    "messageForShopper": {
                        "type": "string",
                        "maxLength": 300
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "customerId",
                    "storeId",
                    "orderPriority",
                    "deliveryAddress",
                    "billingAddress",
                    "deliveryDestination",
                    "orderType",
                    "deliveryDate"
                ]
            },
            "OrderUpdateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "orderPriority": {
                        "example": "LOW",
                        "$ref": "#/components/schemas/OrderPriorityEnum"
                    },
                    "deliveryAddress": {
                        "$ref": "#/components/schemas/CheckoutAddressInput"
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/CheckoutAddressInput"
                    },
                    "deliveryDestination": {
                        "default": "HOME",
                        "$ref": "#/components/schemas/DeliveryDestinationEnum"
                    },
                    "orderType": {
                        "$ref": "#/components/schemas/OrderTypeEnum"
                    },
                    "deliveryDate": {
                        "type": "string",
                        "example": "2021-05-25"
                    },
                    "pickerId": {
                        "type": "string"
                    },
                    "driverId": {
                        "type": "string"
                    },
                    "deliveryTimeFrom": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "10:00"
                    },
                    "deliveryTimeTo": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "11:00"
                    },
                    "messageForShopper": {
                        "type": "string",
                        "maxLength": 300
                    },
                    "deliveryComment": {
                        "type": "string",
                        "maxLength": 300
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "customerId",
                    "storeId",
                    "orderPriority",
                    "deliveryAddress",
                    "billingAddress",
                    "deliveryDestination",
                    "orderType",
                    "deliveryDate"
                ]
            },
            "SendInvoiceInput": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string"
                    }
                },
                "required": [
                    "orderId"
                ]
            },
            "SendInvoiceDto": {
                "type": "object",
                "properties": {
                    "invoiceUrl": {
                        "type": "string"
                    }
                },
                "required": [
                    "invoiceUrl"
                ]
            },
            "SendAllInvoicesDto": {
                "type": "object",
                "properties": {
                    "invoiceCount": {
                        "type": "number"
                    }
                },
                "required": [
                    "invoiceCount"
                ]
            },
            "OrderSetStaffInput": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string"
                    },
                    "staffId": {
                        "type": "string"
                    },
                    "jobType": {
                        "type": "string",
                        "enum": [
                            "PICK",
                            "DRIVE"
                        ]
                    }
                },
                "required": [
                    "orderId",
                    "staffId",
                    "jobType"
                ]
            },
            "RemoveStaffFromIgnoreListInput": {
                "type": "object",
                "properties": {
                    "staffIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "orderId": {
                        "type": "string"
                    }
                },
                "required": [
                    "staffIds",
                    "orderId"
                ]
            },
            "ReplaceTypeEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "$ref": "#/components/schemas/ReplaceTypeEnum"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "code"
                ]
            },
            "ReplaceTypeCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "minLength": 2,
                        "maxLength": 50,
                        "$ref": "#/components/schemas/ReplaceTypeEnum"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code"
                ]
            },
            "ReplaceTypeUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "minLength": 2,
                        "maxLength": 50,
                        "$ref": "#/components/schemas/ReplaceTypeEnum"
                    }
                },
                "required": [
                    "name_i18n"
                ]
            },
            "VatCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string"
                    },
                    "value": {
                        "type": "number"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code",
                    "value"
                ]
            },
            "VatUpdateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string"
                    },
                    "value": {
                        "type": "number"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive"
                ]
            },
            "StatusChangeInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "DeliveryCommentUpdateInput": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "New message"
                    }
                },
                "required": [
                    "message"
                ]
            },
            "OrderAddressChangeInput": {
                "type": "object",
                "properties": {
                    "addressId": {
                        "type": "string"
                    },
                    "customerId": {
                        "type": "string"
                    }
                },
                "required": [
                    "addressId",
                    "customerId"
                ]
            },
            "CartItemChangeTypeEnum": {
                "type": "string",
                "enum": [
                    "PRICE",
                    "COUNT",
                    "DELETED"
                ]
            },
            "CartItemDto": {
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "string"
                    },
                    "linkId": {
                        "type": "string"
                    },
                    "discount": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "price": {
                        "type": "string"
                    },
                    "salePrice": {
                        "type": "string"
                    },
                    "regularPrice": {
                        "type": "string"
                    },
                    "subcategoryName": {
                        "type": "string"
                    },
                    "subcategoryCode": {
                        "type": "string"
                    },
                    "categoryCode": {
                        "type": "string"
                    },
                    "inCart": {
                        "type": "number",
                        "description": "The number of products in the user's cart"
                    },
                    "basePrice": {
                        "type": "string"
                    },
                    "baseSize": {
                        "type": "string"
                    },
                    "productSize": {
                        "type": "string"
                    },
                    "vatPercent": {
                        "type": "number"
                    },
                    "vat": {
                        "type": "string"
                    },
                    "isAlcohol": {
                        "type": "boolean"
                    },
                    "outOfStock": {
                        "type": "boolean"
                    },
                    "cartItemId": {
                        "type": "string"
                    },
                    "cartId": {
                        "type": "string"
                    },
                    "replaceTypeCode": {
                        "nullable": true,
                        "$ref": "#/components/schemas/ReplaceTypeEnum"
                    },
                    "totalAmount": {
                        "type": "string",
                        "description": "price * inCart"
                    },
                    "changeType": {
                        "$ref": "#/components/schemas/CartItemChangeTypeEnum"
                    },
                    "changeText": {
                        "type": "string",
                        "example": "The price of the product has increased"
                    }
                },
                "required": [
                    "productId",
                    "linkId",
                    "imageUrl",
                    "name_i18n",
                    "price",
                    "regularPrice",
                    "subcategoryName",
                    "subcategoryCode",
                    "categoryCode",
                    "inCart",
                    "basePrice",
                    "baseSize",
                    "productSize",
                    "vatPercent",
                    "vat",
                    "isAlcohol",
                    "cartItemId",
                    "cartId",
                    "replaceTypeCode",
                    "totalAmount"
                ]
            },
            "AddressDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "streets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "zipCode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "floorNumber": {
                        "type": "string"
                    },
                    "apartmentNumber": {
                        "type": "string"
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryEntity"
                    },
                    "countryCode": {
                        "$ref": "#/components/schemas/Iso2Enum"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationDto"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "streets",
                    "zipCode",
                    "city",
                    "countryCode"
                ]
            },
            "CartDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "price": {
                        "type": "string"
                    },
                    "itemsCount": {
                        "type": "number"
                    },
                    "weight": {
                        "type": "string"
                    },
                    "maxWeight": {
                        "type": "string"
                    },
                    "isOverload": {
                        "type": "boolean"
                    },
                    "productsCount": {
                        "type": "number"
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreDto"
                    },
                    "cartCode": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItemDto"
                        }
                    },
                    "changedItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItemDto"
                        }
                    },
                    "replaceTypeCode": {
                        "$ref": "#/components/schemas/ReplaceTypeEnum"
                    },
                    "isAlcohol": {
                        "type": "boolean"
                    },
                    "vatTotal": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TotalVatDto"
                        }
                    },
                    "totalDeposit": {
                        "type": "string"
                    },
                    "subtotal": {
                        "type": "string"
                    },
                    "totalPrice": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/AddressDto"
                    }
                },
                "required": [
                    "id",
                    "price",
                    "itemsCount",
                    "weight",
                    "maxWeight",
                    "isOverload",
                    "productsCount",
                    "store",
                    "cartCode",
                    "items",
                    "changedItems",
                    "replaceTypeCode",
                    "isAlcohol",
                    "vatTotal",
                    "totalDeposit",
                    "subtotal",
                    "totalPrice"
                ]
            },
            "CorporateCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code"
                ]
            },
            "CorporateUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    }
                },
                "required": [
                    "name_i18n"
                ]
            },
            "ProductBrandCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "imageUrl": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code"
                ]
            },
            "ProductBrandUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "imageUrl": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n"
                ]
            },
            "ProductCategoryCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The unique identifying part of the web address"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code",
                    "imageUrl",
                    "slug"
                ]
            },
            "ProductCategoryUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The unique identifying part of the web address"
                    }
                },
                "required": [
                    "name_i18n"
                ]
            },
            "ChangeOrderInput": {
                "type": "object",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    },
                    "targetId": {
                        "type": "string"
                    }
                },
                "required": [
                    "sourceId",
                    "targetId"
                ]
            },
            "ProductDepositCreateInput": {
                "type": "object",
                "properties": {
                    "itemVatCode": {
                        "type": "string"
                    },
                    "itemDepositValueGross": {
                        "type": "number",
                        "example": 3.55
                    },
                    "boxVatCode": {
                        "type": "string"
                    },
                    "boxDepositValueGross": {
                        "type": "number",
                        "example": 3.55
                    }
                },
                "required": [
                    "itemVatCode",
                    "boxVatCode"
                ]
            },
            "ProductCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string"
                    },
                    "note_internal": {
                        "type": "string"
                    },
                    "note_external": {
                        "type": "string"
                    },
                    "gtin": {
                        "type": "string",
                        "description": "Global Trade Item Number"
                    },
                    "sku": {
                        "type": "string",
                        "description": "Stock Keeping Unit"
                    },
                    "ean": {
                        "type": "number",
                        "description": "European Article Number"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The unique identifying part of the web address"
                    },
                    "isAlcohol": {
                        "type": "boolean",
                        "description": "Is alcoholic drink"
                    },
                    "alcoholValue": {
                        "type": "number",
                        "description": "Alcohol value",
                        "example": 4.25
                    },
                    "isApproved": {
                        "type": "boolean",
                        "description": "Approved to be published"
                    },
                    "isPublic": {
                        "type": "boolean",
                        "description": "visible on backend"
                    },
                    "isPublicDateTime": {
                        "type": "string",
                        "description": "visible from"
                    },
                    "productBrandCode": {
                        "type": "string"
                    },
                    "productSubcategoryCode": {
                        "type": "string"
                    },
                    "productCategoryCode": {
                        "type": "string"
                    },
                    "imageUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "weight": {
                        "type": "number"
                    },
                    "productUnitCode": {
                        "$ref": "#/components/schemas/ProductUnitCodeEnum"
                    },
                    "nutriScore": {
                        "$ref": "#/components/schemas/NutriScoreEnum"
                    },
                    "baseUnitCode": {
                        "$ref": "#/components/schemas/ProductUnitCodeEnum"
                    },
                    "productMeasurement": {
                        "type": "number"
                    },
                    "baseMeasurement": {
                        "type": "number"
                    },
                    "defaultPrice": {
                        "type": "number"
                    },
                    "costPrice": {
                        "type": "number"
                    },
                    "chargeTax": {
                        "type": "boolean"
                    },
                    "vatCode": {
                        "type": "string"
                    },
                    "isPickup": {
                        "type": "boolean"
                    },
                    "isPickAndDrive": {
                        "type": "boolean"
                    },
                    "isOnlineShipment": {
                        "type": "boolean"
                    },
                    "deposit": {
                        "$ref": "#/components/schemas/ProductDepositCreateInput"
                    },
                    "tags_i18n": {
                        "description": "Multi language tags",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "manufacturer_i18n": {
                        "description": "Multi language manufacturer info",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "nutritional_value_i18n": {
                        "description": "Multi language nutritional value",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "ingredients_i18n": {
                        "description": "Multi language indegredients",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "special_notes_i18n": {
                        "description": "Multi language special notes",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "metaData": {
                        "type": "object",
                        "description": "Meta Data"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code",
                    "gtin",
                    "sku",
                    "ean",
                    "slug",
                    "isAlcohol",
                    "isApproved",
                    "isPublic",
                    "isPublicDateTime",
                    "productSubcategoryCode",
                    "productCategoryCode",
                    "imageUrls",
                    "weight",
                    "productUnitCode",
                    "nutriScore",
                    "baseUnitCode",
                    "productMeasurement",
                    "baseMeasurement",
                    "defaultPrice",
                    "chargeTax",
                    "vatCode",
                    "isPickup",
                    "isPickAndDrive",
                    "isOnlineShipment",
                    "manufacturer_i18n",
                    "nutritional_value_i18n",
                    "ingredients_i18n",
                    "special_notes_i18n"
                ]
            },
            "FindUnlinkedProductsInput": {
                "type": "object",
                "properties": {
                    "search": {
                        "type": "string"
                    },
                    "productSubcategoryCode": {
                        "type": "string"
                    },
                    "productCategoryCode": {
                        "type": "string"
                    },
                    "productBrandCode": {
                        "type": "string"
                    },
                    "productTags": {
                        "type": "string"
                    },
                    "limit": {
                        "type": "number"
                    },
                    "page": {
                        "type": "number",
                        "example": 1
                    }
                },
                "required": [
                    "limit",
                    "page"
                ]
            },
            "ProductDepositUpdateInput": {
                "type": "object",
                "properties": {
                    "itemVatCode": {
                        "type": "string"
                    },
                    "itemDepositValueGross": {
                        "type": "number",
                        "example": 3.55
                    },
                    "boxVatCode": {
                        "type": "string"
                    },
                    "boxDepositValueGross": {
                        "type": "number",
                        "example": 3.55
                    }
                }
            },
            "ProductUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string"
                    },
                    "note_internal": {
                        "type": "string"
                    },
                    "note_external": {
                        "type": "string"
                    },
                    "gtin": {
                        "type": "string",
                        "description": "Global Trade Item Number"
                    },
                    "sku": {
                        "type": "string",
                        "description": "Stock Keeping Unit"
                    },
                    "ean": {
                        "type": "number",
                        "description": "European Article Number"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The unique identifying part of the web address"
                    },
                    "isAlcohol": {
                        "type": "boolean",
                        "description": "Is alcoholic drink"
                    },
                    "alcoholValue": {
                        "type": "number",
                        "description": "Alcohol value",
                        "example": 4.25
                    },
                    "isApproved": {
                        "type": "boolean",
                        "description": "Approved to be published"
                    },
                    "isPublic": {
                        "type": "boolean",
                        "description": "visible on backend"
                    },
                    "isPublicDateTime": {
                        "type": "string",
                        "description": "visible from"
                    },
                    "productBrandCode": {
                        "type": "string"
                    },
                    "productSubcategoryCode": {
                        "type": "string"
                    },
                    "productCategoryCode": {
                        "type": "string"
                    },
                    "imageUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "weight": {
                        "type": "number"
                    },
                    "productUnitCode": {
                        "$ref": "#/components/schemas/ProductUnitCodeEnum"
                    },
                    "nutriScore": {
                        "$ref": "#/components/schemas/NutriScoreEnum"
                    },
                    "baseUnitCode": {
                        "$ref": "#/components/schemas/ProductUnitCodeEnum"
                    },
                    "productMeasurement": {
                        "type": "number"
                    },
                    "baseMeasurement": {
                        "type": "number"
                    },
                    "defaultPrice": {
                        "type": "number"
                    },
                    "costPrice": {
                        "type": "number"
                    },
                    "chargeTax": {
                        "type": "boolean"
                    },
                    "vatCode": {
                        "type": "string"
                    },
                    "isPickup": {
                        "type": "boolean"
                    },
                    "isPickAndDrive": {
                        "type": "boolean"
                    },
                    "isOnlineShipment": {
                        "type": "boolean"
                    },
                    "deposit": {
                        "$ref": "#/components/schemas/ProductDepositUpdateInput"
                    },
                    "tags_i18n": {
                        "description": "Multi language tags",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "manufacturer_i18n": {
                        "description": "Multi language manufacturer info",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "nutritional_value_i18n": {
                        "description": "Multi language nutritional value",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "ingredients_i18n": {
                        "description": "Multi language indegredients",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "special_notes_i18n": {
                        "description": "Multi language special notes",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "metaData": {
                        "type": "object",
                        "description": "Meta Data"
                    }
                },
                "required": [
                    "name_i18n",
                    "nutriScore"
                ]
            },
            "ProductLinkCreateInput": {
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    }
                },
                "required": [
                    "productId",
                    "storeId"
                ]
            },
            "ProductLinkMultipleCreateInput": {
                "type": "object",
                "properties": {
                    "productIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "storeId": {
                        "type": "string"
                    }
                },
                "required": [
                    "productIds",
                    "storeId"
                ]
            },
            "ProductLinkUpdateInput": {
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    }
                },
                "required": [
                    "productId",
                    "storeId"
                ]
            },
            "ProductPriceCreateInput": {
                "type": "object",
                "properties": {
                    "type": {
                        "example": "REGULAR",
                        "$ref": "#/components/schemas/PriceTypeEnum"
                    },
                    "productLinkId": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-15"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-16"
                    },
                    "price": {
                        "type": "number"
                    },
                    "vatCode": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "productLinkId",
                    "dateStart",
                    "dateEnd",
                    "price",
                    "vatCode"
                ]
            },
            "ProductPriceUpdateInput": {
                "type": "object",
                "properties": {
                    "type": {
                        "example": "REGULAR",
                        "$ref": "#/components/schemas/PriceTypeEnum"
                    },
                    "productLinkId": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-15"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-16"
                    },
                    "price": {
                        "type": "number"
                    },
                    "vatCode": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    }
                }
            },
            "ProductSubcategoryCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "categoryCode": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The unique identifying part of the web address"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code",
                    "categoryCode",
                    "slug"
                ]
            },
            "ProductSubcategoryUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "categoryCode": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The unique identifying part of the web address"
                    }
                },
                "required": [
                    "name_i18n"
                ]
            },
            "ProductUnitCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "minLength": 2,
                        "maxLength": 50,
                        "$ref": "#/components/schemas/ProductUnitCodeEnum"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code"
                ]
            },
            "ProductUnitUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "minLength": 2,
                        "maxLength": 50,
                        "$ref": "#/components/schemas/ProductUnitCodeEnum"
                    }
                },
                "required": [
                    "name_i18n"
                ]
            },
            "StoreAddressTypeEnum": {
                "type": "string",
                "enum": [
                    "MAIN",
                    "SECONDARY",
                    "WAREHOUSE",
                    "OTHER"
                ]
            },
            "StoreAddressCreateInput": {
                "type": "object",
                "properties": {
                    "addressType": {
                        "$ref": "#/components/schemas/StoreAddressTypeEnum"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string",
                        "example": "Hamburg"
                    },
                    "zipCode": {
                        "type": "string",
                        "example": "NW1 6XE"
                    },
                    "gln": {
                        "type": "string"
                    },
                    "streets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "floorNumber": {
                        "type": "string",
                        "example": "1"
                    },
                    "apartmentNumber": {
                        "type": "string",
                        "example": "16a"
                    },
                    "state": {
                        "type": "string",
                        "example": "Marylebone"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationInput"
                    }
                },
                "required": [
                    "addressType",
                    "countryCode",
                    "city",
                    "zipCode",
                    "streets",
                    "storeId"
                ]
            },
            "StoreAddressUpdateInput": {
                "type": "object",
                "properties": {
                    "addressType": {
                        "$ref": "#/components/schemas/StoreAddressTypeEnum"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string",
                        "example": "Hamburg"
                    },
                    "zipCode": {
                        "type": "string",
                        "example": "NW1 6XE"
                    },
                    "gln": {
                        "type": "string"
                    },
                    "streets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "floorNumber": {
                        "type": "string",
                        "example": "1"
                    },
                    "apartmentNumber": {
                        "type": "string",
                        "example": "16a"
                    },
                    "state": {
                        "type": "string",
                        "example": "Marylebone"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationInput"
                    }
                }
            },
            "StoreBrandCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "corporateCode": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code"
                ]
            },
            "StoreBrandUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "corporateCode": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n"
                ]
            },
            "StoreClosingDayCreateInput": {
                "type": "object",
                "properties": {
                    "storeId": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-15"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-16"
                    },
                    "note": {
                        "type": "string",
                        "maxLength": 300
                    }
                },
                "required": [
                    "storeId",
                    "dateStart",
                    "dateEnd"
                ]
            },
            "StoreClosingDayUpdateInput": {
                "type": "object",
                "properties": {
                    "storeId": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string",
                        "maxLength": 300
                    },
                    "dateStart": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-15"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-16"
                    }
                },
                "required": [
                    "dateStart",
                    "dateEnd"
                ]
            },
            "StoreContactCreateInput": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "John"
                    },
                    "lastName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Snow"
                    },
                    "contactType": {
                        "example": "MANAGER",
                        "$ref": "#/components/schemas/StoreContactTypeEnum"
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 200,
                        "example": "manager@metro.de"
                    },
                    "phoneCountryCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string",
                        "example": "Hamburg"
                    },
                    "zipCode": {
                        "type": "string",
                        "example": "NW1 6XE"
                    },
                    "streets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 300
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "contactType",
                    "email",
                    "storeId",
                    "countryCode",
                    "city",
                    "zipCode",
                    "streets"
                ]
            },
            "StoreContactUpdateInput": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "John"
                    },
                    "lastName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Snow"
                    },
                    "contactType": {
                        "example": "MANAGER",
                        "$ref": "#/components/schemas/StoreContactTypeEnum"
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 200,
                        "example": "manager@metro.de"
                    },
                    "phoneCountryCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string",
                        "example": "Hamburg"
                    },
                    "zipCode": {
                        "type": "string",
                        "example": "NW1 6XE"
                    },
                    "streets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 300
                    }
                },
                "required": [
                    "contactType"
                ]
            },
            "StoreCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "name_public_short_i18n": {
                        "description": "Multi language short name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "name_public_long_i18n": {
                        "description": "Multi language long name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "vendorTypeCode": {
                        "type": "string"
                    },
                    "storeRegionCode": {
                        "type": "string"
                    },
                    "vendorCategoryCode": {
                        "type": "string"
                    },
                    "currencyCode": {
                        "$ref": "#/components/schemas/CurrencyCodeEnum"
                    },
                    "corporateCode": {
                        "type": "string"
                    },
                    "storeBrandCode": {
                        "type": "string"
                    },
                    "logoUrl": {
                        "type": "string"
                    },
                    "isPickup": {
                        "type": "boolean"
                    },
                    "isDelivery": {
                        "type": "boolean"
                    },
                    "isOnlineShipment": {
                        "type": "boolean"
                    },
                    "productOutOfStockTime": {
                        "type": "number"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The unique identifying part of the web address"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "name_public_short_i18n",
                    "name_public_long_i18n",
                    "code",
                    "vendorTypeCode",
                    "storeRegionCode",
                    "vendorCategoryCode",
                    "currencyCode",
                    "isPickup",
                    "isDelivery",
                    "isOnlineShipment",
                    "productOutOfStockTime",
                    "slug"
                ]
            },
            "StoreUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "name_public_short_i18n": {
                        "description": "Multi language short name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "name_public_long_i18n": {
                        "description": "Multi language long name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "vendorTypeCode": {
                        "type": "string"
                    },
                    "vendorCategoryCode": {
                        "type": "string"
                    },
                    "storeRegionCode": {
                        "type": "string"
                    },
                    "currencyCode": {
                        "$ref": "#/components/schemas/CurrencyCodeEnum"
                    },
                    "corporateCode": {
                        "type": "string"
                    },
                    "storeBrandCode": {
                        "type": "string"
                    },
                    "logoUrl": {
                        "type": "string"
                    },
                    "heroImgUrl": {
                        "type": "string"
                    },
                    "promoImgUrl": {
                        "type": "string"
                    },
                    "landingImgUrl": {
                        "type": "string"
                    },
                    "primaryColor": {
                        "type": "string"
                    },
                    "secondaryColor": {
                        "type": "string"
                    },
                    "isPickup": {
                        "type": "boolean"
                    },
                    "isDelivery": {
                        "type": "boolean"
                    },
                    "isOnlineShipment": {
                        "type": "boolean"
                    },
                    "productOutOfStockTime": {
                        "type": "number"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The unique identifying part of the web address"
                    },
                    "pickerRestriction": {
                        "$ref": "#/components/schemas/StoreStaffRestrictionEnum"
                    },
                    "driverRestriction": {
                        "$ref": "#/components/schemas/StoreStaffRestrictionEnum"
                    }
                },
                "required": [
                    "name_i18n",
                    "name_public_short_i18n",
                    "name_public_long_i18n",
                    "currencyCode",
                    "productOutOfStockTime"
                ]
            },
            "StoreCategoriesInput": {
                "type": "object",
                "properties": {
                    "subcategoryCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "FindUnboundStoresInput": {
                "type": "object",
                "properties": {
                    "search": {
                        "type": "string"
                    },
                    "limit": {
                        "type": "number"
                    },
                    "page": {
                        "type": "number",
                        "example": 1
                    }
                },
                "required": [
                    "limit",
                    "page"
                ]
            },
            "StoreDeliveryFeeCreateInput": {
                "type": "object",
                "properties": {
                    "timeStart": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "10:00"
                    },
                    "timeEnd": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "12:00"
                    },
                    "dateStart": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-15"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-16"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "fee": {
                        "type": "number",
                        "format": "float"
                    },
                    "zipCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "timeStart",
                    "timeEnd",
                    "dateStart",
                    "dateEnd",
                    "storeId",
                    "zipCodes"
                ]
            },
            "StoreDeliveryFeeUpdateInput": {
                "type": "object",
                "properties": {
                    "timeStart": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "10:00"
                    },
                    "timeEnd": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "12:00"
                    },
                    "dateStart": {
                        "type": "string",
                        "description": "Date YYYY-mm-dd",
                        "example": "2021-03-15"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date YYYY-mm-dd",
                        "example": "2021-03-15"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "fee": {
                        "type": "number",
                        "format": "float"
                    },
                    "zipCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "StoreDeliveryZoneCreateInput": {
                "type": "object",
                "properties": {
                    "storeId": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-15"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-16"
                    },
                    "zipCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deliveryTime": {
                        "type": "number",
                        "description": "Delivery time in minutes",
                        "example": 45
                    },
                    "defaultFee": {
                        "type": "number",
                        "format": "float"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "isInstantDelivery": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "storeId",
                    "dateStart",
                    "dateEnd",
                    "zipCodes",
                    "deliveryTime",
                    "defaultFee",
                    "countryCode",
                    "isInstantDelivery"
                ]
            },
            "StoreDeliveryZoneUpdateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-16"
                    },
                    "zipCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deliveryTime": {
                        "type": "number",
                        "description": "Delivery time in minutes",
                        "example": 45
                    },
                    "defaultFee": {
                        "type": "number",
                        "format": "float"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "isInstantDelivery": {
                        "type": "boolean"
                    }
                }
            },
            "StoreOpeningHourCreateInput": {
                "type": "object",
                "properties": {
                    "timeStart": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "10:00"
                    },
                    "timeEnd": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "12:00"
                    },
                    "dateStart": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-15"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-16"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "daysOfWeek": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayOfWeekEnum"
                        }
                    }
                },
                "required": [
                    "timeStart",
                    "timeEnd",
                    "dateStart",
                    "dateEnd",
                    "storeId"
                ]
            },
            "StoreOpeningHourUpdateInput": {
                "type": "object",
                "properties": {
                    "timeStart": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "10:00"
                    },
                    "timeEnd": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "12:00"
                    },
                    "dateStart": {
                        "type": "string",
                        "description": "Date YYYY-mm-dd",
                        "example": "2021-03-15"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date YYYY-mm-dd",
                        "example": "2021-03-15"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "daysOfWeek": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayOfWeekEnum"
                        }
                    }
                }
            },
            "StoreWeightOptionCreateInput": {
                "type": "object",
                "properties": {
                    "timeStart": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "10:00"
                    },
                    "timeEnd": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "12:00"
                    },
                    "dateStart": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-15"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-16"
                    },
                    "weightValue": {
                        "type": "number"
                    },
                    "storeId": {
                        "type": "string"
                    }
                },
                "required": [
                    "timeStart",
                    "timeEnd",
                    "dateStart",
                    "dateEnd",
                    "weightValue",
                    "storeId"
                ]
            },
            "StoreWeightOptionUpdateInput": {
                "type": "object",
                "properties": {
                    "timeStart": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "10:00"
                    },
                    "timeEnd": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "12:00"
                    },
                    "dateStart": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-15"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-16"
                    },
                    "weightValue": {
                        "type": "number"
                    },
                    "storeId": {
                        "type": "string"
                    }
                },
                "required": [
                    "timeStart",
                    "timeEnd",
                    "dateStart",
                    "dateEnd",
                    "weightValue",
                    "storeId"
                ]
            },
            "StoreRegionCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code"
                ]
            },
            "StoreRegionUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    }
                },
                "required": [
                    "name_i18n"
                ]
            },
            "VendorTypeCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive"
                ]
            },
            "VendorTypeUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    }
                },
                "required": [
                    "name_i18n"
                ]
            },
            "TimeSlotDto": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "number",
                        "description": "Total number of orders that can be created in this slot"
                    },
                    "available": {
                        "type": "number",
                        "description": "Number of orders that can be created in this slot"
                    },
                    "booked": {
                        "type": "number",
                        "description": "Number of orders that already created in this slot"
                    },
                    "bookedPercent": {
                        "type": "number"
                    },
                    "isCustom": {
                        "type": "boolean"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "dateTimeStart": {
                        "type": "number"
                    },
                    "dateTimeEnd": {
                        "type": "number"
                    },
                    "duration": {
                        "type": "number",
                        "description": "Duration in minutes"
                    },
                    "time": {
                        "type": "string"
                    },
                    "dateString": {
                        "type": "string"
                    },
                    "deliveryFee": {
                        "type": "string"
                    }
                },
                "required": [
                    "total",
                    "available",
                    "booked",
                    "bookedPercent",
                    "isCustom",
                    "isActive",
                    "dateTimeStart",
                    "dateTimeEnd",
                    "duration",
                    "time",
                    "dateString",
                    "deliveryFee"
                ]
            },
            "StoreSchedulerDayDto": {
                "type": "object",
                "properties": {
                    "weekDay": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    },
                    "slots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TimeSlotDto"
                        }
                    },
                    "totalOrders": {
                        "type": "number",
                        "description": "Total number of orders that can be created in this day"
                    },
                    "bookedOrders": {
                        "type": "number",
                        "description": "Total number of orders that is booked for this day"
                    },
                    "storeIsClosed": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "weekDay",
                    "date",
                    "slots",
                    "totalOrders",
                    "bookedOrders",
                    "storeIsClosed"
                ]
            },
            "StoreSchedulerDto": {
                "type": "object",
                "properties": {
                    "slotNumber": {
                        "type": "number"
                    },
                    "orderNumber": {
                        "type": "number"
                    },
                    "days": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreSchedulerDayDto"
                        }
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "slotNumber",
                    "orderNumber",
                    "days",
                    "labels"
                ]
            },
            "SlotReservationEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerEntity"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreEntity"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "deliveryDate": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "TimeSlotDetailsDto": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "number",
                        "description": "Total number of orders that can be created in this slot"
                    },
                    "available": {
                        "type": "number",
                        "description": "Number of orders that can be created in this slot"
                    },
                    "booked": {
                        "type": "number",
                        "description": "Number of orders that already created in this slot"
                    },
                    "bookedPercent": {
                        "type": "number"
                    },
                    "isCustom": {
                        "type": "boolean"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "dateTimeStart": {
                        "type": "number"
                    },
                    "dateTimeEnd": {
                        "type": "number"
                    },
                    "duration": {
                        "type": "number",
                        "description": "Duration in minutes"
                    },
                    "time": {
                        "type": "string"
                    },
                    "dateString": {
                        "type": "string"
                    },
                    "deliveryFee": {
                        "type": "string"
                    },
                    "orders": {
                        "description": "Orders list for this slot",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderEntity"
                        }
                    },
                    "reservations": {
                        "description": "Reservation list for this slot",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SlotReservationEntity"
                        }
                    }
                },
                "required": [
                    "total",
                    "available",
                    "booked",
                    "bookedPercent",
                    "isCustom",
                    "isActive",
                    "dateTimeStart",
                    "dateTimeEnd",
                    "duration",
                    "time",
                    "dateString",
                    "deliveryFee",
                    "orders",
                    "reservations"
                ]
            },
            "ProductPriceViewEntity": {
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "imageUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "number"
                    },
                    "linkId": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "defaultPrice": {
                        "type": "number"
                    },
                    "isAlcohol": {
                        "type": "boolean"
                    },
                    "productCategoryCode": {
                        "type": "string"
                    },
                    "productSubcategoryCode": {
                        "type": "string"
                    },
                    "ean": {
                        "type": "number"
                    },
                    "sku": {
                        "type": "number"
                    },
                    "alcoholValue": {
                        "type": "number"
                    },
                    "regularPrice": {
                        "type": "number"
                    },
                    "salePrice": {
                        "type": "number"
                    },
                    "price": {
                        "type": "number"
                    },
                    "depositId": {
                        "type": "string"
                    },
                    "productVatPercent": {
                        "type": "number"
                    },
                    "productValueGross": {
                        "type": "number"
                    },
                    "productValueNet": {
                        "type": "number"
                    },
                    "productVatValue": {
                        "type": "number"
                    },
                    "basePrice": {
                        "type": "number"
                    },
                    "baseUnitCode": {
                        "$ref": "#/components/schemas/ProductUnitCodeEnum"
                    },
                    "productUnitCode": {
                        "$ref": "#/components/schemas/ProductUnitCodeEnum"
                    },
                    "baseMeasurement": {
                        "type": "number"
                    },
                    "productMeasurement": {
                        "type": "number"
                    },
                    "fts_german": {
                        "type": "string"
                    },
                    "fts_english": {
                        "type": "string"
                    },
                    "outOfStock": {
                        "type": "boolean"
                    },
                    "nutriScore": {
                        "default": "UNKNOWN",
                        "$ref": "#/components/schemas/NutriScoreEnum"
                    }
                }
            },
            "OutOfStockCreateInput": {
                "type": "object",
                "properties": {
                    "productLinkId": {
                        "type": "string"
                    },
                    "startDateTime": {
                        "type": "string",
                        "example": "2021-01-11"
                    },
                    "endDateTime": {
                        "type": "string",
                        "example": "2023-12-25"
                    },
                    "comment": {
                        "type": "string"
                    }
                },
                "required": [
                    "productLinkId",
                    "startDateTime",
                    "endDateTime"
                ]
            },
            "OutOfStockUpdateInput": {
                "type": "object",
                "properties": {
                    "isOutOfStock": {
                        "type": "boolean"
                    },
                    "startDateTime": {
                        "type": "string",
                        "example": "2021-01-11"
                    },
                    "endDateTime": {
                        "type": "string",
                        "example": "2023-12-25"
                    },
                    "comment": {
                        "type": "string"
                    }
                },
                "required": [
                    "isOutOfStock",
                    "startDateTime",
                    "endDateTime"
                ]
            },
            "StoreDeliverySlotEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "timeStart": {
                        "type": "string"
                    },
                    "timeEnd": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreEntity"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "slotDuration": {
                        "type": "string",
                        "description": "Slot duration in minutes"
                    },
                    "slotCapacity": {
                        "type": "string",
                        "description": "Number of orders available in this slot"
                    },
                    "daysOfWeek": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayOfWeekEnum"
                        }
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "StoreDeliverySlotCreateInput": {
                "type": "object",
                "properties": {
                    "timeStart": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "10:00"
                    },
                    "timeEnd": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "12:00"
                    },
                    "dateStart": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-15"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date yyyy-MM-dd",
                        "example": "2021-03-16"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "daysOfWeek": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayOfWeekEnum"
                        }
                    },
                    "slotDuration": {
                        "type": "number",
                        "description": "Slot duration in minutes"
                    },
                    "slotCapacity": {
                        "type": "number",
                        "description": "Number of orders available in this slot"
                    }
                },
                "required": [
                    "timeStart",
                    "timeEnd",
                    "dateStart",
                    "dateEnd",
                    "storeId",
                    "slotDuration",
                    "slotCapacity"
                ]
            },
            "StoreCustomDeliverySlotInput": {
                "type": "object",
                "properties": {
                    "storeId": {
                        "type": "string"
                    },
                    "slotCapacity": {
                        "type": "number",
                        "description": "Number of orders available in this slot"
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "dateTimeStart": {
                        "type": "number"
                    }
                },
                "required": [
                    "storeId",
                    "slotCapacity",
                    "isActive",
                    "dateTimeStart"
                ]
            },
            "StoreDeliverySlotUpdateInput": {
                "type": "object",
                "properties": {
                    "timeStart": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "10:00"
                    },
                    "timeEnd": {
                        "type": "string",
                        "description": "Time HH:mm",
                        "example": "12:00"
                    },
                    "dateStart": {
                        "type": "string",
                        "description": "Date YYYY-mm-dd",
                        "example": "2021-03-15"
                    },
                    "dateEnd": {
                        "type": "string",
                        "description": "Date YYYY-mm-dd",
                        "example": "2021-03-15"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "daysOfWeek": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayOfWeekEnum"
                        }
                    },
                    "slotDuration": {
                        "type": "number",
                        "description": "Slot duration in minutes"
                    },
                    "slotCapacity": {
                        "type": "number",
                        "description": "Number of orders available in this slot"
                    }
                },
                "required": [
                    "slotDuration",
                    "slotCapacity"
                ]
            },
            "ShoppingListTypeEnum": {
                "type": "string",
                "enum": [
                    "PURCHASED_PRODUCTS",
                    "CUSTOM"
                ]
            },
            "StoreShoppingListProductEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "listId": {
                        "type": "string"
                    },
                    "productLinkId": {
                        "type": "string"
                    },
                    "counter": {
                        "type": "number",
                        "example": 1
                    },
                    "list": {
                        "type": "string"
                    },
                    "productLink": {
                        "$ref": "#/components/schemas/ProductLinkEntity"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "listId",
                    "productLinkId",
                    "counter"
                ]
            },
            "StoreShoppingListEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "listType": {
                        "$ref": "#/components/schemas/ShoppingListTypeEnum"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreEntity"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerEntity"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreShoppingListProductEntity"
                        }
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "listType",
                    "storeId",
                    "customerId"
                ]
            },
            "StoreStaffBoundCreateInput": {
                "type": "object",
                "properties": {
                    "storeId": {
                        "type": "string"
                    },
                    "staffId": {
                        "type": "string"
                    }
                },
                "required": [
                    "storeId",
                    "staffId"
                ]
            },
            "StoreStaffBoundUpdateInput": {
                "type": "object",
                "properties": {
                    "storeId": {
                        "type": "string"
                    },
                    "staffId": {
                        "type": "string"
                    }
                },
                "required": [
                    "storeId",
                    "staffId"
                ]
            },
            "StaffStoreManyCreateInput": {
                "type": "object",
                "properties": {
                    "storeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "staffId": {
                        "type": "string"
                    }
                },
                "required": [
                    "storeIds",
                    "staffId"
                ]
            },
            "StoreStaffManyCreateInput": {
                "type": "object",
                "properties": {
                    "staffIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "storeId": {
                        "type": "string"
                    }
                },
                "required": [
                    "staffIds",
                    "storeId"
                ]
            },
            "VendorCategoryCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive"
                ]
            },
            "VendorCategoryUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    }
                },
                "required": [
                    "name_i18n"
                ]
            },
            "PaybackCardEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "store": {
                        "$ref": "#/components/schemas/StoreEntity"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerEntity"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "cardNumber": {
                        "type": "string",
                        "maxLength": 200
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "PaybackCardCreateInput": {
                "type": "object",
                "properties": {
                    "storeId": {
                        "type": "string"
                    },
                    "customerId": {
                        "type": "string"
                    }
                },
                "required": [
                    "storeId",
                    "customerId"
                ]
            },
            "PaybackCardUpdateInput": {
                "type": "object",
                "properties": {
                    "storeId": {
                        "type": "string"
                    },
                    "customerId": {
                        "type": "string"
                    }
                }
            },
            "CategoriesAndGroupsTemplateEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "subcategory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductSubcategoryEntity"
                        }
                    },
                    "subcategoryCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "CategoriesAndGroupsTemplateCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "subcategoryCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "subcategoryCodes"
                ]
            },
            "StaffSettingsCreateInput": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Jeffrey"
                    },
                    "lastName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Lebowski"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "example": "1949-12-04"
                    },
                    "placeOfBirth": {
                        "type": "string",
                        "example": "Los Angeles"
                    },
                    "staffLanguageCode": {
                        "$ref": "#/components/schemas/LangCodeEnum"
                    },
                    "nationalityCode": {
                        "type": "string"
                    },
                    "salutation": {
                        "$ref": "#/components/schemas/SalutationEnum"
                    },
                    "phoneCountryCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "staffNumber": {
                        "type": "string"
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "staffLanguageCode"
                ]
            },
            "StaffCreateInput": {
                "type": "object",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/StaffRoleEnum"
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 200,
                        "example": "lebowski@bringoo.de"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "DUDE"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/StaffSettingsCreateInput"
                    },
                    "note": {
                        "type": "string",
                        "maxLength": 200
                    }
                },
                "required": [
                    "role",
                    "email",
                    "password",
                    "settings"
                ]
            },
            "StaffUpdateInput": {
                "type": "object",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/StaffRoleEnum"
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 200,
                        "example": "the-dude@bringoo.de"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "settings": {
                        "$ref": "#/components/schemas/StaffSettingsEntity"
                    },
                    "note": {
                        "type": "string",
                        "maxLength": 200
                    }
                }
            },
            "StaffSessionHistoryEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "deviceName": {
                        "type": "string"
                    },
                    "deviceType": {
                        "type": "string"
                    },
                    "deviceBrand": {
                        "type": "string"
                    },
                    "deviceOs": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "appVersion": {
                        "type": "string"
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "staffId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "deviceId",
                    "staffId"
                ]
            },
            "FindUnboundStaffInput": {
                "type": "object",
                "properties": {
                    "search": {
                        "type": "string"
                    },
                    "limit": {
                        "type": "number"
                    },
                    "page": {
                        "type": "number",
                        "example": 1
                    }
                },
                "required": [
                    "limit",
                    "page"
                ]
            },
            "AppSettingsCustomerEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "appIosVersion": {
                        "type": "string",
                        "description": "App iOS Version",
                        "example": "1"
                    },
                    "appAndroidVersion": {
                        "type": "string",
                        "description": "App Android Version",
                        "example": "1"
                    },
                    "searchRank": {
                        "type": "number",
                        "description": "Minimum search rank for products",
                        "example": 1
                    },
                    "cartMaxWeight": {
                        "type": "number",
                        "description": "Cart Max Weight",
                        "example": 20
                    },
                    "productOutOfStockTime": {
                        "type": "number",
                        "description": "Product out of stock time, hours",
                        "example": 1
                    },
                    "orderDelayNotificationTime": {
                        "type": "number",
                        "description": "Order delay notification time, minutes",
                        "example": 15
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "AppSettingsCustomerUpdateInput": {
                "type": "object",
                "properties": {
                    "appIosVersion": {
                        "type": "string",
                        "description": "App iOs Version",
                        "example": "1"
                    },
                    "appAndroidVersion": {
                        "type": "string",
                        "description": "App Android Version",
                        "example": "1"
                    },
                    "cartMaxWeight": {
                        "type": "number",
                        "description": "Cart Max Weight",
                        "example": 1
                    },
                    "productOutOfStockTime": {
                        "type": "number",
                        "description": "Product out out stock time, hours",
                        "example": 1
                    },
                    "orderDelayNotificationTime": {
                        "type": "number",
                        "description": "Order delay notification time, minutes",
                        "example": 15
                    }
                }
            },
            "AppSettingsStaffEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "appIosVersion": {
                        "type": "string",
                        "description": "App iOS Version",
                        "example": "1"
                    },
                    "appAndroidVersion": {
                        "type": "string",
                        "description": "App Android Version",
                        "example": "1"
                    },
                    "riderJobDistance": {
                        "type": "number",
                        "description": "Rider Jon Distance",
                        "example": 1
                    },
                    "pickerJobDistance": {
                        "type": "number",
                        "description": "Picker Jon Distance",
                        "example": 1
                    },
                    "signUpCode": {
                        "type": "number",
                        "description": "SignUp Code for staff"
                    }
                },
                "required": [
                    "id",
                    "isActive"
                ]
            },
            "AppSettingsStaffUpdateInput": {
                "type": "object",
                "properties": {
                    "appIosVersion": {
                        "type": "string",
                        "description": "App iOs Version",
                        "example": "1"
                    },
                    "appAndroidVersion": {
                        "type": "string",
                        "description": "App Android Version",
                        "example": "1"
                    },
                    "riderJobDistance": {
                        "type": "number",
                        "description": "Rider Jon Distance",
                        "example": 1
                    },
                    "pickerJobDistance": {
                        "type": "number",
                        "description": "Picker Jon Distance",
                        "example": 1
                    },
                    "signUpCode": {
                        "type": "number",
                        "description": "SignUp Code",
                        "example": 123456
                    }
                }
            },
            "CountryCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "iso2": {
                        "description": "Country Code ISO2",
                        "example": "DE",
                        "$ref": "#/components/schemas/Iso2Enum"
                    },
                    "iso3": {
                        "description": "Country Code ISO3",
                        "example": "DEU",
                        "$ref": "#/components/schemas/Iso3Enum"
                    },
                    "code": {
                        "description": "Country Code",
                        "example": "DE",
                        "$ref": "#/components/schemas/Iso2Enum"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "iso2",
                    "iso3",
                    "code"
                ]
            },
            "CountryUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "iso2": {
                        "description": "Country Code ISO2",
                        "example": "DE",
                        "$ref": "#/components/schemas/Iso2Enum"
                    },
                    "iso3": {
                        "description": "Country Code ISO3",
                        "example": "DEU",
                        "$ref": "#/components/schemas/Iso3Enum"
                    },
                    "code": {
                        "description": "Country Code",
                        "example": "DE",
                        "$ref": "#/components/schemas/Iso2Enum"
                    }
                },
                "required": [
                    "name_i18n",
                    "iso2",
                    "iso3",
                    "code"
                ]
            },
            "ManagerSignUpInput": {
                "type": "object",
                "properties": {
                    "deviceId": {
                        "type": "string",
                        "example": "jhdi-dssd-fdcv"
                    },
                    "pushNotificationToken": {
                        "type": "string"
                    },
                    "deviceType": {
                        "type": "string",
                        "example": "desktop"
                    },
                    "deviceName": {
                        "type": "string",
                        "example": "some-device"
                    },
                    "deviceBrand": {
                        "type": "string",
                        "example": "some-brand"
                    },
                    "deviceOs": {
                        "type": "string",
                        "example": "windows"
                    },
                    "appVersion": {
                        "type": "string",
                        "example": "0.1"
                    },
                    "firstName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Jeffrey"
                    },
                    "lastName": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Lebowski"
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 200,
                        "example": "lebowski@bringoo.de"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "DUDE"
                    },
                    "confirmPassword": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "DUDE"
                    },
                    "managerLanguageCode": {
                        "example": "DE",
                        "$ref": "#/components/schemas/LangCodeEnum"
                    },
                    "doNotVerifyEmail": {
                        "type": "boolean",
                        "deprecated": true
                    }
                },
                "required": [
                    "deviceId",
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "confirmPassword",
                    "managerLanguageCode"
                ]
            },
            "TokensDto": {
                "type": "object",
                "properties": {
                    "accessToken": {
                        "type": "string"
                    },
                    "refreshToken": {
                        "type": "string"
                    }
                },
                "required": [
                    "accessToken",
                    "refreshToken"
                ]
            },
            "ManagerSignInInput": {
                "type": "object",
                "properties": {
                    "deviceId": {
                        "type": "string",
                        "example": "jhdi-dssd-fdcv"
                    },
                    "pushNotificationToken": {
                        "type": "string"
                    },
                    "deviceType": {
                        "type": "string",
                        "example": "desktop"
                    },
                    "deviceName": {
                        "type": "string",
                        "example": "some-device"
                    },
                    "deviceBrand": {
                        "type": "string",
                        "example": "some-brand"
                    },
                    "deviceOs": {
                        "type": "string",
                        "example": "windows"
                    },
                    "appVersion": {
                        "type": "string",
                        "example": "0.1"
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 200,
                        "example": "admin@bringoo.de"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Admin2021*"
                    }
                },
                "required": [
                    "deviceId",
                    "email",
                    "password"
                ]
            },
            "RefreshTokenInput": {
                "type": "object",
                "properties": {
                    "refreshToken": {
                        "type": "string"
                    },
                    "deviceId": {
                        "type": "string"
                    }
                },
                "required": [
                    "refreshToken",
                    "deviceId"
                ]
            },
            "EmailVerifyInput": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "example": "0012454"
                    }
                },
                "required": [
                    "code"
                ]
            },
            "RefreshPushNotificationTokenInput": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "deviceId": {
                        "type": "string",
                        "example": "jhdi-dssd-fdcv"
                    }
                },
                "required": [
                    "token"
                ]
            },
            "ResetPasswordInput": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "deviceId": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "deviceId"
                ]
            },
            "SetPasswordInput": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "4:Sp8$z6>@LHq#Pr"
                    },
                    "confirmPassword": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "4:Sp8$z6>@LHq#Pr"
                    }
                },
                "required": [
                    "password",
                    "confirmPassword"
                ]
            },
            "ChangePasswordInput": {
                "type": "object",
                "properties": {
                    "oldPassword": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "d:Sdsh734dg39hs(*"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "4:Sp8$z6>@LHq#Pr"
                    },
                    "confirmPassword": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "4:Sp8$z6>@LHq#Pr"
                    }
                },
                "required": [
                    "oldPassword",
                    "password",
                    "confirmPassword"
                ]
            },
            "SessionOutInput": {
                "type": "object",
                "properties": {
                    "sessionId": {
                        "type": "string"
                    }
                },
                "required": [
                    "sessionId"
                ]
            },
            "ManagerSessionEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "deviceType": {
                        "type": "string"
                    },
                    "deviceBrand": {
                        "type": "string"
                    },
                    "deviceOs": {
                        "type": "string"
                    },
                    "appVersion": {
                        "type": "string"
                    }
                }
            },
            "SalesProductsOrderedFieldsEnum": {
                "type": "string",
                "enum": [
                    "name_i18n",
                    "store_name_i18n",
                    "category_name_i18n",
                    "subcategory_name_i18n",
                    "salesCount",
                    "totalPrice",
                    "lastSales"
                ]
            },
            "OrderedEnum": {
                "type": "string",
                "enum": [
                    "ASC",
                    "DESC"
                ]
            },
            "SalesProductsInput": {
                "type": "object",
                "properties": {
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "limit": {
                        "type": "number"
                    },
                    "page": {
                        "type": "number"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "categoryCode": {
                        "type": "string"
                    },
                    "subcategoryCode": {
                        "type": "string"
                    },
                    "orderedField": {
                        "example": "name_i18n",
                        "$ref": "#/components/schemas/SalesProductsOrderedFieldsEnum"
                    },
                    "order": {
                        "example": "ASC",
                        "$ref": "#/components/schemas/OrderedEnum"
                    }
                },
                "required": [
                    "dateStart",
                    "dateEnd",
                    "orderedField",
                    "order"
                ]
            },
            "SalesProductsDto": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "type": "string"
                    },
                    "store_name_i18n": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "category_name_i18n": {
                        "type": "string"
                    },
                    "subcategory_name_i18n": {
                        "type": "string"
                    },
                    "salesCount": {
                        "type": "number"
                    },
                    "totalPrice": {
                        "type": "number"
                    },
                    "lastSales": {
                        "type": "string"
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n",
                    "store_name_i18n",
                    "storeId",
                    "category_name_i18n",
                    "subcategory_name_i18n",
                    "salesCount",
                    "totalPrice",
                    "lastSales"
                ]
            },
            "PageableAnalyticsSalesProducts": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "number",
                        "description": "Number of items on the current page"
                    },
                    "total": {
                        "type": "number",
                        "description": "Total number of items"
                    },
                    "page": {
                        "type": "number",
                        "description": "Current page"
                    },
                    "pageCount": {
                        "type": "number",
                        "description": "Total number of pages"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SalesProductsDto"
                        }
                    }
                },
                "required": [
                    "count",
                    "total",
                    "page",
                    "pageCount",
                    "items"
                ]
            },
            "GroupByDateEnum": {
                "type": "string",
                "enum": [
                    "DAY",
                    "WEEK",
                    "MONTH",
                    "YEAR"
                ]
            },
            "SalesOverTimeInput": {
                "type": "object",
                "properties": {
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "limit": {
                        "type": "number"
                    },
                    "page": {
                        "type": "number"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "groupBy": {
                        "example": "DAY",
                        "$ref": "#/components/schemas/GroupByDateEnum"
                    }
                },
                "required": [
                    "dateStart",
                    "dateEnd",
                    "groupBy"
                ]
            },
            "BarCartValueDto": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number"
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "required": [
                    "value",
                    "label"
                ]
            },
            "SalesOverTimeDto": {
                "type": "object",
                "properties": {
                    "grandTotal": {
                        "type": "number"
                    },
                    "costSales": {
                        "type": "number"
                    },
                    "averageCheck": {
                        "type": "number"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BarCartValueDto"
                        }
                    }
                },
                "required": [
                    "grandTotal",
                    "costSales",
                    "averageCheck",
                    "items"
                ]
            },
            "SalesProductRefundOrderedFieldsEnum": {
                "type": "string",
                "enum": [
                    "name_i18n",
                    "store_name_i18n",
                    "category_name_i18n",
                    "subcategory_name_i18n",
                    "salesCount",
                    "refundCount",
                    "outOfStock"
                ]
            },
            "SalesProductRefundInput": {
                "type": "object",
                "properties": {
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "limit": {
                        "type": "number"
                    },
                    "page": {
                        "type": "number"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "categoryCode": {
                        "type": "string"
                    },
                    "subcategoryCode": {
                        "type": "string"
                    },
                    "order": {
                        "example": "ASC",
                        "$ref": "#/components/schemas/OrderedEnum"
                    },
                    "orderedField": {
                        "example": "name_i18n",
                        "$ref": "#/components/schemas/SalesProductRefundOrderedFieldsEnum"
                    }
                },
                "required": [
                    "dateStart",
                    "dateEnd",
                    "order",
                    "orderedField"
                ]
            },
            "ProductRefundDto": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "type": "string"
                    },
                    "store_name_i18n": {
                        "type": "string"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "category_name_i18n": {
                        "type": "string"
                    },
                    "subcategory_name_i18n": {
                        "type": "string"
                    },
                    "salesCount": {
                        "type": "number"
                    },
                    "refundCount": {
                        "type": "number"
                    },
                    "outOfStock": {
                        "type": "boolean"
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n",
                    "store_name_i18n",
                    "storeId",
                    "category_name_i18n",
                    "subcategory_name_i18n",
                    "salesCount",
                    "refundCount",
                    "outOfStock"
                ]
            },
            "PageableProductRefund": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "number",
                        "description": "Number of items on the current page"
                    },
                    "total": {
                        "type": "number",
                        "description": "Total number of items"
                    },
                    "page": {
                        "type": "number",
                        "description": "Current page"
                    },
                    "pageCount": {
                        "type": "number",
                        "description": "Total number of pages"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductRefundDto"
                        }
                    }
                },
                "required": [
                    "count",
                    "total",
                    "page",
                    "pageCount",
                    "items"
                ]
            },
            "ProductsOutOfStockInput": {
                "type": "object",
                "properties": {
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "limit": {
                        "type": "number"
                    },
                    "page": {
                        "type": "number"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string",
                        "example": "Bottle"
                    }
                },
                "required": [
                    "dateStart",
                    "dateEnd"
                ]
            },
            "ProductOutOfStockDto": {
                "type": "object",
                "properties": {
                    "orderNumber": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "string"
                    },
                    "deliveryDate": {
                        "type": "string"
                    },
                    "deliveryTime": {
                        "type": "string"
                    },
                    "pickJobStarted": {
                        "type": "string"
                    },
                    "productUpdateStamp": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "storeName": {
                        "type": "string"
                    },
                    "categoryName": {
                        "type": "string"
                    },
                    "subCategoryName": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "regularPrice": {
                        "type": "number"
                    },
                    "currencyCode": {
                        "type": "string"
                    },
                    "orderItemStatus": {
                        "$ref": "#/components/schemas/OrderItemStatusEnum"
                    },
                    "quantityOrdered": {
                        "type": "number"
                    },
                    "quantityFound": {
                        "type": "number"
                    },
                    "quantityRefund": {
                        "type": "number"
                    },
                    "revenueLost": {
                        "type": "number"
                    }
                },
                "required": [
                    "orderNumber",
                    "orderId",
                    "deliveryDate",
                    "deliveryTime",
                    "pickJobStarted",
                    "productUpdateStamp",
                    "productName",
                    "storeName",
                    "categoryName",
                    "subCategoryName",
                    "price",
                    "regularPrice",
                    "currencyCode",
                    "orderItemStatus",
                    "quantityOrdered",
                    "quantityFound",
                    "quantityRefund",
                    "revenueLost"
                ]
            },
            "PageableProductsOutOfStockDto": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "number",
                        "description": "Number of items on the current page"
                    },
                    "total": {
                        "type": "number",
                        "description": "Total number of items"
                    },
                    "page": {
                        "type": "number",
                        "description": "Current page"
                    },
                    "pageCount": {
                        "type": "number",
                        "description": "Total number of pages"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOutOfStockDto"
                        }
                    }
                },
                "required": [
                    "count",
                    "total",
                    "page",
                    "pageCount",
                    "items"
                ]
            },
            "AnalyticsCustomersOveTimeInput": {
                "type": "object",
                "properties": {
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/CustomerRoleEnum"
                    },
                    "groupBy": {
                        "example": "DAY",
                        "$ref": "#/components/schemas/GroupByDateEnum"
                    }
                },
                "required": [
                    "dateStart",
                    "dateEnd",
                    "groupBy"
                ]
            },
            "LoyalCustomerOrderedFieldsEnum": {
                "type": "string",
                "enum": [
                    "customerName",
                    "customerNumber",
                    "grandTotal",
                    "totalStores",
                    "totalOrders",
                    "lastOrderDate"
                ]
            },
            "LoyalCustomerInput": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "number"
                    },
                    "page": {
                        "type": "number"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "order": {
                        "example": "ASC",
                        "$ref": "#/components/schemas/OrderedEnum"
                    },
                    "orderedField": {
                        "example": "customerNumber",
                        "$ref": "#/components/schemas/LoyalCustomerOrderedFieldsEnum"
                    }
                },
                "required": [
                    "order",
                    "orderedField"
                ]
            },
            "LoyalCustomerDto": {
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "string"
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "customerNumber": {
                        "type": "string"
                    },
                    "grandTotal": {
                        "type": "number"
                    },
                    "totalStores": {
                        "type": "number"
                    },
                    "totalOrders": {
                        "type": "number"
                    },
                    "lastOrderDate": {
                        "type": "string"
                    }
                },
                "required": [
                    "customerId",
                    "customerName",
                    "customerNumber",
                    "grandTotal",
                    "totalStores",
                    "totalOrders",
                    "lastOrderDate"
                ]
            },
            "PageableLoyalCustomerDto": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "number",
                        "description": "Number of items on the current page"
                    },
                    "total": {
                        "type": "number",
                        "description": "Total number of items"
                    },
                    "page": {
                        "type": "number",
                        "description": "Current page"
                    },
                    "pageCount": {
                        "type": "number",
                        "description": "Total number of pages"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LoyalCustomerDto"
                        }
                    }
                },
                "required": [
                    "count",
                    "total",
                    "page",
                    "pageCount",
                    "items"
                ]
            },
            "OneTimeCustomerOrderedFieldsEnum": {
                "type": "string",
                "enum": [
                    "customerName",
                    "customerNumber",
                    "storeName",
                    "itemsPurchased",
                    "purchaseDate",
                    "totalRevenue"
                ]
            },
            "OneTimeCustomerInput": {
                "type": "object",
                "properties": {
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "limit": {
                        "type": "number"
                    },
                    "page": {
                        "type": "number"
                    },
                    "search": {
                        "type": "string",
                        "example": "Matthew"
                    },
                    "storeId": {
                        "type": "string"
                    },
                    "totalRevenue": {
                        "type": "string",
                        "example": ">= 0.15"
                    },
                    "itemsPurchased": {
                        "type": "string",
                        "example": "!= 0.15"
                    },
                    "order": {
                        "example": "ASC",
                        "$ref": "#/components/schemas/OrderedEnum"
                    },
                    "orderedField": {
                        "example": "customerName",
                        "$ref": "#/components/schemas/OneTimeCustomerOrderedFieldsEnum"
                    }
                },
                "required": [
                    "dateStart",
                    "dateEnd",
                    "order",
                    "orderedField"
                ]
            },
            "OneTimeCustomerDto": {
                "type": "object",
                "properties": {
                    "storeId": {
                        "type": "string"
                    },
                    "storeName": {
                        "type": "string"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "customerNumber": {
                        "type": "string"
                    },
                    "itemsPurchased": {
                        "type": "number"
                    },
                    "totalRevenue": {
                        "type": "number"
                    },
                    "purchaseDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "storeId",
                    "storeName",
                    "customerId",
                    "customerName",
                    "customerNumber",
                    "itemsPurchased",
                    "totalRevenue",
                    "purchaseDate"
                ]
            },
            "PageableOneTimeCustomersDto": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "number",
                        "description": "Number of items on the current page"
                    },
                    "total": {
                        "type": "number",
                        "description": "Total number of items"
                    },
                    "page": {
                        "type": "number",
                        "description": "Current page"
                    },
                    "pageCount": {
                        "type": "number",
                        "description": "Total number of pages"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OneTimeCustomerDto"
                        }
                    }
                },
                "required": [
                    "count",
                    "total",
                    "page",
                    "pageCount",
                    "items"
                ]
            },
            "CustomerRevenueTypesEnum": {
                "type": "string",
                "enum": [
                    "STORE",
                    "REGION"
                ]
            },
            "CustomerRevenueInput": {
                "type": "object",
                "properties": {
                    "revenueType": {
                        "$ref": "#/components/schemas/CustomerRevenueTypesEnum"
                    }
                },
                "required": [
                    "revenueType"
                ]
            },
            "StackedBarCartValueDto": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "value",
                    "name"
                ]
            },
            "DateRangeInput": {
                "type": "object",
                "properties": {
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    }
                },
                "required": [
                    "dateStart",
                    "dateEnd"
                ]
            },
            "HeatMapChartValueDto": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number"
                    },
                    "label": {
                        "type": "string"
                    },
                    "count": {
                        "type": "number"
                    }
                },
                "required": [
                    "value",
                    "label",
                    "count"
                ]
            },
            "CustomerOrdersHeatMapDto": {
                "type": "object",
                "properties": {
                    "chartValue": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HeatMapChartValueDto"
                        }
                    },
                    "count": {
                        "type": "number"
                    }
                },
                "required": [
                    "chartValue",
                    "count"
                ]
            },
            "ProductSearchTermDto": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "number"
                    },
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "count",
                    "term"
                ]
            },
            "ProductSearchTermsDto": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductSearchTermDto"
                        }
                    },
                    "total": {
                        "type": "number"
                    }
                },
                "required": [
                    "items",
                    "total"
                ]
            },
            "ProductSearchTermProductDto": {
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "string"
                    },
                    "count": {
                        "type": "number"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "categoryName": {
                        "type": "string"
                    },
                    "subcategoryName": {
                        "type": "string"
                    }
                },
                "required": [
                    "productId",
                    "count",
                    "productName",
                    "categoryName",
                    "subcategoryName"
                ]
            },
            "ProductSearchTermProductsDto": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductSearchTermProductDto"
                        }
                    },
                    "total": {
                        "type": "number"
                    }
                },
                "required": [
                    "items",
                    "total"
                ]
            },
            "ProductSearchPopularTermsDto": {
                "type": "object",
                "properties": {
                    "terms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "terms"
                ]
            },
            "OrderEventTypeEnum": {
                "type": "string",
                "enum": [
                    "ORDER_CREATED",
                    "ORDER_CANCELED_BY_CUSTOMER",
                    "ORDER_CANCELED_BY_MANAGER",
                    "ORDER_CANCELED_NO_PRODUCTS",
                    "ORDER_PAID",
                    "PICK_JOB_ACCEPTED",
                    "DELIVERY_JOB_ACCEPTED",
                    "PICK_JOB_STARTED",
                    "END_OF_PICKING",
                    "IN_SHOP_PAYMENT",
                    "DELIVERY_JOB_STARTED",
                    "CONFIRM_AGE_VERBALLY",
                    "CONFIRM_AGE_VERBALLY_ISSUE",
                    "CONFIRM_ID_PHOTO",
                    "CONFIRM_ID_PHOTO_ISSUE",
                    "VERIFY_AGE",
                    "TERMINATE_ORDER_WITH_REFUND",
                    "TERMINATE_ORDER_WITHOUT_REFUND",
                    "DELIVERY_JOB_COMPLETE",
                    "SET_PICKER_BY_MANAGER",
                    "SET_DRIVER_BY_MANAGER",
                    "CHANGE_DELIVERY_COMMENT",
                    "CHANGE_MESSAGE_FOR_SHOPPER",
                    "CHANGE_DELIVERY_ADDRESS",
                    "CHANGE_BILLING_ADDRESS"
                ]
            },
            "OrderEventDto": {
                "type": "object",
                "properties": {
                    "eventType": {
                        "$ref": "#/components/schemas/OrderEventTypeEnum"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "dateTime": {
                        "type": "number"
                    },
                    "isCurrent": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "eventType",
                    "name_i18n",
                    "dateTime",
                    "isCurrent"
                ]
            },
            "OrderHistoryDto": {
                "type": "object",
                "properties": {
                    "events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderEventDto"
                        }
                    },
                    "orderNumber": {
                        "type": "string"
                    },
                    "orderStatus": {
                        "$ref": "#/components/schemas/OrderStatusEnum"
                    }
                },
                "required": [
                    "events",
                    "orderNumber",
                    "orderStatus"
                ]
            },
            "FaqTopicEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FaqItemEntity"
                        }
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "dateStart",
                    "dateEnd"
                ]
            },
            "FaqItemEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "create_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "update_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleted_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "topic": {
                        "$ref": "#/components/schemas/FaqTopicEntity"
                    },
                    "topicCode": {
                        "type": "string"
                    },
                    "userGroup": {
                        "$ref": "#/components/schemas/UserGroupEnum"
                    }
                },
                "required": [
                    "id",
                    "isActive",
                    "dateStart",
                    "dateEnd",
                    "userGroup"
                ]
            },
            "FaqTopicCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code",
                    "dateStart",
                    "dateEnd"
                ]
            },
            "FaqTopicUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    }
                },
                "required": [
                    "name_i18n",
                    "dateStart",
                    "dateEnd"
                ]
            },
            "FaqItemCreateInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "UUID"
                    },
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "topicCode": {
                        "type": "string"
                    },
                    "userGroup": {
                        "$ref": "#/components/schemas/UserGroupEnum"
                    }
                },
                "required": [
                    "name_i18n",
                    "isActive",
                    "code",
                    "dateStart",
                    "dateEnd",
                    "topicCode",
                    "userGroup"
                ]
            },
            "FaqItemUpdateInput": {
                "type": "object",
                "properties": {
                    "name_i18n": {
                        "description": "Multi language name",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "description_i18n": {
                        "description": "Multi language description",
                        "example": {
                            "EN": "--EN--",
                            "DE": "--DE--",
                            "FR": "--FR--"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/I18nInput"
                            }
                        ]
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string"
                    },
                    "dateStart": {
                        "type": "string"
                    },
                    "dateEnd": {
                        "type": "string"
                    },
                    "topicCode": {
                        "type": "string"
                    },
                    "userGroup": {
                        "$ref": "#/components/schemas/UserGroupEnum"
                    }
                },
                "required": [
                    "name_i18n",
                    "userGroup"
                ]
            },
            "PostValidationPipeDto": {
                "type": "object",
                "properties": {
                    "optionalNumber": {
                        "type": "number",
                        "description": "testing number field"
                    },
                    "definedNumber": {
                        "type": "number",
                        "description": "testing number field"
                    },
                    "definedString": {
                        "type": "string"
                    }
                },
                "required": [
                    "optionalNumber",
                    "definedNumber",
                    "definedString"
                ]
            },
            "FindInput": {
                "type": "object",
                "properties": {
                    "fields": {
                        "type": "string",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>"
                    },
                    "s": {
                        "type": "string",
                        "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>"
                    },
                    "filter": {
                        "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "or": {
                        "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sort": {
                        "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "join": {
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "limit": {
                        "type": "number",
                        "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>"
                    },
                    "page": {
                        "type": "number",
                        "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
                        "example": 1
                    },
                    "softDelete": {
                        "type": "boolean",
                        "description": "Load deleted items",
                        "example": false
                    }
                }
            },
            "FindOneInput": {
                "type": "object",
                "properties": {
                    "fields": {
                        "type": "string",
                        "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>"
                    },
                    "join": {
                        "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "softDelete": {
                        "type": "boolean",
                        "description": "Load deleted items",
                        "example": false
                    }
                }
            },
            "Pageable": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "number",
                        "description": "Number of items on the current page"
                    },
                    "total": {
                        "type": "number",
                        "description": "Total number of items"
                    },
                    "page": {
                        "type": "number",
                        "description": "Current page"
                    },
                    "pageCount": {
                        "type": "number",
                        "description": "Total number of pages"
                    }
                },
                "required": [
                    "count",
                    "total",
                    "page",
                    "pageCount"
                ]
            }
        }
    }
}
