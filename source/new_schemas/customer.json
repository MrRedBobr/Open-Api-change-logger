{
  "openapi": "3.0.0",
  "paths": {
    "/auth-customer/guest-sign-up": {
      "post": {
        "operationId": "AuthCustomerController_guestSignUp",
        "summary": "SignUp as guest.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuestSignUpInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth-customer"
        ]
      }
    },
    "/auth-customer/sign-up": {
      "post": {
        "operationId": "AuthCustomerController_signUp",
        "summary": "SignUp customer account.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerSignUpInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/auth-customer/send-verification-email": {
      "post": {
        "operationId": "AuthCustomerController_sendVerificationEmail",
        "summary": "Send a verification email.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "auth-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/auth-customer/sign-in": {
      "post": {
        "operationId": "AuthCustomerController_signIn",
        "summary": "SignIn in customer account.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerSignInInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/auth-customer/sign-out": {
      "post": {
        "operationId": "AuthCustomerController_signOut",
        "summary": "SignOut from customer account.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "auth-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/auth-customer/sign-out-all": {
      "post": {
        "operationId": "AuthCustomerController_signOutAll",
        "summary": "SignOut from all session for this customer.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "auth-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/auth-customer/verify-email": {
      "post": {
        "operationId": "AuthCustomerController_verifyEmail",
        "summary": "Get verify code from email.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerifyInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "auth-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/auth-customer/refresh": {
      "post": {
        "operationId": "AuthCustomerController_refresh",
        "summary": "Refresh JWT tokens.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth-customer"
        ]
      }
    },
    "/auth-customer/reset-password": {
      "post": {
        "operationId": "AuthCustomerController_resetPassword",
        "summary": "Reset customer password. Send Email.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "auth-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/auth-customer/set-password": {
      "post": {
        "operationId": "AuthCustomerController_setPassword",
        "summary": "Set customer password.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPasswordInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "auth-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/auth-customer/change-password": {
      "post": {
        "operationId": "AuthCustomerController_changePassword",
        "summary": "Change customer password.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "auth-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/auth-customer/check-verification-code-from-sms": {
      "post": {
        "operationId": "AuthCustomerController_checkVerificationCodeFromSms",
        "summary": "Send a verification code via sms.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCodeVerificationInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "auth-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart-item/{id}/note": {
      "get": {
        "operationId": "AppCartItemController_getNote",
        "summary": "Get cart item note",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemNoteDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart-item"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "patch": {
        "operationId": "AppCartItemController_setNote",
        "summary": "Get cart item note",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LineItemCustomerNoteInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemNoteDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart-item"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "AppCartItemController_deleteNote",
        "summary": "Get cart item note",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItemNoteDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart-item"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/replace-types": {
      "get": {
        "operationId": "AppCartController_replaceTypes",
        "summary": "Types of response to the lack of a product.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetaDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/set-product": {
      "post": {
        "operationId": "AppCartController_addProduct",
        "summary": "Add product in customer cart.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartInfoDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/carts": {
      "get": {
        "operationId": "AppCartController_cartList",
        "summary": "Get carts for logined customer.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/carts/{id}": {
      "get": {
        "operationId": "AppCartController_findCart",
        "summary": "Find one cart by cartId.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/cart/{storeId}/replaceType": {
      "patch": {
        "operationId": "AppCartController_setCartReplaceType",
        "summary": "Set replace type for customer cart.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartReplaceTypeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/cart/{storeId}": {
      "get": {
        "operationId": "AppCartController_cartDetails",
        "summary": "Find one cart by storeId.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/cart/item/{cartItemId}/replaceType": {
      "patch": {
        "operationId": "AppCartController_setItemReplaceType",
        "summary": "Set replace type for cart item.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "cartItemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartReplaceTypeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/cart/{id}": {
      "delete": {
        "operationId": "AppCartController_delete",
        "summary": "Delete cart.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/cart/{id}/address": {
      "patch": {
        "operationId": "AppCartController_updateAddress",
        "summary": "Update address for cart.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartAddressCreateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/accept/{id}": {
      "patch": {
        "operationId": "AppCartController_accept",
        "summary": "Accept cart.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/checkout/{id}": {
      "post": {
        "operationId": "AppCartController_checkout",
        "summary": "Checkout cart. Create order.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/orders": {
      "get": {
        "operationId": "AppCartController_orders",
        "summary": "Get orders.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderStatusFilterEnum"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 50,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageableOrderDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/orders/{id}": {
      "get": {
        "operationId": "AppCartController_order",
        "summary": "Get order by orderId.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetailsDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/orders/{id}/history": {
      "get": {
        "operationId": "AppCartController_orderHistory",
        "summary": "Get order-history by orderId.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/orders/{id}/cancel": {
      "patch": {
        "operationId": "AppCartController_deleteOrder",
        "summary": "Cancel order by orderId.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetailsDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-cart/orders/{id}/shopping-experience": {
      "patch": {
        "operationId": "AppCartController_setCustomerShoppingExperience",
        "summary": "Set customer shopping experience.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingExperienceInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "app-cart"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer-faq/topics-with-items": {
      "get": {
        "operationId": "AppCustomerFaqController_getTopicsWithItems",
        "summary": "Get topics with items.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqTopicDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app-customer-faq"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer-log/replacement-message-read": {
      "post": {
        "operationId": "AppCustomerLogController_replacementMessageRead",
        "summary": "Customer has seen product replacement message",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacementMessageReadInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer-log"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer-push-notification-subscription/by-device-id/{deviceId}": {
      "get": {
        "operationId": "AppCustomerPushNotificationSubscriptionController_getSubscription",
        "summary": "Get push notification subscription by deviceId",
        "parameters": [
          {
            "name": "deviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushNotificationSubscriptionEntity"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer-push-notification-subscription"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer-push-notification-subscription/all": {
      "get": {
        "operationId": "AppCustomerPushNotificationSubscriptionController_getSubscriptions",
        "summary": "Get push notification subscription by deviceId",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PushNotificationSubscriptionEntity"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app-customer-push-notification-subscription"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer-push-notification-subscription/refresh": {
      "post": {
        "operationId": "AppCustomerPushNotificationSubscriptionController_refreshSubscription",
        "summary": "Refresh push notification subscription",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationSubscriptionRefreshInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer-push-notification-subscription"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer-rating/app/{deviceOs}": {
      "get": {
        "operationId": "AppCustomerRatingController_getCustomerRating",
        "summary": "Rating of app from customer.",
        "parameters": [
          {
            "name": "deviceOs",
            "required": true,
            "in": "path",
            "example": "IOS",
            "schema": {
              "$ref": "#/components/schemas/OsEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer-rating"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer-rating/app": {
      "post": {
        "operationId": "AppCustomerRatingController_setCustomerRating",
        "summary": "Set rating of app from customer.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatingAppSetInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer-rating"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer-rating/postpone": {
      "post": {
        "operationId": "AppCustomerRatingController_postponeCustomerRating",
        "summary": "Postpone rating of app from customer.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatingAppPostponementCreateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer-rating"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer-rating/need-ask-for-rating/{deviceOs}": {
      "get": {
        "operationId": "AppCustomerRatingController_needAskCustomerForRating",
        "summary": "Is customer needed to ask for rating of app.",
        "parameters": [
          {
            "name": "deviceOs",
            "required": true,
            "in": "path",
            "example": "IOS",
            "schema": {
              "$ref": "#/components/schemas/OsEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer-rating"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer-settings/version/{os}/{clientVersion}": {
      "get": {
        "operationId": "AppCustomerSettingsController_compareVersionWithClient",
        "summary": "Compare Customer OS Version with client version",
        "parameters": [
          {
            "name": "os",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/OsEnum"
            }
          },
          {
            "name": "clientVersion",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsVersionStateDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer-settings"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer/languages": {
      "get": {
        "operationId": "AppCustomerController_languages",
        "summary": "Get languages.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer/order-cancel-reasons": {
      "get": {
        "operationId": "AppCustomerController_orderCancelReasons",
        "summary": "Get cancel reasons for orders.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderCancelReasonDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer/profile": {
      "get": {
        "operationId": "AppCustomerController_profileGet",
        "summary": "Customer profile.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerProfileDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "patch": {
        "operationId": "AppCustomerController_updateProfile",
        "summary": "Customer profile update except for phone number.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerProfileDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer/profile/phone-number": {
      "patch": {
        "operationId": "AppCustomerController_updateProfilePhoneNumber",
        "summary": "Customer profile phone number update.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfilePhoneNumberUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerProfileDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer/addresses/{type}": {
      "get": {
        "operationId": "AppCustomerController_getAddresses",
        "summary": "Get customer address by addressType.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/AddressTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerAddressDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer/address": {
      "post": {
        "operationId": "AppCustomerController_createAddress",
        "summary": "Create address.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressCreateInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAddressDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer/address/{id}": {
      "get": {
        "operationId": "AppCustomerController_getAddress",
        "summary": "Get customer address by addressId.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAddressDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "patch": {
        "operationId": "AppCustomerController_updateAddress",
        "summary": "Update customer address by addressId.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAddressDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "AppCustomerController_deleteAddress",
        "summary": "Delete customer address by addressId.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer/delete-account": {
      "delete": {
        "operationId": "AppCustomerController_deleteAccount",
        "summary": "Delete customer.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-notification-settings": {
      "get": {
        "operationId": "AppNotificationSettingsController_getNotificationSettings",
        "summary": "Get notification settings",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettingsDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-notification-settings"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "patch": {
        "operationId": "AppNotificationSettingsController_updateNotificationSettings",
        "summary": "Update notification settings",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSettingsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettingsDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-notification-settings"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-order-item/{id}": {
      "get": {
        "operationId": "AppOrderItemController_getNote",
        "summary": "Get order item note",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemNoteDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-order-item"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "patch": {
        "operationId": "AppOrderItemController_setNote",
        "summary": "Get order item note",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LineItemCustomerNoteInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemNoteDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-order-item"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "AppOrderItemController_deleteNote",
        "summary": "Get order item note",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemNoteDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-order-item"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-order-replacement-list/{orderReplacementId}": {
      "get": {
        "operationId": "AppOrderReplacementListController_getOrderReplacementById",
        "summary": "Get order replacement by id",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderReplacementId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderReplacementDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-order-replacement-list"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-order-replacement/{orderId}": {
      "get": {
        "operationId": "AppOrderReplacementController_getAllReplacements",
        "summary": "Get all order replacements",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderReplacementDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app-order-replacement"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "patch": {
        "operationId": "AppOrderReplacementController_extendTime",
        "summary": "Extend order replacement time",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "app-order-replacement"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "AppOrderReplacementController_terminate",
        "summary": "Terminate order replacement",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "app-order-replacement"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-order-replacement/{orderId}/active": {
      "get": {
        "operationId": "AppOrderReplacementController_getActiveReplacement",
        "summary": "Get active order replacement",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderReplacementDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-order-replacement"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-order-replacement/{orderId}/checkout": {
      "post": {
        "operationId": "AppOrderReplacementController_checkout",
        "summary": "Checkout for order replacement",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-order-replacement"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-order-replacement/{orderId}/{itemId}": {
      "delete": {
        "operationId": "AppOrderReplacementController_removeItem",
        "summary": "Remove item from list",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderReplacementDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-order-replacement"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "patch": {
        "operationId": "AppOrderReplacementController_recoverItem",
        "summary": "Recover item",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderReplacementDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-order-replacement"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-order-replacement/{orderId}/set-replacement": {
      "post": {
        "operationId": "AppOrderReplacementController_setReplacement",
        "summary": "Create or update replacement item",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductReplaceInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderReplacementDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-order-replacement"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-order-replacement/{orderId}/{itemId}/category-products": {
      "get": {
        "operationId": "AppOrderReplacementController_storeProductsForCategory",
        "summary": "Get Store products from same category.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageableProductDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-order-replacement"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-order-replacement/{orderId}/{itemId}/subcategory-products": {
      "get": {
        "operationId": "AppOrderReplacementController_storeProductsForSubCategory",
        "summary": "Get Store products from same subcategory.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageableProductDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-order-replacement"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-order/active": {
      "get": {
        "operationId": "AppOrderController_active",
        "summary": "Get Active customer orders",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 50,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageableActiveOrderDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-order"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-customer-reorder/create-cart-from-order": {
      "post": {
        "operationId": "AppCustomerReorderController_createCartFromOrder",
        "summary": "Create a cart from the closed order",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCartFromOrderInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartEntity"
                }
              }
            }
          }
        },
        "tags": [
          "app-customer-reorder"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-shopping-list": {
      "post": {
        "operationId": "AppShoppingListController_createCustomerList",
        "summary": "Create a customer's shopping list",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListCreateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-shopping-list"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-shopping-list/rename": {
      "patch": {
        "operationId": "AppShoppingListController_renameCustomerList",
        "summary": "Rename the customer's shopping list",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListRenameInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-shopping-list"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-shopping-list/{listId}": {
      "get": {
        "operationId": "AppShoppingListController_getCustomerListProducts",
        "summary": "Get the customer's shopping list products",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "listId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-shopping-list"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "AppShoppingListController_deleteCustomerList",
        "summary": "Delete the customer's shopping list",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "listId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-shopping-list"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-shopping-list/product/add": {
      "patch": {
        "operationId": "AppShoppingListController_addProductToList",
        "summary": "Add a product to the shopping list",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListProductLinkInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-shopping-list"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-shopping-list/product/remove": {
      "patch": {
        "operationId": "AppShoppingListController_removeProductFromList",
        "summary": "Remove the product from the shopping list",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListProductLinkInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-shopping-list"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-shopping-list/last-purchased-products/{listId}/{lastOrdersAmount}": {
      "get": {
        "operationId": "AppShoppingListController_getLastPurchasedProducts",
        "summary": "Get products form X last orders",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "listId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastOrdersAmount",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShoppingListProductDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app-shopping-list"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-shopping-list/create-cart-from-list": {
      "post": {
        "operationId": "AppShoppingListController_createCartFromList",
        "summary": "Create a cart from the shopping list ",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCartFromShoppingListInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartEntity"
                }
              }
            }
          }
        },
        "tags": [
          "app-shopping-list"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-store/vendor-types": {
      "get": {
        "operationId": "AppStoreController_vendorTypes",
        "summary": "Get Vendor-types.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 50,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageableVendorTypesDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-store/stores": {
      "get": {
        "operationId": "AppStoreController_stores",
        "summary": "Get Stores.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "lat",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "lng",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 50,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "vendorTypeCodes",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "countryCode",
            "required": true,
            "in": "query",
            "example": "DE",
            "schema": {
              "$ref": "#/components/schemas/Iso2Enum"
            }
          },
          {
            "name": "deliveryType",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DELIVERY",
                  "PICKUP",
                  "SHIPPING"
                ]
              }
            }
          },
          {
            "name": "zipCode",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageableStoreDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-store/stores/{id}": {
      "get": {
        "operationId": "AppStoreController_store",
        "summary": "Get Store by storeId.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zipCode",
            "required": true,
            "in": "query",
            "example": "NW1 6XE",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-store/stores/{id}/categories": {
      "get": {
        "operationId": "AppStoreController_categoriesSubcategories",
        "summary": "Get Store product-categories by storeId.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-store/stores/{id}/products": {
      "get": {
        "operationId": "AppStoreController_storeProducts",
        "summary": "Get Store products by storeId.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "isSalePrice",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PageableProductDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-store/stores/{id}/products/all": {
      "get": {
        "operationId": "AppStoreController_storeProductsAll",
        "summary": "Get Store products by storeId.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "isSalePrice",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageableProductDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-store/stores/{id}/products-search/{search}": {
      "get": {
        "operationId": "AppStoreController_storeProductsSearch",
        "summary": "Store products search.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "isSalePrice",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageableProductDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-store/stores/{id}/products/category/{code}": {
      "get": {
        "operationId": "AppStoreController_storeProductsForCategory",
        "summary": "Get Store products for category.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "isSalePrice",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageableProductDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-store/stores/{id}/products/subcategory/{code}": {
      "get": {
        "operationId": "AppStoreController_storeProductsForSubCategory",
        "summary": "Get Store products for subcategory.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "isSalePrice",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageableProductDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-store/products/{linkId}": {
      "get": {
        "operationId": "AppStoreController_productDetailsByLink",
        "summary": "Get Store product details.",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "linkId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDetailsDto"
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-store/stores/{id}/delivery-slots": {
      "get": {
        "operationId": "AppStoreController_getTimeSlots",
        "summary": "Get timeslots for store",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zipCode",
            "required": true,
            "in": "query",
            "example": "NW1 6XE",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreSchedulerDayDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-store/stores/{id}/slot-reservation": {
      "get": {
        "operationId": "AppStoreController_getReservation",
        "summary": "Get slot reservation",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "post": {
        "operationId": "AppStoreController_createReservation",
        "summary": "Create reservation",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/app-store/stores/{id}/shopping-list": {
      "get": {
        "operationId": "AppStoreController_getCustomerLists",
        "summary": "Get customer's shopping lists",
        "parameters": [
          {
            "name": "lang",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "EN",
                "DE",
                "FR",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShoppingListDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app-store"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Customer App api",
    "description": "",
    "version": "1.0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://localhost:3000"
    }
  ],
  "components": {
    "securitySchemes": {
      "access-token": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "GuestSignUpInput": {
        "type": "object",
        "properties": {
          "customerLanguageCode": {
            "type": "string",
            "example": "DE"
          },
          "deviceId": {
            "type": "string",
            "example": "jhdi-dssd-fdcv"
          }
        },
        "required": [
          "customerLanguageCode",
          "deviceId"
        ]
      },
      "TokensDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "accessToken",
          "refreshToken"
        ]
      },
      "CustomerSignUpInput": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "example": "jhdi-dssd-fdcv"
          },
          "pushNotificationToken": {
            "type": "string"
          },
          "deviceType": {
            "type": "string",
            "example": "desktop"
          },
          "deviceName": {
            "type": "string",
            "example": "some-device"
          },
          "deviceBrand": {
            "type": "string",
            "example": "some-brand"
          },
          "deviceOs": {
            "type": "string",
            "example": "windows"
          },
          "appVersion": {
            "type": "string",
            "example": "0.1"
          },
          "firstName": {
            "type": "string",
            "maxLength": 100,
            "example": "Jeffrey"
          },
          "lastName": {
            "type": "string",
            "maxLength": 100,
            "example": "Lebowski"
          },
          "email": {
            "type": "string",
            "maxLength": 200,
            "example": "depp@brooksfleet.com"
          },
          "password": {
            "type": "string",
            "maxLength": 100,
            "example": "DUDE"
          },
          "confirmPassword": {
            "type": "string",
            "maxLength": 100,
            "example": "DUDE"
          },
          "customerLanguageCode": {
            "type": "string",
            "example": "DE"
          },
          "doNotVerifyEmail": {
            "type": "boolean",
            "deprecated": true
          }
        },
        "required": [
          "deviceId",
          "firstName",
          "lastName",
          "email",
          "password",
          "confirmPassword",
          "customerLanguageCode"
        ]
      },
      "CustomerSignInInput": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "example": "jhdi-dssd-fdcv"
          },
          "pushNotificationToken": {
            "type": "string"
          },
          "deviceType": {
            "type": "string",
            "example": "desktop"
          },
          "deviceName": {
            "type": "string",
            "example": "some-device"
          },
          "deviceBrand": {
            "type": "string",
            "example": "some-brand"
          },
          "deviceOs": {
            "type": "string",
            "example": "windows"
          },
          "appVersion": {
            "type": "string",
            "example": "0.1"
          },
          "email": {
            "type": "string",
            "maxLength": 200,
            "example": "depp@brooksfleet.com"
          },
          "password": {
            "type": "string",
            "maxLength": 100,
            "example": "Depp2021*"
          }
        },
        "required": [
          "deviceId",
          "email",
          "password"
        ]
      },
      "RefreshTokenInput": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          },
          "deviceId": {
            "type": "string",
            "example": "jhdi-dssd-fdcv"
          }
        },
        "required": [
          "refreshToken",
          "deviceId"
        ]
      },
      "EmailVerifyInput": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "0012454"
          }
        },
        "required": [
          "code"
        ]
      },
      "ResetPasswordInput": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "deviceId": {
            "type": "string",
            "example": "jhdi-dssd-fdcv"
          }
        },
        "required": [
          "email",
          "deviceId"
        ]
      },
      "SetPasswordInput": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "maxLength": 100,
            "example": "4:Sp8$z6>@LHq#Pr"
          },
          "confirmPassword": {
            "type": "string",
            "maxLength": 100,
            "example": "4:Sp8$z6>@LHq#Pr"
          }
        },
        "required": [
          "password",
          "confirmPassword"
        ]
      },
      "ChangePasswordInput": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "maxLength": 100,
            "example": "d:Sdsh734dg39hs(*"
          },
          "password": {
            "type": "string",
            "maxLength": 100,
            "example": "4:Sp8$z6>@LHq#Pr"
          },
          "confirmPassword": {
            "type": "string",
            "maxLength": 100,
            "example": "4:Sp8$z6>@LHq#Pr"
          }
        },
        "required": [
          "oldPassword",
          "password",
          "confirmPassword"
        ]
      },
      "CustomerCodeVerificationInput": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "CartItemNoteDto": {
        "type": "object",
        "properties": {
          "customerNote": {
            "type": "string"
          }
        },
        "required": [
          "customerNote"
        ]
      },
      "LineItemCustomerNoteInput": {
        "type": "object",
        "properties": {
          "customerNote": {
            "type": "string",
            "maxLength": 300
          }
        },
        "required": [
          "customerNote"
        ]
      },
      "MetaDto": {
        "type": "object",
        "properties": {
          "name_i18n": {
            "type": "string",
            "description": "Multi language name"
          },
          "description_i18n": {
            "type": "string",
            "description": "Multi language description"
          },
          "code": {
            "type": "string",
            "description": "Unique code",
            "example": "EN"
          }
        },
        "required": [
          "name_i18n"
        ]
      },
      "LocationInput": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "example": 53.54971200706458
          },
          "lng": {
            "type": "number",
            "example": 9.968216616141591
          }
        },
        "required": [
          "lat",
          "lng"
        ]
      },
      "CartAddressCreateInput": {
        "type": "object",
        "properties": {
          "streets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "countryCode": {
            "type": "string",
            "example": "DE"
          },
          "city": {
            "type": "string",
            "example": "Hamburg"
          },
          "floorNumber": {
            "type": "string",
            "example": "1"
          },
          "apartmentNumber": {
            "type": "string",
            "example": "16a"
          },
          "zipCode": {
            "type": "string",
            "example": "NW1 6XE"
          },
          "state": {
            "type": "string",
            "example": "Marylebone"
          },
          "location": {
            "$ref": "#/components/schemas/LocationInput"
          }
        },
        "required": [
          "streets",
          "countryCode",
          "city",
          "zipCode",
          "location"
        ]
      },
      "ProductInput": {
        "type": "object",
        "properties": {
          "linkId": {
            "type": "string",
            "description": "linkId from productDto"
          },
          "count": {
            "type": "number",
            "example": 1,
            "description": "count = 0 removes product from cart"
          },
          "address": {
            "$ref": "#/components/schemas/CartAddressCreateInput"
          },
          "customerNote": {
            "type": "string",
            "description": "Customer note to the chosen product"
          }
        },
        "required": [
          "linkId",
          "count"
        ]
      },
      "CartInfoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "itemsCount": {
            "type": "number"
          },
          "weight": {
            "type": "string"
          },
          "maxWeight": {
            "type": "string"
          },
          "isOverload": {
            "type": "boolean"
          },
          "productsCount": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "price",
          "itemsCount",
          "weight",
          "maxWeight",
          "isOverload",
          "productsCount"
        ]
      },
      "VendorTypeEntity": {
        "type": "object",
        "properties": {
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "StoreLoyaltyProgramDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "name",
          "description"
        ]
      },
      "StoreDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "deliveryTimeInMinutes": {
            "type": "number"
          },
          "deliveryFee": {
            "type": "string"
          },
          "deliveryPrice": {
            "type": "number"
          },
          "distance": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "isPickup": {
            "type": "boolean"
          },
          "isDelivery": {
            "type": "boolean"
          },
          "isInstantDelivery": {
            "type": "boolean"
          },
          "isOnlineShipment": {
            "type": "boolean"
          },
          "logoUrl": {
            "type": "string"
          },
          "heroImgUrl": {
            "type": "string"
          },
          "promoImgUrl": {
            "type": "string"
          },
          "landingImgUrl": {
            "type": "string"
          },
          "primaryColor": {
            "type": "string"
          },
          "secondaryColor": {
            "type": "string"
          },
          "name_public_long_i18n": {
            "type": "string"
          },
          "name_public_short_i18n": {
            "type": "string"
          },
          "openingTime": {
            "type": "string"
          },
          "vendorType": {
            "$ref": "#/components/schemas/VendorTypeEntity"
          },
          "isOpen": {
            "type": "boolean"
          },
          "deliveryDate": {
            "type": "number"
          },
          "timeZone": {
            "type": "string"
          },
          "loyaltyPrograms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreLoyaltyProgramDto"
            }
          },
          "replacementAllowed": {
            "type": "boolean",
            "description": "The store have product replacement or not",
            "example": true
          },
          "isStartPickJobWithoutDriverAllowed": {
            "type": "boolean",
            "description": "Piker can start work without driver",
            "example": true
          }
        },
        "required": [
          "address",
          "id",
          "code",
          "isPickup",
          "isDelivery",
          "isInstantDelivery",
          "isOnlineShipment",
          "logoUrl",
          "name_public_long_i18n",
          "name_public_short_i18n",
          "openingTime",
          "vendorType",
          "isOpen",
          "deliveryDate",
          "timeZone"
        ]
      },
      "ReplaceTypeEnum": {
        "type": "string",
        "enum": [
          "REPLACE_OTHER_BRAND",
          "REPLACE_CHEAPER",
          "CONTACT_ME",
          "REMOVE"
        ]
      },
      "CartItemChangeTypeEnum": {
        "type": "string",
        "enum": [
          "PRICE",
          "COUNT",
          "DELETED"
        ]
      },
      "CartItemDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "linkId": {
            "type": "string"
          },
          "discount": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "salePrice": {
            "type": "string"
          },
          "regularPrice": {
            "type": "string"
          },
          "subcategoryName": {
            "type": "string"
          },
          "subcategoryCode": {
            "type": "string"
          },
          "categoryCode": {
            "type": "string"
          },
          "inCart": {
            "type": "number",
            "description": "The number of products in the user's cart"
          },
          "basePrice": {
            "type": "string"
          },
          "baseSize": {
            "type": "string"
          },
          "productSize": {
            "type": "string"
          },
          "vatPercent": {
            "type": "number"
          },
          "vat": {
            "type": "string"
          },
          "isAlcohol": {
            "type": "boolean"
          },
          "isCustomAgeRestriction": {
            "type": "boolean"
          },
          "ageRestriction": {
            "type": "number"
          },
          "isBio": {
            "type": "boolean",
            "description": "is bio product"
          },
          "isFrozen": {
            "type": "boolean",
            "description": "frozen product"
          },
          "isTobacco": {
            "type": "boolean",
            "description": "is tobacco product"
          },
          "isVegan": {
            "type": "boolean",
            "description": "is vegan product"
          },
          "isVegetarian": {
            "type": "boolean",
            "description": "is vegetarian product"
          },
          "isLactoseFree": {
            "type": "boolean",
            "description": "is Lactose Free product"
          },
          "isGlutenFree": {
            "type": "boolean",
            "description": "is Gluten Free product"
          },
          "isFairTrade": {
            "type": "boolean",
            "description": "is Fair Trade product"
          },
          "outOfStock": {
            "type": "boolean"
          },
          "cartItemId": {
            "type": "string"
          },
          "cartId": {
            "type": "string"
          },
          "hasDeposit": {
            "type": "boolean"
          },
          "replaceTypeCode": {
            "nullable": true,
            "$ref": "#/components/schemas/ReplaceTypeEnum"
          },
          "totalAmount": {
            "type": "string",
            "description": "price * inCart"
          },
          "changeType": {
            "$ref": "#/components/schemas/CartItemChangeTypeEnum"
          },
          "changeText": {
            "type": "string",
            "example": "The price of the product has increased"
          },
          "customerNote": {
            "type": "string",
            "maxLength": 300
          },
          "weight": {
            "type": "number",
            "description": "Weight in grams"
          }
        },
        "required": [
          "productId",
          "linkId",
          "imageUrl",
          "name_i18n",
          "price",
          "regularPrice",
          "subcategoryName",
          "subcategoryCode",
          "categoryCode",
          "inCart",
          "basePrice",
          "baseSize",
          "productSize",
          "vatPercent",
          "vat",
          "isAlcohol",
          "isCustomAgeRestriction",
          "isBio",
          "isFrozen",
          "isTobacco",
          "outOfStock",
          "cartItemId",
          "cartId",
          "hasDeposit",
          "replaceTypeCode",
          "totalAmount",
          "customerNote",
          "weight"
        ]
      },
      "TotalVatDto": {
        "type": "object",
        "properties": {
          "vat": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "vat",
          "value"
        ]
      },
      "Iso2Enum": {
        "type": "string",
        "enum": [
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ]
      },
      "Iso3Enum": {
        "type": "string",
        "enum": [
          "AFG",
          "ALA",
          "ALB",
          "DZA",
          "ASM",
          "AND",
          "AGO",
          "AIA",
          "ATA",
          "ATG",
          "ARG",
          "ARM",
          "ABW",
          "AUS",
          "AUT",
          "AZE",
          "BHS",
          "BHR",
          "BGD",
          "BRB",
          "BLR",
          "BEL",
          "BLZ",
          "BEN",
          "BMU",
          "BTN",
          "BOL",
          "BES",
          "BIH",
          "BWA",
          "BVT",
          "BRA",
          "IOT",
          "BRN",
          "BGR",
          "BFA",
          "BDI",
          "CPV",
          "KHM",
          "CMR",
          "CAN",
          "CYM",
          "CAF",
          "TCD",
          "CHL",
          "CHN",
          "CXR",
          "CCK",
          "COL",
          "COM",
          "COG",
          "COD",
          "COK",
          "CRI",
          "CIV",
          "HRV",
          "CUB",
          "CUW",
          "CYP",
          "CZE",
          "DNK",
          "DJI",
          "DMA",
          "DOM",
          "ECU",
          "EGY",
          "SLV",
          "GNQ",
          "ERI",
          "EST",
          "SWZ",
          "ETH",
          "FLK",
          "FRO",
          "FJI",
          "FIN",
          "FRA",
          "GUF",
          "PYF",
          "ATF",
          "GAB",
          "GMB",
          "GEO",
          "DEU",
          "GHA",
          "GIB",
          "GRC",
          "GRL",
          "GRD",
          "GLP",
          "GUM",
          "GTM",
          "GGY",
          "GIN",
          "GNB",
          "GUY",
          "HTI",
          "HMD",
          "VAT",
          "HND",
          "HKG",
          "HUN",
          "ISL",
          "IND",
          "IDN",
          "IRN",
          "IRQ",
          "IRL",
          "IMN",
          "ISR",
          "ITA",
          "JAM",
          "JPN",
          "JEY",
          "JOR",
          "KAZ",
          "KEN",
          "KIR",
          "PRK",
          "KOR",
          "KWT",
          "KGZ",
          "LAO",
          "LVA",
          "LBN",
          "LSO",
          "LBR",
          "LBY",
          "LIE",
          "LTU",
          "LUX",
          "MAC",
          "MDG",
          "MWI",
          "MYS",
          "MDV",
          "MLI",
          "MLT",
          "MHL",
          "MTQ",
          "MRT",
          "MUS",
          "MYT",
          "MEX",
          "FSM",
          "MDA",
          "MCO",
          "MNG",
          "MNE",
          "MSR",
          "MAR",
          "MOZ",
          "MMR",
          "NAM",
          "NRU",
          "NPL",
          "NLD",
          "NCL",
          "NZL",
          "NIC",
          "NER",
          "NGA",
          "NIU",
          "NFK",
          "MKD",
          "MNP",
          "NOR",
          "OMN",
          "PAK",
          "PLW",
          "PSE",
          "PAN",
          "PNG",
          "PRY",
          "PER",
          "PHL",
          "PCN",
          "POL",
          "PRT",
          "PRI",
          "QAT",
          "REU",
          "ROU",
          "RUS",
          "RWA",
          "BLM",
          "SHN",
          "KNA",
          "LCA",
          "MAF",
          "SPM",
          "VCT",
          "WSM",
          "SMR",
          "STP",
          "SAU",
          "SEN",
          "SRB",
          "SYC",
          "SLE",
          "SGP",
          "SXM",
          "SVK",
          "SVN",
          "SLB",
          "SOM",
          "ZAF",
          "SGS",
          "SSD",
          "ESP",
          "LKA",
          "SDN",
          "SUR",
          "SJM",
          "SWE",
          "CHE",
          "SYR",
          "TWN",
          "TJK",
          "TZA",
          "THA",
          "TLS",
          "TGO",
          "TKL",
          "TON",
          "TTO",
          "TUN",
          "TUR",
          "TKM",
          "TCA",
          "TUV",
          "UGA",
          "UKR",
          "ARE",
          "GBR",
          "USA",
          "UMI",
          "URY",
          "UZB",
          "VUT",
          "VEN",
          "VNM",
          "VGB",
          "VIR",
          "WLF",
          "ESH",
          "YEM",
          "ZMB",
          "ZWE"
        ]
      },
      "CountryEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/Iso2Enum"
          },
          "iso2": {
            "$ref": "#/components/schemas/Iso2Enum"
          },
          "iso3": {
            "$ref": "#/components/schemas/Iso3Enum"
          }
        },
        "required": [
          "id",
          "isActive",
          "code",
          "iso2",
          "iso3"
        ]
      },
      "LocationDto": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number"
          },
          "lng": {
            "type": "number"
          }
        },
        "required": [
          "lat",
          "lng"
        ]
      },
      "AddressDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "streets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "floorNumber": {
            "type": "string"
          },
          "apartmentNumber": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/CountryEntity"
          },
          "countryCode": {
            "$ref": "#/components/schemas/Iso2Enum"
          },
          "location": {
            "$ref": "#/components/schemas/LocationDto"
          }
        },
        "required": [
          "id",
          "isActive",
          "streets",
          "zipCode",
          "city",
          "countryCode"
        ]
      },
      "CartDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "itemsCount": {
            "type": "number"
          },
          "weight": {
            "type": "string"
          },
          "maxWeight": {
            "type": "string"
          },
          "isOverload": {
            "type": "boolean"
          },
          "productsCount": {
            "type": "number"
          },
          "store": {
            "$ref": "#/components/schemas/StoreDto"
          },
          "cartCode": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemDto"
            }
          },
          "changedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemDto"
            }
          },
          "replaceTypeCode": {
            "$ref": "#/components/schemas/ReplaceTypeEnum"
          },
          "isAlcohol": {
            "type": "boolean"
          },
          "isCustomAgeRestriction": {
            "type": "boolean",
            "description": "Product need age verification"
          },
          "ageRestriction": {
            "type": "number",
            "description": "Product need age verification"
          },
          "isTobacco": {
            "type": "boolean"
          },
          "isNotForUnderage": {
            "type": "boolean"
          },
          "vatTotal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TotalVatDto"
            }
          },
          "totalDeposit": {
            "type": "string"
          },
          "subtotal": {
            "type": "string"
          },
          "totalPrice": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/AddressDto"
          }
        },
        "required": [
          "id",
          "price",
          "itemsCount",
          "weight",
          "maxWeight",
          "isOverload",
          "productsCount",
          "store",
          "cartCode",
          "items",
          "changedItems",
          "replaceTypeCode",
          "isAlcohol",
          "isCustomAgeRestriction",
          "ageRestriction",
          "isTobacco",
          "isNotForUnderage",
          "vatTotal",
          "totalDeposit",
          "subtotal",
          "totalPrice"
        ]
      },
      "CartReplaceTypeInput": {
        "type": "object",
        "properties": {
          "replaceTypeCode": {
            "nullable": true,
            "$ref": "#/components/schemas/ReplaceTypeEnum"
          }
        },
        "required": [
          "replaceTypeCode"
        ]
      },
      "CheckoutAddressInput": {
        "type": "object",
        "properties": {
          "streets": {
            "example": [
              "Baker street, o442b"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "countryCode": {
            "type": "string",
            "example": "DE"
          },
          "city": {
            "type": "string",
            "example": "Hamburg"
          },
          "floorNumber": {
            "type": "string",
            "example": "1b"
          },
          "apartmentNumber": {
            "type": "string",
            "example": "16a"
          },
          "zipCode": {
            "type": "string",
            "example": "NW1 6XE"
          },
          "state": {
            "type": "string",
            "example": "Marylebone"
          },
          "location": {
            "$ref": "#/components/schemas/LocationInput"
          }
        },
        "required": [
          "streets",
          "countryCode",
          "city",
          "zipCode",
          "location"
        ]
      },
      "DeliveryDestinationEnum": {
        "type": "string",
        "enum": [
          "HOME",
          "NEIGHBOUR"
        ]
      },
      "CheckoutInput": {
        "type": "object",
        "properties": {
          "deliveryAddress": {
            "$ref": "#/components/schemas/CheckoutAddressInput"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/CheckoutAddressInput"
          },
          "phoneCountryCode": {
            "type": "string",
            "example": "+49"
          },
          "phoneNumber": {
            "type": "string",
            "example": "905456654"
          },
          "deliveryComment": {
            "type": "string",
            "maxLength": 300
          },
          "deliveryDestination": {
            "default": "HOME",
            "$ref": "#/components/schemas/DeliveryDestinationEnum"
          },
          "messageForShopper": {
            "type": "string",
            "maxLength": 300
          },
          "deliveryDontRing": {
            "type": "boolean"
          },
          "deliveryCallMe": {
            "type": "boolean"
          },
          "deliveryLeaveAtTheDoor": {
            "type": "boolean"
          }
        },
        "required": [
          "deliveryAddress",
          "billingAddress",
          "phoneCountryCode",
          "phoneNumber",
          "deliveryDestination"
        ]
      },
      "CheckoutDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "checkoutUrl": {
            "type": "string"
          },
          "orderTransactionId": {
            "type": "string"
          }
        },
        "required": [
          "orderId",
          "checkoutUrl",
          "orderTransactionId"
        ]
      },
      "OrderStatusFilterEnum": {
        "type": "string",
        "enum": [
          "PENDING",
          "CLOSED",
          "CANCELLED"
        ]
      },
      "OrderStatusEnum": {
        "type": "string",
        "enum": [
          "NEW",
          "PAYMENT_PENDING",
          "PAYMENT_ERROR",
          "PAYMENT_EXPIRED",
          "PAID",
          "PENDING",
          "READY",
          "PICKING",
          "DELIVERY_STARTED",
          "DELIVERY",
          "SHIPMENT",
          "REJECTED",
          "COMPLETE",
          "COMPLETE_TERMINATION_REFUND",
          "COMPLETE_TERMINATION_NO_REFUND",
          "CANCELED",
          "CANCELED_NO_PRODUCT",
          "CANCELED_BY_MANAGER"
        ]
      },
      "OrderCategoryEnum": {
        "type": "string",
        "enum": [
          "INSTANT_DELIVERY",
          "PRE_ORDERED_DELIVERY",
          "ONLINE_SHIPMENT"
        ]
      },
      "OrderJobTypeEnum": {
        "type": "string",
        "enum": [
          "PICK",
          "DRIVE"
        ]
      },
      "OrderJobStatusEnum": {
        "type": "string",
        "enum": [
          "NEW",
          "ACCEPTED",
          "PROCESSING",
          "PAYMENT_PENDING",
          "PAUSED",
          "COMPLETE",
          "CANCELED"
        ]
      },
      "OrderJobDto": {
        "type": "object",
        "properties": {
          "jobType": {
            "$ref": "#/components/schemas/OrderJobTypeEnum"
          },
          "jobStatus": {
            "$ref": "#/components/schemas/OrderJobStatusEnum"
          },
          "jobNumber": {
            "type": "string"
          },
          "staffFirstName": {
            "type": "string"
          },
          "staffLastName": {
            "type": "string"
          },
          "staffNumber": {
            "type": "string",
            "description": "The number of the Staff who accepted this job"
          }
        },
        "required": [
          "jobType",
          "jobStatus",
          "jobNumber"
        ]
      },
      "OrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "store": {
            "$ref": "#/components/schemas/StoreDto"
          },
          "deliveryDate": {
            "type": "number",
            "description": "Delivery date"
          },
          "deliveryTimeFrom": {
            "type": "string",
            "description": "Delivery time from",
            "example": "10:00"
          },
          "deliveryTimeTo": {
            "type": "string",
            "description": "Expected delivery time before order is completed.\n    And actual delivery time when the order is completed",
            "example": "11:00"
          },
          "orderNumber": {
            "type": "string"
          },
          "allowCancel": {
            "type": "boolean"
          },
          "orderStatus": {
            "$ref": "#/components/schemas/OrderStatusEnum"
          },
          "totalRefund": {
            "type": "string"
          },
          "orderCategory": {
            "$ref": "#/components/schemas/OrderCategoryEnum"
          },
          "orderStatus_i18n": {
            "type": "string"
          },
          "deliveryPrice": {
            "type": "string"
          },
          "subTotal": {
            "type": "string"
          },
          "grandTotal": {
            "type": "string"
          },
          "orderDateTime": {
            "type": "number",
            "description": "unix timestamp"
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderJobDto"
            }
          },
          "hasReplacement": {
            "type": "boolean",
            "description": "True if order has product replacement"
          },
          "hasActiveReplacement": {
            "type": "boolean",
            "description": "True if order has active product replacement"
          },
          "replacementExpires": {
            "type": "number",
            "description": "Replacement expires (unix timestamp)"
          },
          "hasUpdate": {
            "type": "boolean",
            "description": "True if order has active product replacement",
            "deprecated": true
          },
          "paidAmount": {
            "type": "string",
            "description": "Amount paid by the customer"
          },
          "canBeReordered": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "store",
          "deliveryDate",
          "deliveryTimeFrom",
          "deliveryTimeTo",
          "orderNumber",
          "allowCancel",
          "orderStatus",
          "totalRefund",
          "orderCategory",
          "orderStatus_i18n",
          "deliveryPrice",
          "subTotal",
          "grandTotal",
          "orderDateTime",
          "hasReplacement",
          "hasActiveReplacement",
          "replacementExpires",
          "hasUpdate",
          "paidAmount",
          "canBeReordered"
        ]
      },
      "PageableOrderDto": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDto"
            }
          }
        },
        "required": [
          "count",
          "total",
          "page",
          "pageCount",
          "data"
        ]
      },
      "DeliveryAddressDto": {
        "type": "object",
        "properties": {
          "streets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country_name_i18n": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/LocationDto"
          },
          "state": {
            "type": "string"
          },
          "floorNumber": {
            "type": "string"
          },
          "apartmentNumber": {
            "type": "string"
          }
        },
        "required": [
          "streets",
          "zipCode",
          "city",
          "country_name_i18n",
          "location"
        ]
      },
      "OrderItemStatusEnum": {
        "type": "string",
        "enum": [
          "NEW",
          "FOUND_ALL",
          "FOUND_PARTIALLY",
          "NOT_FOUND",
          "REPLACED_ALL",
          "CANCELED"
        ]
      },
      "OrderItemDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "orderItemId": {
            "type": "string"
          },
          "linkId": {
            "type": "string"
          },
          "ean": {
            "type": "number"
          },
          "sku": {
            "type": "string"
          },
          "replaceTypeCode": {
            "$ref": "#/components/schemas/ReplaceTypeEnum"
          },
          "discount": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "subcategoryName": {
            "type": "string"
          },
          "isDeposit": {
            "type": "boolean"
          },
          "categoryName": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "quantityFound": {
            "type": "number"
          },
          "quantityRefund": {
            "type": "number"
          },
          "totalRefund": {
            "type": "string"
          },
          "basePrice": {
            "type": "string"
          },
          "baseSize": {
            "type": "string"
          },
          "productSize": {
            "type": "string"
          },
          "vatPercent": {
            "type": "number"
          },
          "totalAmount": {
            "type": "string"
          },
          "orderItemStatus": {
            "$ref": "#/components/schemas/OrderItemStatusEnum"
          },
          "weight": {
            "type": "number"
          },
          "orderTransactionNumber": {
            "type": "string"
          },
          "customerNote": {
            "type": "string"
          }
        },
        "required": [
          "orderId",
          "orderItemId",
          "linkId",
          "ean",
          "sku",
          "replaceTypeCode",
          "name_i18n",
          "price",
          "isDeposit",
          "quantity",
          "quantityFound",
          "quantityRefund",
          "totalRefund",
          "vatPercent",
          "totalAmount",
          "orderItemStatus",
          "weight",
          "orderTransactionNumber"
        ]
      },
      "OrderTransactionStatusEnum": {
        "type": "string",
        "enum": [
          "NEW",
          "PAID",
          "PICKING",
          "REPLACEMENT",
          "COMPLETE"
        ]
      },
      "DeliveryFeeDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "isRefunded": {
            "type": "boolean"
          }
        },
        "required": [
          "value",
          "isRefunded"
        ]
      },
      "OrderTransactionTypeEnum": {
        "type": "string",
        "enum": [
          "REGULAR",
          "REPLACEMENT"
        ]
      },
      "OrderTransactionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orderTransactionStatus": {
            "$ref": "#/components/schemas/OrderTransactionStatusEnum"
          },
          "orderTransactionStatusLabel": {
            "type": "string"
          },
          "orderTransactionItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          },
          "orderTransactionNumber": {
            "type": "string"
          },
          "totalAmount": {
            "type": "string"
          },
          "totalRefund": {
            "type": "string"
          },
          "isShoppingExperienceGood": {
            "type": "boolean"
          },
          "payDate": {
            "type": "number",
            "description": "Date time then order transaction was paid (unix timestamp)"
          },
          "paymentPendingTime": {
            "type": "number",
            "description": "Duration between create date and pay date (in minutes)"
          },
          "paidAmount": {
            "type": "string",
            "description": "Amount paid by the customer"
          },
          "create_date": {
            "type": "number",
            "description": "unix timestamp"
          },
          "orderTransactionVatTotal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TotalVatDto"
            }
          },
          "deliveryFee": {
            "$ref": "#/components/schemas/DeliveryFeeDto"
          },
          "totalDeposit": {
            "type": "string"
          },
          "orderTransactionWeight": {
            "type": "number",
            "description": "Total transaction weight in grams"
          },
          "checkoutUrl": {
            "type": "string",
            "description": "Checkout url"
          },
          "orderTransactionType": {
            "$ref": "#/components/schemas/OrderTransactionTypeEnum"
          },
          "orderReplacementId": {
            "type": "string"
          },
          "orderReplacementMessageReadCounter": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "orderTransactionStatus",
          "orderTransactionStatusLabel",
          "orderTransactionItems",
          "orderTransactionNumber",
          "totalAmount",
          "totalRefund",
          "isShoppingExperienceGood",
          "paidAmount",
          "create_date",
          "orderTransactionVatTotal",
          "orderTransactionWeight"
        ]
      },
      "OrderDetailsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "store": {
            "$ref": "#/components/schemas/StoreDto"
          },
          "deliveryDate": {
            "type": "number",
            "description": "Delivery date"
          },
          "deliveryTimeFrom": {
            "type": "string",
            "description": "Delivery time from",
            "example": "10:00"
          },
          "deliveryTimeTo": {
            "type": "string",
            "description": "Expected delivery time before order is completed.\n    And actual delivery time when the order is completed",
            "example": "11:00"
          },
          "orderNumber": {
            "type": "string"
          },
          "allowCancel": {
            "type": "boolean"
          },
          "orderStatus": {
            "$ref": "#/components/schemas/OrderStatusEnum"
          },
          "totalRefund": {
            "type": "string"
          },
          "orderCategory": {
            "$ref": "#/components/schemas/OrderCategoryEnum"
          },
          "orderStatus_i18n": {
            "type": "string"
          },
          "deliveryPrice": {
            "type": "string"
          },
          "subTotal": {
            "type": "string"
          },
          "grandTotal": {
            "type": "string"
          },
          "orderDateTime": {
            "type": "number",
            "description": "unix timestamp"
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderJobDto"
            }
          },
          "hasReplacement": {
            "type": "boolean",
            "description": "True if order has product replacement"
          },
          "hasActiveReplacement": {
            "type": "boolean",
            "description": "True if order has active product replacement"
          },
          "replacementExpires": {
            "type": "number",
            "description": "Replacement expires (unix timestamp)"
          },
          "hasUpdate": {
            "type": "boolean",
            "description": "True if order has active product replacement",
            "deprecated": true
          },
          "paidAmount": {
            "type": "string",
            "description": "Amount paid by the customer"
          },
          "canBeReordered": {
            "type": "boolean"
          },
          "customerName": {
            "type": "string"
          },
          "customerNumber": {
            "type": "string"
          },
          "invoiceDate": {
            "type": "number"
          },
          "invoiceNumber": {
            "type": "string"
          },
          "totalShopAmount": {
            "type": "string"
          },
          "receiptUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "receiptNumber": {
            "type": "string"
          },
          "deliveryAddress": {
            "$ref": "#/components/schemas/DeliveryAddressDto"
          },
          "deliveryAddressShort": {
            "type": "string"
          },
          "orderItems": {
            "deprecated": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          },
          "orderType": {
            "$ref": "#/components/schemas/OrderStatusEnum"
          },
          "orderWeight": {
            "type": "number",
            "description": "Total weight in grams"
          },
          "totalDeposit": {
            "type": "string"
          },
          "vatTotal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TotalVatDto"
            }
          },
          "isAlcohol": {
            "type": "boolean"
          },
          "isCustomAgeRestriction": {
            "type": "boolean",
            "description": "Product need age verification"
          },
          "ageRestriction": {
            "type": "number",
            "description": "Product need age verification"
          },
          "isTobacco": {
            "type": "boolean"
          },
          "isNotForUnderage": {
            "type": "boolean"
          },
          "isAgeVerified": {
            "type": "boolean"
          },
          "orderQuantityRequested": {
            "type": "number",
            "description": "Products quantity in customer cart"
          },
          "orderQuantityFound": {
            "type": "number",
            "description": "Products quantity found by picker"
          },
          "messageForShopper": {
            "type": "string"
          },
          "deliveryComment": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string",
            "maxLength": 6
          },
          "phoneNumber": {
            "type": "string",
            "maxLength": 15
          },
          "deliveryDistance": {
            "type": "number"
          },
          "deliveryDontRing": {
            "type": "boolean"
          },
          "deliveryCallMe": {
            "type": "boolean"
          },
          "deliveryLeaveAtTheDoor": {
            "type": "boolean"
          },
          "invoiceUrl": {
            "type": "string"
          },
          "isReplacementAllowed": {
            "type": "boolean"
          },
          "orderTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderTransactionDto"
            }
          }
        },
        "required": [
          "id",
          "store",
          "deliveryDate",
          "deliveryTimeFrom",
          "deliveryTimeTo",
          "orderNumber",
          "allowCancel",
          "orderStatus",
          "totalRefund",
          "orderCategory",
          "orderStatus_i18n",
          "deliveryPrice",
          "subTotal",
          "grandTotal",
          "orderDateTime",
          "hasReplacement",
          "hasActiveReplacement",
          "replacementExpires",
          "hasUpdate",
          "paidAmount",
          "canBeReordered",
          "customerName",
          "customerNumber",
          "deliveryAddress",
          "deliveryAddressShort",
          "orderItems",
          "orderType",
          "orderWeight",
          "vatTotal",
          "isAlcohol",
          "isCustomAgeRestriction",
          "ageRestriction",
          "isTobacco",
          "isNotForUnderage",
          "isAgeVerified",
          "orderQuantityRequested",
          "orderQuantityFound",
          "deliveryDontRing",
          "deliveryCallMe",
          "deliveryLeaveAtTheDoor",
          "isReplacementAllowed",
          "orderTransactions"
        ]
      },
      "OrderHistoryEventTypeEnum": {
        "type": "string",
        "enum": [
          "ORDER_CREATED",
          "ORDER_CANCELED_BY_CUSTOMER",
          "ORDER_CANCELED_BY_MANAGER",
          "ORDER_REFUND_BY_MANAGER",
          "ORDER_CANCELED_NO_PRODUCTS",
          "ORDER_PAID",
          "PICK_JOB_ACCEPTED",
          "DELIVERY_JOB_ACCEPTED",
          "PICK_JOB_STARTED",
          "END_OF_PICKING",
          "IN_SHOP_PAYMENT",
          "DELIVERY_JOB_STARTED",
          "CONFIRM_AGE_VERBALLY",
          "CONFIRM_AGE_VERBALLY_ISSUE",
          "CONFIRM_ID_PHOTO",
          "CONFIRM_ID_PHOTO_ISSUE",
          "VERIFY_AGE",
          "TERMINATE_ORDER_WITH_REFUND",
          "TERMINATE_ORDER_WITHOUT_REFUND",
          "DELIVERY_JOB_COMPLETE",
          "SET_PICKER_BY_MANAGER",
          "SET_DRIVER_BY_MANAGER",
          "CHANGE_DELIVERY_COMMENT",
          "CHANGE_MESSAGE_FOR_SHOPPER",
          "CHANGE_DELIVERY_ADDRESS",
          "CHANGE_BILLING_ADDRESS",
          "REPLACEMENT_CREATED",
          "REPLACEMENT_EXTENDED",
          "REPLACEMENT_EXPIRED",
          "REPLACEMENT_TERMINATED",
          "REPLACEMENT_MESSAGE_READ",
          "REPLACEMENT_COMPLETED",
          "ADD_ORDER_RECEIPT_IMAGES_BY_MANAGER",
          "REPLACEMENT_CREATED_CUSTOMER_VOICE_CALL",
          "UPDATE_ORDER_RECEIPT_IMAGES_BY_MANAGER"
        ]
      },
      "OrderEventDto": {
        "type": "object",
        "properties": {
          "eventType": {
            "$ref": "#/components/schemas/OrderHistoryEventTypeEnum"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "dateTime": {
            "type": "number"
          },
          "isCurrent": {
            "type": "boolean"
          },
          "metadata": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "eventType",
          "name_i18n",
          "dateTime",
          "isCurrent"
        ]
      },
      "OrderHistoryDto": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderEventDto"
            }
          },
          "orderNumber": {
            "type": "string"
          },
          "orderStatus": {
            "$ref": "#/components/schemas/OrderStatusEnum"
          }
        },
        "required": [
          "events",
          "orderNumber",
          "orderStatus"
        ]
      },
      "CancelInput": {
        "type": "object",
        "properties": {
          "cancelReasonCode": {
            "type": "string"
          },
          "cancelDescription": {
            "type": "string",
            "maxLength": 300
          }
        },
        "required": [
          "cancelReasonCode"
        ]
      },
      "ShoppingExperienceInput": {
        "type": "object",
        "properties": {
          "isShoppingExperienceGood": {
            "type": "boolean"
          }
        },
        "required": [
          "isShoppingExperienceGood"
        ]
      },
      "UserGroupEnum": {
        "type": "string",
        "enum": [
          "manager",
          "staff",
          "customer"
        ]
      },
      "FaqItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupEnum"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "code",
          "userGroup",
          "name",
          "description",
          "dateStart",
          "dateEnd"
        ]
      },
      "FaqTopicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FaqItemDto"
            }
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "description",
          "dateStart",
          "dateEnd",
          "items"
        ]
      },
      "ReplacementMessageReadInput": {
        "type": "object",
        "properties": {
          "orderReplacementId": {
            "type": "string"
          }
        },
        "required": [
          "orderReplacementId"
        ]
      },
      "PushNotificationSubscriptionEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "token": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupEnum"
          },
          "activeDate": {
            "type": "string"
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "token",
          "userId",
          "userGroup",
          "activeDate"
        ]
      },
      "PushNotificationSubscriptionRefreshInput": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "example": "jhdi-dssd-fdcv"
          }
        }
      },
      "OsEnum": {
        "type": "string",
        "enum": [
          "IOS",
          "ANDROID"
        ]
      },
      "RatingAppSetInput": {
        "type": "object",
        "properties": {
          "deviceOs": {
            "example": "IOS",
            "$ref": "#/components/schemas/OsEnum"
          },
          "rating": {
            "type": "number",
            "example": 5
          },
          "appVersion": {
            "type": "string",
            "example": "0.1"
          },
          "note": {
            "type": "string"
          }
        },
        "required": [
          "rating"
        ]
      },
      "RatingAppPostponementCreateInput": {
        "type": "object",
        "properties": {
          "deviceOs": {
            "example": "IOS",
            "$ref": "#/components/schemas/OsEnum"
          }
        }
      },
      "SettingsVersionStateDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "number"
          },
          "isClientVersionUpToDate": {
            "type": "boolean"
          }
        },
        "required": [
          "version"
        ]
      },
      "LangCodeEnum": {
        "type": "string",
        "enum": [
          "EN",
          "DE",
          "FR",
          "ALL"
        ]
      },
      "LanguageDto": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/LangCodeEnum"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "name_i18n",
          "description_i18n"
        ]
      },
      "OrderCancelReasonDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "name_i18n",
          "description_i18n"
        ]
      },
      "SalutationEnum": {
        "type": "string",
        "enum": [
          "MR",
          "MRS",
          "MS",
          "MISS",
          "DR",
          "SR",
          "PROF"
        ]
      },
      "CustomerProfileDto": {
        "type": "object",
        "properties": {
          "customerLanguageCode": {
            "type": "string"
          },
          "customerNumber": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "inviteCode": {
            "type": "string"
          },
          "isPhoneNumberVerified": {
            "type": "boolean"
          },
          "isEmailVerified": {
            "type": "boolean"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "salutation": {
            "$ref": "#/components/schemas/SalutationEnum"
          },
          "nationalityCode": {
            "type": "string"
          }
        },
        "required": [
          "customerLanguageCode",
          "customerNumber",
          "email",
          "firstName",
          "isPhoneNumberVerified",
          "isEmailVerified",
          "lastName"
        ]
      },
      "ProfilePhoneNumberUpdateInput": {
        "type": "object",
        "properties": {
          "phoneCountryCode": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        },
        "required": [
          "phoneCountryCode",
          "phoneNumber"
        ]
      },
      "ProfileUpdateInput": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 200,
            "example": "Depp@brooksfleet.com"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "1980-01-25"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "nationalityCode": {
            "type": "string"
          },
          "customerLanguageCode": {
            "type": "string"
          },
          "inviteCode": {
            "type": "string"
          },
          "salutation": {
            "$ref": "#/components/schemas/SalutationEnum"
          }
        },
        "required": [
          "phoneCountryCode",
          "phoneNumber"
        ]
      },
      "AddressTypeEnum": {
        "type": "string",
        "enum": [
          "DELIVERY",
          "BILLING"
        ]
      },
      "CustomerAddressDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "streets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "floorNumber": {
            "type": "string"
          },
          "apartmentNumber": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/CountryEntity"
          },
          "countryCode": {
            "$ref": "#/components/schemas/Iso2Enum"
          },
          "location": {
            "$ref": "#/components/schemas/LocationDto"
          },
          "addressName": {
            "type": "string",
            "example": "Home"
          },
          "addressType": {
            "$ref": "#/components/schemas/AddressTypeEnum"
          },
          "customerId": {
            "type": "string"
          },
          "isDefault": {
            "type": "string"
          },
          "deliveryComment": {
            "type": "string",
            "maxLength": 300
          }
        },
        "required": [
          "id",
          "isActive",
          "streets",
          "zipCode",
          "city",
          "countryCode",
          "addressName",
          "addressType",
          "customerId",
          "isDefault"
        ]
      },
      "AddressCreateInput": {
        "type": "object",
        "properties": {
          "addressName": {
            "type": "string",
            "example": "Home"
          },
          "addressType": {
            "$ref": "#/components/schemas/AddressTypeEnum"
          },
          "streets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "countryCode": {
            "type": "string",
            "example": "DE"
          },
          "city": {
            "type": "string",
            "example": "Hamburg"
          },
          "floorNumber": {
            "type": "string",
            "example": "1"
          },
          "apartmentNumber": {
            "type": "string",
            "example": "16a"
          },
          "zipCode": {
            "type": "string",
            "example": "NW1 6XE"
          },
          "state": {
            "type": "string",
            "example": "Marylebone"
          },
          "location": {
            "$ref": "#/components/schemas/LocationInput"
          },
          "isDefault": {
            "type": "boolean"
          },
          "deliveryComment": {
            "type": "string",
            "maxLength": 300
          }
        },
        "required": [
          "addressName",
          "addressType",
          "streets",
          "countryCode",
          "city",
          "zipCode",
          "location"
        ]
      },
      "AddressUpdateInput": {
        "type": "object",
        "properties": {
          "addressName": {
            "type": "string",
            "example": "Home"
          },
          "addressType": {
            "type": "string",
            "enum": [
              "DELIVERY",
              "BILLING"
            ]
          },
          "streets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "countryCode": {
            "type": "string"
          },
          "city": {
            "type": "string",
            "example": "Hamburg"
          },
          "floorNumber": {
            "type": "string",
            "example": "1"
          },
          "apartmentNumber": {
            "type": "string",
            "example": "16a"
          },
          "zipCode": {
            "type": "string",
            "example": "NW1 6XE"
          },
          "state": {
            "type": "string",
            "example": "Marylebone"
          },
          "location": {
            "$ref": "#/components/schemas/LocationInput"
          },
          "isDefault": {
            "type": "boolean"
          },
          "deliveryComment": {
            "type": "string",
            "maxLength": 300
          }
        },
        "required": [
          "city"
        ]
      },
      "NotificationSettingsDto": {
        "type": "object",
        "properties": {
          "newProductArrivals": {
            "type": "boolean"
          },
          "sales": {
            "type": "boolean"
          },
          "deliveryStatusChange": {
            "type": "boolean"
          }
        },
        "required": [
          "newProductArrivals",
          "sales",
          "deliveryStatusChange"
        ]
      },
      "NotificationSettingsInput": {
        "type": "object",
        "properties": {
          "newProductArrivals": {
            "type": "boolean"
          },
          "sales": {
            "type": "boolean"
          },
          "deliveryStatusChange": {
            "type": "boolean"
          }
        },
        "required": [
          "newProductArrivals",
          "sales",
          "deliveryStatusChange"
        ]
      },
      "OrderItemNoteDto": {
        "type": "object",
        "properties": {
          "customerNote": {
            "type": "string"
          }
        },
        "required": [
          "customerNote"
        ]
      },
      "OrderReplacementItemStatusEnum": {
        "type": "string",
        "enum": [
          "REVIEW",
          "DONE",
          "REMOVED",
          "REPLACEMENT",
          "NEW"
        ]
      },
      "OrderReplacementItemDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "linkId": {
            "type": "string"
          },
          "ean": {
            "type": "number"
          },
          "imageUrl": {
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "subcategoryName": {
            "type": "string"
          },
          "subcategoryCode": {
            "type": "string"
          },
          "isDeposit": {
            "type": "boolean"
          },
          "categoryName": {
            "type": "string"
          },
          "categoryCode": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "description": "Quantity requested in current order replacement"
          },
          "replacementQuantityRequested": {
            "type": "number",
            "description": "Quantity requested in previous order transaction"
          },
          "replacementQuantityFound": {
            "type": "number",
            "description": "Quantity found in previous order transaction"
          },
          "basePrice": {
            "type": "string"
          },
          "baseSize": {
            "type": "string"
          },
          "productSize": {
            "type": "string"
          },
          "vatPercent": {
            "type": "number"
          },
          "totalAmount": {
            "type": "string"
          },
          "totalRefund": {
            "type": "string"
          },
          "weight": {
            "type": "number"
          },
          "orderReplacementItemStatus": {
            "$ref": "#/components/schemas/OrderReplacementItemStatusEnum"
          },
          "parentId": {
            "type": "string"
          }
        },
        "required": [
          "orderId",
          "id",
          "linkId",
          "ean",
          "imageUrl",
          "name_i18n",
          "price",
          "subcategoryName",
          "subcategoryCode",
          "categoryName",
          "categoryCode",
          "quantity",
          "replacementQuantityRequested",
          "replacementQuantityFound",
          "basePrice",
          "baseSize",
          "productSize",
          "vatPercent",
          "totalAmount",
          "totalRefund",
          "weight",
          "orderReplacementItemStatus"
        ]
      },
      "OrderReplacementStatusEnum": {
        "type": "string",
        "enum": [
          "PENDING",
          "PICKING",
          "COMPLETE",
          "TERMINATED_BY_CUSTOMER",
          "TERMINATED_BY_STAFF",
          "TERMINATED_BY_MANAGER",
          "EXPIRED"
        ]
      },
      "OrderReplacementDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "storeId": {
            "type": "string"
          },
          "create_date": {
            "type": "number",
            "description": "Replacement create date (unix timestamp)"
          },
          "payDate": {
            "type": "number",
            "description": "Date time then order transaction was paid (unix timestamp)"
          },
          "paymentPendingTime": {
            "type": "number",
            "description": "Duration between create date and pay date (in minutes)"
          },
          "expires": {
            "type": "number",
            "description": "Replacement expires (unix timestamp)"
          },
          "attemptsLeft": {
            "type": "number"
          },
          "messageReadDate": {
            "type": "string"
          },
          "messageReadCounter": {
            "type": "number"
          },
          "price": {
            "type": "string"
          },
          "weight": {
            "type": "string",
            "description": "Current weight for this replacement"
          },
          "maxWeight": {
            "type": "string",
            "description": "Max allowed weight for this replacement"
          },
          "isOverload": {
            "type": "boolean"
          },
          "replacementItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderReplacementItemDto"
            }
          },
          "totalPlannedRefund": {
            "type": "string",
            "description": "Total refund for the last transaction to be refunded when the order is completed"
          },
          "itemsCount": {
            "type": "number"
          },
          "productsCount": {
            "type": "number"
          },
          "orderReplacementStatus": {
            "$ref": "#/components/schemas/OrderReplacementStatusEnum"
          },
          "orderReplacementNumber": {
            "type": "string"
          },
          "isAlcohol": {
            "type": "boolean"
          },
          "isTobacco": {
            "type": "boolean"
          },
          "isNotForUnderage": {
            "type": "boolean"
          },
          "vatTotal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TotalVatDto"
            }
          },
          "totalDeposit": {
            "type": "string"
          },
          "subtotal": {
            "type": "string"
          },
          "totalPrice": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "storeId",
          "create_date",
          "expires",
          "attemptsLeft",
          "messageReadCounter",
          "price",
          "weight",
          "maxWeight",
          "isOverload",
          "replacementItems",
          "totalPlannedRefund",
          "itemsCount",
          "productsCount",
          "orderReplacementStatus",
          "orderReplacementNumber",
          "isAlcohol",
          "isTobacco",
          "isNotForUnderage",
          "vatTotal",
          "totalDeposit",
          "subtotal",
          "totalPrice"
        ]
      },
      "ProductReplaceInput": {
        "type": "object",
        "properties": {
          "productLinkId": {
            "type": "string"
          },
          "count": {
            "type": "number",
            "example": 1,
            "minimum": 0
          },
          "itemId": {
            "type": "string"
          }
        },
        "required": [
          "productLinkId",
          "count"
        ]
      },
      "ProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "linkId": {
            "type": "string"
          },
          "discount": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "salePrice": {
            "type": "string"
          },
          "regularPrice": {
            "type": "string"
          },
          "subcategoryName": {
            "type": "string"
          },
          "subcategoryCode": {
            "type": "string"
          },
          "categoryCode": {
            "type": "string"
          },
          "inCart": {
            "type": "number",
            "description": "The number of products in the user's cart"
          },
          "basePrice": {
            "type": "string"
          },
          "baseSize": {
            "type": "string"
          },
          "productSize": {
            "type": "string"
          },
          "vatPercent": {
            "type": "number"
          },
          "vat": {
            "type": "string"
          },
          "isAlcohol": {
            "type": "boolean"
          },
          "isCustomAgeRestriction": {
            "type": "boolean"
          },
          "ageRestriction": {
            "type": "number"
          },
          "isBio": {
            "type": "boolean",
            "description": "is bio product"
          },
          "isFrozen": {
            "type": "boolean",
            "description": "frozen product"
          },
          "isTobacco": {
            "type": "boolean",
            "description": "is tobacco product"
          },
          "isVegan": {
            "type": "boolean",
            "description": "is vegan product"
          },
          "isVegetarian": {
            "type": "boolean",
            "description": "is vegetarian product"
          },
          "isLactoseFree": {
            "type": "boolean",
            "description": "is Lactose Free product"
          },
          "isGlutenFree": {
            "type": "boolean",
            "description": "is Gluten Free product"
          },
          "isFairTrade": {
            "type": "boolean",
            "description": "is Fair Trade product"
          },
          "outOfStock": {
            "type": "boolean"
          }
        },
        "required": [
          "productId",
          "linkId",
          "imageUrl",
          "name_i18n",
          "price",
          "regularPrice",
          "subcategoryName",
          "subcategoryCode",
          "categoryCode",
          "inCart",
          "basePrice",
          "baseSize",
          "productSize",
          "vatPercent",
          "vat",
          "isAlcohol",
          "isCustomAgeRestriction",
          "outOfStock"
        ]
      },
      "PageableProductDto": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          },
          "categoryCode": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          }
        },
        "required": [
          "count",
          "total",
          "page",
          "pageCount",
          "categoryCode",
          "data"
        ]
      },
      "ActiveOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orderNumber": {
            "type": "string"
          },
          "hasReplacement": {
            "type": "boolean",
            "description": "True if order has product replacement"
          },
          "hasActiveReplacement": {
            "type": "boolean",
            "description": "True if order has active product replacement"
          },
          "replacementExpires": {
            "type": "number",
            "description": "Replacement expires (unix timestamp)"
          }
        },
        "required": [
          "id",
          "orderNumber",
          "hasReplacement",
          "hasActiveReplacement",
          "replacementExpires"
        ]
      },
      "PageableActiveOrderDto": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActiveOrderDto"
            }
          }
        },
        "required": [
          "count",
          "total",
          "page",
          "pageCount",
          "data"
        ]
      },
      "CreateCartFromOrderInput": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          }
        },
        "required": [
          "orderId"
        ]
      },
      "CustomerRoleEnum": {
        "type": "string",
        "enum": [
          "GUEST",
          "CUSTOMER"
        ]
      },
      "CustomerAddressEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "streets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "floorNumber": {
            "type": "string"
          },
          "apartmentNumber": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/CountryEntity"
          },
          "countryCode": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/LocationDto"
          },
          "addressName": {
            "type": "string",
            "example": "Home"
          },
          "addressType": {
            "$ref": "#/components/schemas/AddressTypeEnum"
          },
          "customerId": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "deliveryComment": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive",
          "streets",
          "addressName",
          "addressType"
        ]
      },
      "CorporateEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "StoreBrandEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "corporate": {
            "$ref": "#/components/schemas/CorporateEntity"
          },
          "corporateCode": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "StoreRegionEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "countryCode": {
            "$ref": "#/components/schemas/Iso2Enum"
          }
        },
        "required": [
          "id",
          "isActive",
          "countryCode"
        ]
      },
      "StoreAddressEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "streets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "floorNumber": {
            "type": "string"
          },
          "apartmentNumber": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/CountryEntity"
          },
          "countryCode": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/LocationDto"
          },
          "gln": {
            "type": "string",
            "description": "Global location number"
          },
          "addressType": {
            "type": "string",
            "enum": [
              "MAIN",
              "SECONDARY",
              "WAREHOUSE",
              "OTHER"
            ]
          },
          "storeId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive",
          "streets",
          "addressType"
        ]
      },
      "StoreContactTypeEnum": {
        "type": "string",
        "enum": [
          "MANAGER",
          "SUPERVISOR",
          "OTHER"
        ]
      },
      "StoreContactEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "maxLength": 100
          },
          "lastName": {
            "type": "string",
            "maxLength": 100
          },
          "salutation": {
            "$ref": "#/components/schemas/SalutationEnum"
          },
          "contactType": {
            "$ref": "#/components/schemas/StoreContactTypeEnum"
          },
          "email": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string",
            "maxLength": 6
          },
          "phoneNumber": {
            "type": "string",
            "maxLength": 15
          },
          "store": {
            "$ref": "#/components/schemas/StoreEntity"
          },
          "storeId": {
            "type": "string"
          },
          "streets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/CountryEntity"
          },
          "countryCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive",
          "salutation"
        ]
      },
      "StoreClosingDayEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          },
          "store": {
            "$ref": "#/components/schemas/StoreEntity"
          },
          "storeId": {
            "type": "string"
          },
          "note": {
            "type": "string",
            "maxLength": 300
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "DayOfWeekEnum": {
        "type": "string",
        "enum": [
          "MON",
          "TUE",
          "WED",
          "THU",
          "FRI",
          "SAT",
          "SUN"
        ]
      },
      "StoreOpeningHourEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "timeStart": {
            "type": "string"
          },
          "timeEnd": {
            "type": "string"
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          },
          "store": {
            "$ref": "#/components/schemas/StoreEntity"
          },
          "storeId": {
            "type": "string"
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeekEnum"
            }
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "StoreWeightOptionEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "timeStart": {
            "type": "string"
          },
          "timeEnd": {
            "type": "string"
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          },
          "weightValue": {
            "type": "number"
          },
          "storeId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive",
          "weightValue",
          "storeId"
        ]
      },
      "StoreDeliveryZoneEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/CountryEntity"
          },
          "countryCode": {
            "type": "string"
          },
          "storeId": {
            "type": "string"
          },
          "deliveryTime": {
            "type": "number"
          },
          "defaultFee": {
            "type": "number",
            "description": "Default fee for this zone",
            "example": 4.25
          },
          "isInstantDelivery": {
            "type": "boolean"
          },
          "zipCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "StoreSocialMediaEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "accountType": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "storeId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive",
          "accountType",
          "account",
          "storeId"
        ]
      },
      "StoreDeliveryTimeEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "timeStart": {
            "type": "string"
          },
          "timeEnd": {
            "type": "string"
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          },
          "storeId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive",
          "storeId"
        ]
      },
      "VatEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "example": 0
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "CurrencyCodeEnum": {
        "type": "string",
        "enum": [
          "USD",
          "EUR",
          "NOK",
          "DKK"
        ]
      },
      "CurrencyEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/CurrencyCodeEnum"
          },
          "symbol": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "VendorCategoryEntity": {
        "type": "object",
        "properties": {
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "ProductSubcategoryEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/ProductCategoryEntity"
          },
          "categoryCode": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "slug": {
            "type": "string",
            "description": "Unique identifying part of a web address"
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "ProductCategoryEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "subcategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSubcategoryEntity"
            }
          },
          "vendorCategory": {
            "$ref": "#/components/schemas/VendorCategoryEntity"
          },
          "vendorCategoryCode": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "slug": {
            "type": "string",
            "description": "Unique identifying part of a web address"
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "StaffRoleEnum": {
        "type": "string",
        "enum": [
          "UNASSIGNED",
          "DRIVER",
          "PICKER",
          "PICKER_DRIVER"
        ]
      },
      "Iso15897Enum": {
        "type": "string",
        "enum": [
          "en_US",
          "nl_NL",
          "nl_BE",
          "fr_FR",
          "fr_BE",
          "de_DE",
          "de_AT",
          "de_CH",
          "es_ES",
          "ca_ES",
          "pt_PT",
          "it_IT",
          "nb_NO",
          "sv_SE",
          "fi_FI",
          "da_DK",
          "is_IS",
          "hu_HU",
          "pl_PL",
          "lv_LV",
          "lt_LT"
        ]
      },
      "LanguageEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/LangCodeEnum"
          },
          "locale": {
            "$ref": "#/components/schemas/Iso15897Enum"
          },
          "isPrimary": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "NationalityEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "adjectiveNationality_i18n": {
            "type": "string"
          },
          "nounNationality_i18n": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive",
          "adjectiveNationality_i18n",
          "nounNationality_i18n"
        ]
      },
      "StaffSettingsEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "staffLanguage": {
            "$ref": "#/components/schemas/LanguageEntity"
          },
          "staffLanguageCode": {
            "$ref": "#/components/schemas/LangCodeEnum"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "staffNumber": {
            "type": "string",
            "maxLength": 200
          },
          "nationality": {
            "$ref": "#/components/schemas/NationalityEntity"
          },
          "nationalityCode": {
            "type": "string"
          },
          "salutation": {
            "$ref": "#/components/schemas/SalutationEnum"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "allowAssociateJobs": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "isActive",
          "staffLanguageCode",
          "allowAssociateJobs"
        ]
      },
      "StaffEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "tempPassword": {
            "type": "string"
          },
          "forgotDateTime": {
            "type": "string"
          },
          "rightToBeForgotten": {
            "type": "boolean"
          },
          "forgotUrl": {
            "type": "string"
          },
          "isEmailVerified": {
            "type": "boolean"
          },
          "isTermsAndConditionsAgreed": {
            "type": "boolean"
          },
          "lastLoginDate": {
            "type": "string"
          },
          "isOnline": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "settingsId": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/StaffRoleEnum"
          },
          "settings": {
            "$ref": "#/components/schemas/StaffSettingsEntity"
          },
          "storesBound": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "isActive",
          "email",
          "password",
          "tempPassword",
          "forgotDateTime",
          "rightToBeForgotten",
          "forgotUrl",
          "isEmailVerified",
          "isTermsAndConditionsAgreed",
          "lastLoginDate",
          "isOnline",
          "note",
          "appVersion",
          "role"
        ]
      },
      "StoreStaffBoundEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "storeId": {
            "type": "string"
          },
          "staffId": {
            "type": "string"
          },
          "staff": {
            "$ref": "#/components/schemas/StaffEntity"
          },
          "store": {
            "$ref": "#/components/schemas/StoreEntity"
          }
        },
        "required": [
          "id",
          "isActive",
          "storeId",
          "staffId"
        ]
      },
      "StoreStaffRestrictionEnum": {
        "type": "string",
        "enum": [
          "FREELANCE_ONLY",
          "BOUND_ONLY",
          "BOUND_AND_FREELANCE"
        ]
      },
      "StoreEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name_public_short_i18n": {
            "type": "string"
          },
          "name_public_long_i18n": {
            "type": "string"
          },
          "storeBrand": {
            "$ref": "#/components/schemas/StoreBrandEntity"
          },
          "storeBrandCode": {
            "type": "string"
          },
          "corporate": {
            "$ref": "#/components/schemas/CorporateEntity"
          },
          "corporateCode": {
            "type": "string"
          },
          "region": {
            "$ref": "#/components/schemas/StoreRegionEntity"
          },
          "storeRegionCode": {
            "type": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreAddressEntity"
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreContactEntity"
            }
          },
          "closingDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreClosingDayEntity"
            }
          },
          "openingHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreOpeningHourEntity"
            }
          },
          "storeWeights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreWeightOptionEntity"
            }
          },
          "deliveryZones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreDeliveryZoneEntity"
            }
          },
          "socialMedia": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreSocialMediaEntity"
            }
          },
          "deliveryTime": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreDeliveryTimeEntity"
            }
          },
          "logoUrl": {
            "type": "string"
          },
          "heroImgUrl": {
            "type": "string"
          },
          "promoImgUrl": {
            "type": "string"
          },
          "landingImgUrl": {
            "type": "string"
          },
          "primaryColor": {
            "type": "string"
          },
          "secondaryColor": {
            "type": "string"
          },
          "isPickup": {
            "type": "boolean"
          },
          "isDelivery": {
            "type": "boolean"
          },
          "isOnlineShipment": {
            "type": "boolean"
          },
          "deliveryFeeVat": {
            "$ref": "#/components/schemas/VatEntity"
          },
          "deliveryFeeVatCode": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyEntity"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCodeEnum"
          },
          "vendorType": {
            "$ref": "#/components/schemas/VendorTypeEntity"
          },
          "vendorTypeCode": {
            "type": "string"
          },
          "vendorCategory": {
            "$ref": "#/components/schemas/VendorCategoryEntity"
          },
          "vendorCategoryCode": {
            "type": "string"
          },
          "productOutOfStockTime": {
            "type": "number",
            "description": "Product out out stock time, hours",
            "example": 24
          },
          "productLink": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryEntity"
            }
          },
          "subcategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSubcategoryEntity"
            }
          },
          "staffBound": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreStaffBoundEntity"
            }
          },
          "slug": {
            "type": "string",
            "description": "Unique identifying part of a web address"
          },
          "isStartPickJobWithoutDriverAllowed": {
            "type": "boolean",
            "description": "Piker can start work without driver",
            "default": false
          },
          "pickerRestriction": {
            "example": "FREELANCE_ONLY",
            "$ref": "#/components/schemas/StoreStaffRestrictionEnum"
          },
          "driverRestriction": {
            "example": "FREELANCE_ONLY",
            "$ref": "#/components/schemas/StoreStaffRestrictionEnum"
          },
          "replacementMaxTime": {
            "type": "number",
            "description": "Maximum waiting time for a customer`s response (in seconds) on product replacement",
            "example": 600
          },
          "replacementMaxAttempts": {
            "type": "number",
            "description": "Maximum attempts on product replacement",
            "example": 5
          },
          "timeZone": {
            "type": "string",
            "example": "Europe/Berlin"
          },
          "externalCode": {
            "type": "string",
            "description": "This code is meant to be used to share data between bringoo and partner.",
            "example": "ExternalCode"
          },
          "replacementAllowed": {
            "type": "boolean",
            "description": "The store have product replacement or not.",
            "example": true
          }
        },
        "required": [
          "id",
          "isActive",
          "name_public_short_i18n",
          "name_public_long_i18n",
          "pickerRestriction",
          "driverRestriction",
          "timeZone"
        ]
      },
      "CartAddressEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "streets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "floorNumber": {
            "type": "string"
          },
          "apartmentNumber": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/CountryEntity"
          },
          "countryCode": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/LocationDto"
          },
          "cartId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive",
          "streets"
        ]
      },
      "ProductBrandEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "ProductUnitCodeEnum": {
        "type": "string",
        "enum": [
          "GRAM",
          "KILOGRAM",
          "METER",
          "CENTIMETER",
          "LITER",
          "MILLILITER",
          "ITEM"
        ]
      },
      "ProductUnitEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/ProductUnitCodeEnum"
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "NutriScoreEnum": {
        "type": "string",
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "UNKNOWN"
        ]
      },
      "ProductDepositEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "itemDepositValueGross": {
            "type": "number",
            "example": 3.55
          },
          "itemDepositValueNet": {
            "type": "number",
            "example": 3.55
          },
          "itemDepositVatValue": {
            "type": "number",
            "example": 3.55
          },
          "boxDepositValueGross": {
            "type": "number",
            "example": 3.55
          },
          "boxDepositValueNet": {
            "type": "number",
            "example": 3.55
          },
          "boxDepositVatValue": {
            "type": "number",
            "example": 3.55
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "NutritionalDataDto": {
        "type": "object",
        "properties": {
          "energyTotal": {
            "type": "number",
            "description": "total energy in kj"
          },
          "calories": {
            "type": "number",
            "description": "Calories per 100 g"
          },
          "fatTotal": {
            "type": "number",
            "description": "Total fat in g"
          },
          "fatSaturates": {
            "type": "number",
            "description": "Fat saturates in g"
          },
          "carbohydrateTotal": {
            "type": "number",
            "description": "Carbohydrate Total in g"
          },
          "carbohydrateSugars": {
            "type": "number",
            "description": "Carbohydrate sugars in g"
          },
          "fibres": {
            "type": "number",
            "description": "Fibres in g"
          },
          "protein": {
            "type": "number",
            "description": "Protein in g"
          },
          "salt": {
            "type": "number",
            "description": "Salt in g"
          }
        },
        "required": [
          "energyTotal",
          "calories",
          "fatTotal",
          "fatSaturates",
          "carbohydrateTotal",
          "carbohydrateSugars",
          "fibres",
          "protein",
          "salt"
        ]
      },
      "ProductEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "note_internal": {
            "type": "string"
          },
          "note_external": {
            "type": "string"
          },
          "gtin": {
            "type": "string",
            "description": "Global Trade Item Number"
          },
          "metaData": {
            "type": "string"
          },
          "sku": {
            "type": "string",
            "description": "Stock Keeping Unit"
          },
          "ean": {
            "type": "number",
            "description": "European Article Number"
          },
          "slug": {
            "type": "string",
            "description": "Unique identifying part of a web address"
          },
          "isAlcohol": {
            "type": "boolean",
            "description": "Is alcoholic drink"
          },
          "isCustomAgeRestriction": {
            "type": "boolean",
            "description": "Product need age verification"
          },
          "ageRestriction": {
            "type": "number",
            "description": "Age Restriction"
          },
          "alcoholValue": {
            "type": "number",
            "description": "Alcohol value",
            "example": 4.25
          },
          "isApproved": {
            "type": "boolean",
            "description": "Approved to be published"
          },
          "isPublic": {
            "type": "boolean",
            "description": "visible on backend"
          },
          "isBio": {
            "type": "boolean"
          },
          "isFrozen": {
            "type": "boolean"
          },
          "isTobacco": {
            "type": "boolean"
          },
          "isVegan": {
            "type": "boolean"
          },
          "isVegetarian": {
            "type": "boolean"
          },
          "isLactoseFree": {
            "type": "boolean"
          },
          "isGlutenFree": {
            "type": "boolean"
          },
          "isFairTrade": {
            "type": "boolean"
          },
          "isPublicDateTime": {
            "type": "string",
            "description": "visible from"
          },
          "isPickup": {
            "type": "boolean",
            "default": true
          },
          "isPickAndDrive": {
            "type": "boolean",
            "default": true
          },
          "isOnlineShipment": {
            "type": "boolean",
            "default": true
          },
          "productBrand": {
            "$ref": "#/components/schemas/ProductBrandEntity"
          },
          "productBrandCode": {
            "type": "string"
          },
          "subcategory": {
            "$ref": "#/components/schemas/ProductSubcategoryEntity"
          },
          "productSubcategoryCode": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/ProductCategoryEntity"
          },
          "productCategoryCode": {
            "type": "string"
          },
          "productIngredients": {
            "type": "string"
          },
          "imageUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "weight": {
            "type": "number"
          },
          "productUnit": {
            "$ref": "#/components/schemas/ProductUnitEntity"
          },
          "productUnitCode": {
            "$ref": "#/components/schemas/ProductUnitCodeEnum"
          },
          "nutriScore": {
            "default": "UNKNOWN",
            "$ref": "#/components/schemas/NutriScoreEnum"
          },
          "baseUnitCode": {
            "$ref": "#/components/schemas/ProductUnitCodeEnum"
          },
          "baseUnit": {
            "$ref": "#/components/schemas/ProductUnitEntity"
          },
          "productMeasurement": {
            "type": "number"
          },
          "baseMeasurement": {
            "type": "number"
          },
          "defaultPrice": {
            "type": "number",
            "description": "Default product price",
            "example": 4.25
          },
          "costPrice": {
            "type": "number",
            "description": "Cost product price",
            "example": 4.25
          },
          "chargeTax": {
            "type": "boolean",
            "description": "Charge tax on this product"
          },
          "productLink": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductLinkEntity"
            }
          },
          "deposit": {
            "$ref": "#/components/schemas/ProductDepositEntity"
          },
          "depositId": {
            "type": "string"
          },
          "vat": {
            "$ref": "#/components/schemas/VatEntity"
          },
          "vatCode": {
            "type": "string"
          },
          "productVatPercent": {
            "type": "number"
          },
          "productValueGross": {
            "type": "number",
            "example": 3.55
          },
          "productValueNet": {
            "type": "number",
            "example": 3.55
          },
          "productVatValue": {
            "type": "number",
            "example": 3.55
          },
          "basePriceCoefficient": {
            "type": "number",
            "example": 3.55
          },
          "tags_i18n": {
            "type": "string"
          },
          "noImage": {
            "type": "boolean",
            "description": "Image not found"
          },
          "manufacturer_i18n": {
            "type": "string"
          },
          "nutritional_data": {
            "$ref": "#/components/schemas/NutritionalDataDto"
          },
          "ingredients_i18n": {
            "type": "string"
          },
          "special_notes_i18n": {
            "type": "string"
          },
          "allergenic_information_i18n": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive",
          "productUnitCode",
          "baseUnitCode"
        ]
      },
      "PriceTypeEnum": {
        "type": "string",
        "enum": [
          "REGULAR",
          "SALE"
        ]
      },
      "ProductPriceEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "productLink": {
            "$ref": "#/components/schemas/ProductLinkEntity"
          },
          "productLinkId": {
            "type": "string"
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "description": "Price",
            "example": 4.25
          },
          "vat": {
            "$ref": "#/components/schemas/VatEntity"
          },
          "vatCode": {
            "type": "string"
          },
          "productVatPercent": {
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "productValueGross": {
            "type": "number",
            "example": 3.55
          },
          "productValueNet": {
            "type": "number",
            "example": 3.55
          },
          "productVatValue": {
            "type": "number",
            "example": 3.55
          },
          "type": {
            "$ref": "#/components/schemas/PriceTypeEnum"
          }
        },
        "required": [
          "id",
          "isActive",
          "productValueGross",
          "productValueNet",
          "productVatValue"
        ]
      },
      "UserRoleEnum": {
        "type": "string",
        "enum": [
          "manager",
          "staff",
          "customer"
        ]
      },
      "OutOfStockEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "productLink": {
            "$ref": "#/components/schemas/ProductLinkEntity"
          },
          "productLinkId": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string"
          },
          "comment": {
            "type": "string",
            "description": "Comment"
          },
          "creatorRole": {
            "$ref": "#/components/schemas/UserRoleEnum"
          },
          "creatorId": {
            "type": "string"
          },
          "finderId": {
            "type": "string",
            "description": "Id of picker who found product"
          }
        },
        "required": [
          "id",
          "isActive",
          "startDateTime",
          "endDateTime"
        ]
      },
      "ProductLinkEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/ProductEntity"
          },
          "productId": {
            "type": "string"
          },
          "store": {
            "$ref": "#/components/schemas/StoreEntity"
          },
          "storeId": {
            "type": "string"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPriceEntity"
            }
          },
          "outStocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutOfStockEntity"
            }
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "CartItemEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "productLink": {
            "$ref": "#/components/schemas/ProductLinkEntity"
          },
          "productLinkId": {
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "category_name_i18n": {
            "type": "string"
          },
          "categoryCode": {
            "type": "string"
          },
          "subcategory_name_i18n": {
            "type": "string"
          },
          "subcategoryCode": {
            "type": "string"
          },
          "imageUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "productVatPercent": {
            "type": "number",
            "description": "One Item VAT %",
            "example": 17
          },
          "productVatValue": {
            "type": "number",
            "description": "One Item Vat Value",
            "example": 4.25
          },
          "weight": {
            "type": "number",
            "description": "One Item weight in gramms",
            "example": 500
          },
          "isAlcohol": {
            "type": "boolean",
            "description": "Is alcoholic drink"
          },
          "isCustomAgeRestriction": {
            "type": "boolean",
            "description": "Product need age verification"
          },
          "ageRestriction": {
            "type": "number",
            "description": "Age Restriction"
          },
          "isBio": {
            "type": "boolean"
          },
          "isFrozen": {
            "type": "boolean"
          },
          "isTobacco": {
            "type": "boolean"
          },
          "isVegan": {
            "type": "boolean"
          },
          "isVegetarian": {
            "type": "boolean"
          },
          "isLactoseFree": {
            "type": "boolean"
          },
          "isGlutenFree": {
            "type": "boolean"
          },
          "isFairTrade": {
            "type": "boolean"
          },
          "alcoholValue": {
            "type": "number",
            "description": "Alcohol value",
            "example": 5.5
          },
          "replaceTypeCode": {
            "nullable": true,
            "$ref": "#/components/schemas/ReplaceTypeEnum"
          },
          "quantity": {
            "type": "number"
          },
          "sku": {
            "type": "string",
            "maxLength": 64
          },
          "ean": {
            "type": "number",
            "description": "European Article Number"
          },
          "productCode": {
            "type": "string"
          },
          "store_name_i18n": {
            "type": "string"
          },
          "storeId": {
            "type": "string"
          },
          "regularPrice": {
            "type": "number",
            "description": "Regular item price",
            "example": 2.25
          },
          "salePrice": {
            "type": "number",
            "description": "Sale item price",
            "example": 2.25
          },
          "price": {
            "type": "number",
            "description": "Saved item price",
            "example": 4.25
          },
          "productId": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyEntity"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCodeEnum"
          },
          "customerId": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerEntity"
          },
          "customerNote": {
            "type": "string"
          },
          "cart": {
            "$ref": "#/components/schemas/CartEntity"
          },
          "cartId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive",
          "productVatPercent",
          "productVatValue",
          "weight",
          "replaceTypeCode",
          "store_name_i18n"
        ]
      },
      "CartStatusEnum": {
        "type": "string",
        "enum": [
          "DELETED",
          "OPEN",
          "PAYMENT_PENDING",
          "PAID"
        ]
      },
      "CartEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerEntity"
          },
          "customerId": {
            "type": "string"
          },
          "store": {
            "$ref": "#/components/schemas/StoreEntity"
          },
          "address": {
            "$ref": "#/components/schemas/CartAddressEntity"
          },
          "storeId": {
            "type": "string"
          },
          "cartCode": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemEntity"
            }
          },
          "replaceTypeCode": {
            "$ref": "#/components/schemas/ReplaceTypeEnum"
          },
          "weight": {
            "type": "number"
          },
          "maxWeight": {
            "type": "number"
          },
          "cartStatus": {
            "$ref": "#/components/schemas/CartStatusEnum"
          },
          "cartItemQuantity": {
            "type": "number"
          },
          "cartProductQuantity": {
            "type": "number"
          },
          "totalAmount": {
            "type": "number",
            "example": 4.25,
            "description": "Order price without delivery fee"
          },
          "deliveryFee": {
            "type": "number",
            "example": 4.25,
            "description": "Delivery fee"
          }
        },
        "required": [
          "id",
          "isActive",
          "replaceTypeCode"
        ]
      },
      "CustomerSettingsEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "customerLanguage": {
            "$ref": "#/components/schemas/LanguageEntity"
          },
          "customerLanguageCode": {
            "$ref": "#/components/schemas/LangCodeEnum"
          },
          "phoneCountryCode": {
            "type": "string",
            "maxLength": 6
          },
          "phoneNumber": {
            "type": "string",
            "maxLength": 15
          },
          "nationality": {
            "$ref": "#/components/schemas/NationalityEntity"
          },
          "nationalityCode": {
            "type": "string"
          },
          "salutation": {
            "$ref": "#/components/schemas/SalutationEnum"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string",
            "maxLength": 400
          },
          "customerNumber": {
            "type": "string",
            "maxLength": 200
          },
          "inviteCode": {
            "type": "string",
            "maxLength": 200
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "CustomerNotificationSettingsEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "newProductArrivals": {
            "type": "boolean"
          },
          "sales": {
            "type": "boolean"
          },
          "deliveryStatusChange": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "ManagerRoleEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive"
        ]
      },
      "ManagerSettingsEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "managerLanguage": {
            "$ref": "#/components/schemas/LanguageEntity"
          },
          "managerLanguageCode": {
            "$ref": "#/components/schemas/LangCodeEnum"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "nationality": {
            "$ref": "#/components/schemas/NationalityEntity"
          },
          "nationalityCode": {
            "type": "string"
          },
          "salutation": {
            "$ref": "#/components/schemas/SalutationEnum"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "managerNumber": {
            "type": "string",
            "maxLength": 200
          }
        },
        "required": [
          "id",
          "isActive",
          "managerLanguageCode"
        ]
      },
      "ManagerEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "tempPassword": {
            "type": "string"
          },
          "forgotDateTime": {
            "type": "string"
          },
          "rightToBeForgotten": {
            "type": "boolean"
          },
          "forgotUrl": {
            "type": "string"
          },
          "isEmailVerified": {
            "type": "boolean"
          },
          "isTermsAndConditionsAgreed": {
            "type": "boolean"
          },
          "lastLoginDate": {
            "type": "string"
          },
          "isOnline": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "settingsId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "managerRole": {
            "$ref": "#/components/schemas/ManagerRoleEntity"
          },
          "settings": {
            "$ref": "#/components/schemas/ManagerSettingsEntity"
          }
        },
        "required": [
          "id",
          "isActive",
          "email",
          "password",
          "tempPassword",
          "forgotDateTime",
          "rightToBeForgotten",
          "forgotUrl",
          "isEmailVerified",
          "isTermsAndConditionsAgreed",
          "lastLoginDate",
          "isOnline",
          "note",
          "appVersion",
          "role"
        ]
      },
      "CustomerBanEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "managerId": {
            "type": "string"
          },
          "managerComment": {
            "type": "string",
            "maxLength": 300
          },
          "startDateTime": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string"
          },
          "manager": {
            "$ref": "#/components/schemas/ManagerEntity"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerEntity"
          }
        },
        "required": [
          "id",
          "isActive",
          "customerId",
          "managerId",
          "startDateTime"
        ]
      },
      "CustomerEmailCodeEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "code": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "expires": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerEntity"
          }
        },
        "required": [
          "code",
          "token",
          "expires",
          "customerId"
        ]
      },
      "CustomerEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "create_date": {
            "format": "date-time",
            "type": "string"
          },
          "update_date": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_date": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "tempPassword": {
            "type": "string"
          },
          "forgotDateTime": {
            "type": "string"
          },
          "rightToBeForgotten": {
            "type": "boolean"
          },
          "forgotUrl": {
            "type": "string"
          },
          "isEmailVerified": {
            "type": "boolean"
          },
          "isTermsAndConditionsAgreed": {
            "type": "boolean"
          },
          "lastLoginDate": {
            "type": "string"
          },
          "isOnline": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "settingsId": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/CustomerRoleEnum"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerAddressEntity"
            }
          },
          "carts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartEntity"
            }
          },
          "settings": {
            "$ref": "#/components/schemas/CustomerSettingsEntity"
          },
          "notificationSettings": {
            "$ref": "#/components/schemas/CustomerNotificationSettingsEntity"
          },
          "bans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerBanEntity"
            }
          },
          "customerTags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isPhoneNumberVerified": {
            "type": "boolean"
          },
          "emailCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerEmailCodeEntity"
            }
          }
        },
        "required": [
          "id",
          "email",
          "password",
          "tempPassword",
          "forgotDateTime",
          "rightToBeForgotten",
          "forgotUrl",
          "isEmailVerified",
          "isTermsAndConditionsAgreed",
          "lastLoginDate",
          "isOnline",
          "note",
          "appVersion",
          "role",
          "isPhoneNumberVerified"
        ]
      },
      "ShoppingListCreateInput": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "storeId",
          "name"
        ]
      },
      "ShoppingListTypeEnum": {
        "type": "string",
        "enum": [
          "PURCHASED_PRODUCTS",
          "CUSTOM"
        ]
      },
      "ShoppingListStoreDto": {
        "type": "object",
        "properties": {
          "name_public_long_i18n": {
            "type": "string"
          },
          "name_public_short_i18n": {
            "type": "string"
          }
        },
        "required": [
          "name_public_long_i18n",
          "name_public_short_i18n"
        ]
      },
      "ShoppingListProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "linkId": {
            "type": "string"
          },
          "discount": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "salePrice": {
            "type": "string"
          },
          "regularPrice": {
            "type": "string"
          },
          "subcategoryName": {
            "type": "string"
          },
          "subcategoryCode": {
            "type": "string"
          },
          "categoryCode": {
            "type": "string"
          },
          "inCart": {
            "type": "number",
            "description": "The number of products in the user's cart"
          },
          "basePrice": {
            "type": "string"
          },
          "baseSize": {
            "type": "string"
          },
          "productSize": {
            "type": "string"
          },
          "vatPercent": {
            "type": "number"
          },
          "vat": {
            "type": "string"
          },
          "isAlcohol": {
            "type": "boolean"
          },
          "isCustomAgeRestriction": {
            "type": "boolean"
          },
          "ageRestriction": {
            "type": "number"
          },
          "isBio": {
            "type": "boolean",
            "description": "is bio product"
          },
          "isFrozen": {
            "type": "boolean",
            "description": "frozen product"
          },
          "isTobacco": {
            "type": "boolean",
            "description": "is tobacco product"
          },
          "isVegan": {
            "type": "boolean",
            "description": "is vegan product"
          },
          "isVegetarian": {
            "type": "boolean",
            "description": "is vegetarian product"
          },
          "isLactoseFree": {
            "type": "boolean",
            "description": "is Lactose Free product"
          },
          "isGlutenFree": {
            "type": "boolean",
            "description": "is Gluten Free product"
          },
          "isFairTrade": {
            "type": "boolean",
            "description": "is Fair Trade product"
          },
          "outOfStock": {
            "type": "boolean"
          },
          "counter": {
            "type": "number"
          }
        },
        "required": [
          "productId",
          "linkId",
          "imageUrl",
          "name_i18n",
          "price",
          "regularPrice",
          "subcategoryName",
          "subcategoryCode",
          "categoryCode",
          "inCart",
          "basePrice",
          "baseSize",
          "productSize",
          "vatPercent",
          "vat",
          "isAlcohol",
          "isCustomAgeRestriction",
          "outOfStock",
          "counter"
        ]
      },
      "ShoppingListDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "storeId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "listType": {
            "$ref": "#/components/schemas/ShoppingListTypeEnum"
          },
          "store": {
            "$ref": "#/components/schemas/ShoppingListStoreDto"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShoppingListProductDto"
            }
          }
        },
        "required": [
          "id",
          "storeId",
          "customerId",
          "listType"
        ]
      },
      "ShoppingListRenameInput": {
        "type": "object",
        "properties": {
          "listId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "listId",
          "name"
        ]
      },
      "ShoppingListProductLinkInput": {
        "type": "object",
        "properties": {
          "listId": {
            "type": "string"
          },
          "productLinkId": {
            "type": "string"
          }
        },
        "required": [
          "listId",
          "productLinkId"
        ]
      },
      "CreateCartFromShoppingListInput": {
        "type": "object",
        "properties": {
          "listId": {
            "type": "string"
          }
        },
        "required": [
          "listId"
        ]
      },
      "VendorTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "count": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "name_i18n",
          "code",
          "count"
        ]
      },
      "PageableVendorTypesDto": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          },
          "categoryCode": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorTypeDto"
            }
          }
        },
        "required": [
          "count",
          "total",
          "page",
          "pageCount",
          "categoryCode",
          "data"
        ]
      },
      "PageableStoreDto": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreDto"
            }
          }
        },
        "required": [
          "count",
          "total",
          "page",
          "pageCount",
          "data"
        ]
      },
      "SubcategoryDto": {
        "type": "object",
        "properties": {
          "name_i18n": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "categoryCode": {
            "type": "string"
          },
          "productCount": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          },
          "imageUrl": {
            "type": "string"
          }
        },
        "required": [
          "name_i18n",
          "code",
          "categoryCode",
          "productCount",
          "imageUrl"
        ]
      },
      "CategoryDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "productCount": {
            "type": "number"
          },
          "subcategoriesCount": {
            "type": "number"
          },
          "subcategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubcategoryDto"
            }
          },
          "imageUrl": {
            "type": "string"
          },
          "storeId": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "name_i18n",
          "productCount",
          "subcategoriesCount",
          "subcategories",
          "imageUrl",
          "storeId"
        ]
      },
      "ProductDetailsDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "linkId": {
            "type": "string"
          },
          "discount": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "name_i18n": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "salePrice": {
            "type": "string"
          },
          "regularPrice": {
            "type": "string"
          },
          "subcategoryName": {
            "type": "string"
          },
          "subcategoryCode": {
            "type": "string"
          },
          "categoryCode": {
            "type": "string"
          },
          "inCart": {
            "type": "number",
            "description": "The number of products in the user's cart"
          },
          "basePrice": {
            "type": "string"
          },
          "baseSize": {
            "type": "string"
          },
          "productSize": {
            "type": "string"
          },
          "vatPercent": {
            "type": "number"
          },
          "vat": {
            "type": "string"
          },
          "isAlcohol": {
            "type": "boolean"
          },
          "isCustomAgeRestriction": {
            "type": "boolean"
          },
          "ageRestriction": {
            "type": "number"
          },
          "isBio": {
            "type": "boolean",
            "description": "is bio product"
          },
          "isFrozen": {
            "type": "boolean",
            "description": "frozen product"
          },
          "isTobacco": {
            "type": "boolean",
            "description": "is tobacco product"
          },
          "isVegan": {
            "type": "boolean",
            "description": "is vegan product"
          },
          "isVegetarian": {
            "type": "boolean",
            "description": "is vegetarian product"
          },
          "isLactoseFree": {
            "type": "boolean",
            "description": "is Lactose Free product"
          },
          "isGlutenFree": {
            "type": "boolean",
            "description": "is Gluten Free product"
          },
          "isFairTrade": {
            "type": "boolean",
            "description": "is Fair Trade product"
          },
          "outOfStock": {
            "type": "boolean"
          },
          "alcoholValue": {
            "type": "string"
          },
          "description_i18n": {
            "type": "string"
          },
          "imageUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ean": {
            "type": "number"
          },
          "weight": {
            "type": "number",
            "description": "Product weight in grams"
          },
          "sku": {
            "type": "string"
          },
          "nutriScore": {
            "default": "UNKNOWN",
            "$ref": "#/components/schemas/NutriScoreEnum"
          },
          "deposit": {
            "type": "string"
          },
          "categoryName": {
            "type": "string"
          },
          "nutritional_data": {
            "$ref": "#/components/schemas/NutritionalDataDto"
          },
          "productBrandName_i18n": {
            "type": "string"
          },
          "manufacturer_i18n": {
            "type": "string"
          },
          "ingredients_i18n": {
            "type": "string"
          },
          "allergenic_information_i18n": {
            "type": "string"
          }
        },
        "required": [
          "productId",
          "linkId",
          "imageUrl",
          "name_i18n",
          "price",
          "regularPrice",
          "subcategoryName",
          "subcategoryCode",
          "categoryCode",
          "inCart",
          "basePrice",
          "baseSize",
          "productSize",
          "vatPercent",
          "vat",
          "isAlcohol",
          "isCustomAgeRestriction",
          "outOfStock",
          "alcoholValue",
          "description_i18n",
          "imageUrls",
          "ean",
          "weight",
          "sku",
          "nutriScore",
          "categoryName"
        ]
      },
      "TimeSlotDto": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "Total number of orders that can be created in this slot"
          },
          "available": {
            "type": "number",
            "description": "Number of orders that can be created in this slot"
          },
          "booked": {
            "type": "number",
            "description": "Number of orders that already created in this slot"
          },
          "bookedPercent": {
            "type": "number"
          },
          "isCustom": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "tz": {
            "type": "string"
          },
          "dateTimeStart": {
            "type": "number"
          },
          "dateTimeEnd": {
            "type": "number"
          },
          "time": {
            "type": "string"
          },
          "dateString": {
            "type": "string"
          },
          "duration": {
            "type": "number",
            "description": "Duration in minutes"
          },
          "deliveryFee": {
            "type": "string"
          }
        },
        "required": [
          "total",
          "available",
          "booked",
          "bookedPercent",
          "isCustom",
          "isActive",
          "tz",
          "dateTimeStart",
          "dateTimeEnd",
          "time",
          "dateString",
          "duration",
          "deliveryFee"
        ]
      },
      "StoreSchedulerDayDto": {
        "type": "object",
        "properties": {
          "weekDay": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "slots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSlotDto"
            }
          },
          "totalOrders": {
            "type": "number",
            "description": "Total number of orders that can be created in this day"
          },
          "bookedOrders": {
            "type": "number",
            "description": "Total number of orders that is booked for this day"
          },
          "storeIsClosed": {
            "type": "boolean"
          }
        },
        "required": [
          "weekDay",
          "date",
          "slots",
          "totalOrders",
          "bookedOrders",
          "storeIsClosed"
        ]
      },
      "ReservationInput": {
        "type": "object",
        "properties": {
          "deliveryDate": {
            "type": "number"
          }
        },
        "required": [
          "deliveryDate"
        ]
      },
      "ExceptionCodeEnum": {
        "type": "string",
        "enum": [
          "SERVER_ERROR",
          "CURRENTLY_NO_INSTANT_DELIVERY"
        ]
      },
      "ExceptionDto": {
        "type": "object",
        "properties": {
          "exceptionCode": {
            "description": "Exception code",
            "example": "SERVER_ERROR",
            "$ref": "#/components/schemas/ExceptionCodeEnum"
          },
          "message": {
            "type": "string",
            "description": "Exception message",
            "example": "Store not found"
          },
          "status": {
            "type": "number",
            "description": "Exception status code",
            "example": 404
          }
        },
        "required": [
          "exceptionCode",
          "message",
          "status"
        ]
      }
    }
  }
}